{
    "examRole": "DBA",
    "displayName": "MongoDB DBA Exam",
    "studentExamDates": [
        {
            "id": "5d17796216d2372b7aaf35a5",
            "submitDate": "2019-06-29T14:44:54.599000Z"
        },
        {
            "id": "5d177924eb88831b1eb5d780",
            "submitDate": "2019-06-29T14:43:52.352000Z"
        },
        {
            "id": "5d1778d116d2372b7aaf35a2",
            "submitDate": "2019-06-29T14:42:34.164000Z"
        },
        {
            "id": "5d1777fe16d2372b7aaf359f",
            "submitDate": "2019-06-29T14:39:30.034000Z"
        },
        {
            "id": "5d176bcfeb8883736bb5d788",
            "submitDate": "2019-06-29T14:23:32.395000Z"
        }
    ],
    "studentExam": {
        "id": "5d17796216d2372b7aaf35a5",
        "userId": 703428,
        "score": 0,
        "total": 60,
        "sections": [
            {
                "id": "a38a72b3300bda14ca31cd75",
                "name": "Philosophy & Features",
                "total": 3,
                "problems": [
                    {
                        "id": "5c61d1955034bacb99c6e174",
                        "correct": false,
                        "problemType": "checkAllThatApply",
                        "text": "Which of the following value types are supported in regular MongoDB collections?\nDo not take into account <tt class=\"docutils literal\">gridFS</tt>.",
                        "bookmarked": false,
                        "choices": [
                            {
                                "text": "binary",
                                "correct": false,
                                "checked": false
                            },
                            {
                                "text": "string",
                                "correct": true,
                                "checked": false
                            },
                            {
                                "text": "integer",
                                "correct": true,
                                "checked": false
                            }
                        ],
                        "answerExplanation": "<p><strong>Correct answers</strong></p>\n<ul class=\"simple\">\n<li>string</li>\n<li>integer</li>\n</ul>\n<p><strong>Incorrect answers</strong></p>\n<ul class=\"simple\">\n<li><strong>binary</strong>. Binary data cannot be loaded directly into MongoDB (unless using gridFS).</li>\n</ul>\n"
                    },
                    {
                        "id": "5c38fb79a16793843eb61bc1",
                        "correct": false,
                        "problemType": "checkAllThatApply",
                        "text": "What information can be obtained from running <tt class=\"docutils literal\"><span class=\"pre\">rs.serverStatus()['repl']</span></tt>\non a secondary replica set node?",
                        "bookmarked": false,
                        "choices": [
                            {
                                "text": "the name, port and IP of the primary node",
                                "correct": true,
                                "checked": false
                            },
                            {
                                "text": "replica set name",
                                "correct": true,
                                "checked": false
                            },
                            {
                                "text": "whether the node is a primary or a secondary",
                                "correct": true,
                                "checked": false
                            }
                        ],
                        "answerExplanation": "<p>All answers are correct.</p>\n<p><tt class=\"docutils literal\"><span class=\"pre\">rs.serverStatus()['repl']</span></tt> provides information aboout the categories\nlisted and more, such as the status of the replica set and its members. This\nparticular command's output is almost identical to the <tt class=\"docutils literal\">rs.isMaster</tt> command\nexcept that it includes the <tt class=\"docutils literal\">rbid</tt> field.</p>\n"
                    },
                    {
                        "id": "5c8bc0c3daa4f4e97a679efb",
                        "correct": false,
                        "problemType": "checkAllThatApply",
                        "text": "<p>Consider the following aggregation pipeline:</p>\n<pre class=\"code js literal-block\">\n<span class=\"name other\">use</span> <span class=\"name other\">services</span>\n\n<span class=\"name other\">db</span><span class=\"punctuation\">.</span><span class=\"name other\">restaurants</span><span class=\"punctuation\">.</span><span class=\"name other\">aggregate</span><span class=\"punctuation\">([</span>\n  <span class=\"punctuation\">{</span>\n    <span class=\"literal string double\">&quot;$sort&quot;</span> <span class=\"operator\">:</span> <span class=\"punctuation\">{</span><span class=\"literal string double\">&quot;rating&quot;</span> <span class=\"operator\">:</span> <span class=\"operator\">-</span><span class=\"literal number integer\">1</span><span class=\"punctuation\">}</span>\n  <span class=\"punctuation\">},</span>\n  <span class=\"punctuation\">{</span>\n    <span class=\"literal string double\">&quot;$match&quot;</span><span class=\"operator\">:</span> <span class=\"punctuation\">{</span>\n      <span class=\"literal string double\">&quot;reviews&quot;</span><span class=\"operator\">:</span> <span class=\"punctuation\">{</span> <span class=\"literal string double\">&quot;$gte&quot;</span><span class=\"operator\">:</span> <span class=\"literal number integer\">5</span> <span class=\"punctuation\">}</span>\n    <span class=\"punctuation\">}</span>\n  <span class=\"punctuation\">}</span>\n<span class=\"punctuation\">])</span>\n</pre>\n<p>What optimizations will the optimizer make to the stages?</p>\n",
                        "bookmarked": false,
                        "choices": [
                            {
                                "text": "the result set will be limited to reduce network latency",
                                "correct": false,
                                "checked": false
                            },
                            {
                                "text": "the sort order will be reversed to the direction of the shard key",
                                "correct": false,
                                "checked": false
                            },
                            {
                                "text": "the <tt class=\"docutils literal\">$match</tt> stage will be moved to before the <tt class=\"docutils literal\">$sort</tt> stage",
                                "correct": true,
                                "checked": false
                            }
                        ],
                        "answerExplanation": "The optimizer will re-order the match stage to before the sort."
                    }
                ],
                "score": 0
            },
            {
                "id": "ba1c1d7c799e90c738b6b8dc",
                "name": "CRUD",
                "total": 5,
                "problems": [
                    {
                        "id": "6b5aae2236942e83e9a361db",
                        "correct": false,
                        "problemType": "checkAllThatApply",
                        "text": "<p>The following <tt class=\"docutils literal\">find</tt> command, run from in a client application using the\ndefault cursor settings, matches 150 documents in the server:</p>\n<pre class=\"code js literal-block\">\n<span class=\"name other\">db</span><span class=\"punctuation\">.</span><span class=\"name other\">users</span><span class=\"punctuation\">.</span><span class=\"name other\">find</span><span class=\"punctuation\">({</span> <span class=\"literal string double\">&quot;comments&quot;</span><span class=\"operator\">:</span> <span class=\"punctuation\">{</span> <span class=\"literal string double\">&quot;$gte&quot;</span><span class=\"operator\">:</span> <span class=\"literal number integer\">200</span> <span class=\"punctuation\">}})</span>\n</pre>\n<p>Once the initial batch of results gets exhausted in the client, which command\nwill be sent to the server?</p>\n",
                        "bookmarked": false,
                        "choices": [
                            {
                                "text": "<tt class=\"docutils literal\">find</tt> command",
                                "correct": false,
                                "checked": false
                            },
                            {
                                "text": "<tt class=\"docutils literal\">getMore</tt> command",
                                "correct": true,
                                "checked": false
                            },
                            {
                                "text": "No command will be sent if the cursor batch size is greater or equals to 150.",
                                "correct": true,
                                "checked": false
                            }
                        ],
                        "answerExplanation": "<p><strong>Incorrect Answer</strong></p>\n<ul>\n<li><p class=\"first\"><tt class=\"docutils literal\">find</tt> command</p>\n<p>The <tt class=\"docutils literal\">find</tt> command is sent to open the cursor. It is not used to\nretrieve / iterate over batches of documents for an existing open cursor.</p>\n</li>\n</ul>\n<p><strong>Correct Answers</strong></p>\n<ul>\n<li><p class=\"first\"><tt class=\"docutils literal\">getMore</tt> command</p>\n<p>This is correct. After the initial batch of cursor documents gets exhausted, on client side,\na new batch of documents is requested by emitting a <a class=\"reference external\" href=\"https://docs.mongodb.com/manual/reference/command/getMore/#dbcmd.getMore\">getMore</a> command to the server.\nThe client application does not need to perform this operation. The driver will\nhandle the cursor results iteration.</p>\n</li>\n<li><p class=\"first\">No command will be sent if the cursor batch size is greater or equals to 150.</p>\n<p>In case the the cursor gets exhausted but there are no more results to return,\nsince the initial batch already encompasses all the matching documents, no\ncommand needs to be sent back to the server.</p>\n</li>\n</ul>\n"
                    },
                    {
                        "id": "5c2283d055aab52fafcefff4",
                        "correct": false,
                        "problemType": "multipleChoice",
                        "text": "<p>Given this document:</p>\n<pre class=\"code js literal-block\">\n<span class=\"punctuation\">{</span>\n  <span class=\"literal string double\">&quot;title&quot;</span><span class=\"operator\">:</span> <span class=\"literal string double\">&quot;Harry Potter&quot;</span><span class=\"punctuation\">,</span>\n  <span class=\"literal string double\">&quot;reviews&quot;</span><span class=\"operator\">:</span> <span class=\"punctuation\">[</span><span class=\"literal number integer\">1</span><span class=\"punctuation\">,</span><span class=\"literal number integer\">3</span><span class=\"punctuation\">,</span><span class=\"literal number integer\">5</span><span class=\"punctuation\">]</span>\n<span class=\"punctuation\">}</span>\n</pre>\n<p>How will the following command update the <strong>reviews</strong> array field?</p>\n<pre class=\"code js literal-block\">\n<span class=\"name other\">db</span><span class=\"punctuation\">.</span><span class=\"name other\">books</span><span class=\"punctuation\">.</span><span class=\"name other\">updateOne</span><span class=\"punctuation\">(</span>\n   <span class=\"punctuation\">{</span> <span class=\"literal string double\">&quot;title&quot;</span><span class=\"operator\">:</span> <span class=\"literal string double\">&quot;Harry Potter&quot;</span> <span class=\"punctuation\">},</span>\n   <span class=\"punctuation\">{</span> <span class=\"literal string double\">&quot;$push&quot;</span><span class=\"operator\">:</span> <span class=\"punctuation\">{</span> <span class=\"literal string double\">&quot;reviews&quot;</span><span class=\"operator\">:</span> <span class=\"punctuation\">{</span> <span class=\"literal string double\">&quot;$each&quot;</span><span class=\"operator\">:</span> <span class=\"punctuation\">[</span><span class=\"literal number integer\">1</span><span class=\"punctuation\">,</span> <span class=\"literal number integer\">2</span><span class=\"punctuation\">]</span> <span class=\"punctuation\">}</span> <span class=\"punctuation\">}</span> <span class=\"punctuation\">}</span>\n<span class=\"punctuation\">)</span>\n</pre>\n",
                        "bookmarked": false,
                        "choices": [
                            {
                                "text": "add the two elements to the array\n<tt class=\"docutils literal\">&quot;reviews&quot;: [1, 3, 5, 1, 2]</tt>",
                                "correct": true,
                                "checked": false
                            },
                            {
                                "text": "overwrite the first two elements in the array with the new items\n<tt class=\"docutils literal\">&quot;reviews&quot;: [1, 2, 5]</tt>",
                                "correct": false,
                                "checked": false
                            },
                            {
                                "text": "not modify the field and return an error instead, since the correct operator in this case would be <strong>$inc</strong>\n<tt class=\"docutils literal\">&quot;reviews&quot;: [1, 3, 5]</tt>",
                                "correct": false,
                                "checked": false
                            },
                            {
                                "text": "add the two new reviews as a sub-array with two elements\n<tt class=\"docutils literal\">&quot;reviews&quot;: [1, 3, 5, [1, 2]]</tt>",
                                "correct": false,
                                "checked": false
                            },
                            {
                                "text": "replace existing array with the two new items\n<tt class=\"docutils literal\">&quot;reviews&quot;: [1, 2]</tt>",
                                "correct": false,
                                "checked": false
                            }
                        ],
                        "answerExplanation": "<p><strong>Incorrect Answers:</strong></p>\n<ul class=\"simple\">\n<li><em>replace existing array with the two new elements</em></li>\n<li><em>overwrite the first two elements in the array with the new elements</em></li>\n<li><a href=\"#id1\"><span class=\"problematic\" id=\"id2\">*</span></a>not modify the field and return an error instead, since the correct operator</li>\n</ul>\n<p>in this case would be* <strong>$inc</strong></p>\n<p>These answers are incorrect because the <tt class=\"docutils literal\">$push</tt> operator does not\n<strong>overwrite</strong> or <strong>replace</strong> array elements, it instead adds elements to the\narray.</p>\n<ul class=\"simple\">\n<li><em>add the two new reviews as a sub-array with two elements</em></li>\n</ul>\n<p>This answer is incorrect because the use of <tt class=\"docutils literal\">$each</tt> operator prevents the\nreviews from being added as a single array element and instead directs the\nreviews to be pushed as individual elements to the array.</p>\n<hr class=\"docutils\" />\n<p><strong>Correct Answer:</strong></p>\n<ul class=\"simple\">\n<li><em>add additional two items to the array</em></li>\n</ul>\n<p>This command applies the <tt class=\"docutils literal\">$push</tt> operation to the <tt class=\"docutils literal\">reviews</tt> array for each\nelement of the array <tt class=\"docutils literal\">[1, 2]</tt>.</p>\n<pre class=\"code js literal-block\">\n<span class=\"literal string double\">&quot;reviews&quot;</span><span class=\"operator\">:</span> <span class=\"punctuation\">[</span><span class=\"literal number integer\">1</span><span class=\"punctuation\">,</span> <span class=\"literal number integer\">3</span><span class=\"punctuation\">,</span> <span class=\"literal number integer\">5</span><span class=\"punctuation\">,</span> <span class=\"literal number integer\">1</span><span class=\"punctuation\">,</span> <span class=\"literal number integer\">2</span><span class=\"punctuation\">]</span>\n</pre>\n"
                    },
                    {
                        "id": "5c2647416c912790f339324d",
                        "correct": false,
                        "problemType": "multipleChoice",
                        "text": "Which of the following is a valid regular expression query, searching the\n<tt class=\"docutils literal\">dinosaurs</tt> collection for every name ending in <tt class=\"docutils literal\">odon</tt>?",
                        "bookmarked": false,
                        "choices": [
                            {
                                "text": "<tt class=\"docutils literal\"><span class=\"pre\">db.dinosaurs.find({name:</span> { $regex: <span class=\"pre\">/.*odon$/</span> }})</tt>",
                                "correct": true,
                                "checked": false
                            },
                            {
                                "text": "<tt class=\"docutils literal\"><span class=\"pre\">db.dinosaurs.find({name:</span> { $text: <span class=\"pre\">/.*odon$/</span> }})</tt>",
                                "correct": false,
                                "checked": false
                            },
                            {
                                "text": "<tt class=\"docutils literal\"><span class=\"pre\">db.dinosaurs.find({name:</span> { $regex: <span class=\"pre\">/.*odon.*/</span> }})</tt>",
                                "correct": false,
                                "checked": false
                            },
                            {
                                "text": "<tt class=\"docutils literal\"><span class=\"pre\">db.dinosaurs.find({name:</span> { $in: <span class=\"pre\">/^.*odon/</span> }})</tt>",
                                "correct": false,
                                "checked": false
                            },
                            {
                                "text": "<tt class=\"docutils literal\"><span class=\"pre\">db.dinosaurs.find({name:</span> { $text: /odon/ }})</tt>",
                                "correct": false,
                                "checked": false
                            }
                        ],
                        "answerExplanation": "<p>The correct answer is <tt class=\"docutils literal\"><span class=\"pre\">db.dinosaurs.find({name:</span> { $regex: <span class=\"pre\">/.*odon$/</span> }})</tt>.\nThis regular expression will search all dinosaur names that match &quot;odon&quot; at\nthe end of the name because of the <tt class=\"docutils literal\">$</tt> regular expression operator.</p>\n<p>Why not <tt class=\"docutils literal\"><span class=\"pre\">db.dinosaurs.find({name:</span> { $regex: <span class=\"pre\">/.*odon.*/</span> }})</tt>? Because the end\nof line regular expression operator isn't specified, this would also match\ndinosuar names like <cite>Thecodontosaurus</cite>.</p>\n<p>All other options are incorrect, the <tt class=\"docutils literal\">$text</tt> and <tt class=\"docutils literal\">$in</tt> query operators do\nnot accept regular expressions.</p>\n<p>To learn more, see the following:</p>\n<ul class=\"simple\">\n<li>A regular expression <a class=\"reference external\" href=\"https://medium.com/factory-mind/regex-tutorial-a-simple-cheatsheet-by-examples-649dc1c3f285\">tutorial</a></li>\n<li><tt class=\"docutils literal\">$regex</tt> <a class=\"reference external\" href=\"https://docs.mongodb.com/manual/reference/operator/query/regex/\">documentation</a></li>\n</ul>\n"
                    },
                    {
                        "id": "5c1d4d44b0d31368e816dd59",
                        "correct": false,
                        "problemType": "checkAllThatApply",
                        "text": "<p>Consider these two commands:</p>\n<ul class=\"simple\">\n<li><tt class=\"docutils literal\">db.collection.find({ &quot;$and&quot;: [ { &quot;field1&quot;: 20 }, { &quot;field2&quot;: 10 } ] })</tt></li>\n<li><tt class=\"docutils literal\">db.collection.find({ &quot;field1&quot;: 20, &quot;field2&quot;: 10 })</tt></li>\n</ul>\n<p>Which of the following is true about these two commands?</p>\n",
                        "bookmarked": false,
                        "choices": [
                            {
                                "text": "The results will be different, because <tt class=\"docutils literal\">find</tt> will use the first argument for search and the second for projection",
                                "correct": false,
                                "checked": false
                            },
                            {
                                "text": "The results are the same, but one command is shorter than the other",
                                "correct": true,
                                "checked": false
                            },
                            {
                                "text": "The number of results will be different, because <tt class=\"docutils literal\">find</tt> uses <tt class=\"docutils literal\">$or</tt> by default and will return more documents as a result",
                                "correct": false,
                                "checked": false
                            }
                        ],
                        "answerExplanation": "<p><strong>Correct Answer:</strong></p>\n<p><em>The results are the same, but one command is shorter than the other</em></p>\n<blockquote>\nThese two queries will return the same results.</blockquote>\n<p><strong>Incorrect Answers:</strong></p>\n<p><em>The number of results will be different, because</em> <tt class=\"docutils literal\">find</tt> <em>uses</em> <tt class=\"docutils literal\">$or</tt> <em>by\ndefault and will return more documents as a result</em></p>\n<blockquote>\nWhen multiple fields are used in a <tt class=\"docutils literal\">find</tt> query it employs <tt class=\"docutils literal\">$and</tt> by\ndefault.</blockquote>\n<p><em>The results will be different, because</em> <tt class=\"docutils literal\">find</tt> <em>will use the first argument\nfor search and the second for projection</em></p>\n<blockquote>\nWhile <tt class=\"docutils literal\">find</tt> does use the second argument as a projection query, in this\nexample there was only one argument, which was the search query.</blockquote>\n"
                    },
                    {
                        "id": "5c2a65599dff049e58aabb00",
                        "correct": false,
                        "problemType": "checkAllThatApply",
                        "text": "<p>Consider the following query:</p>\n<pre class=\"code js literal-block\">\n<span class=\"name other\">db</span><span class=\"punctuation\">.</span><span class=\"name other\">groceries</span><span class=\"punctuation\">.</span><span class=\"name other\">find</span><span class=\"punctuation\">({</span> <span class=\"name other\">type</span><span class=\"operator\">:</span> <span class=\"literal string double\">&quot;produce&quot;</span> <span class=\"punctuation\">})</span>\n</pre>\n<p>Which of the following documents could be returned by this query?</p>\n",
                        "bookmarked": false,
                        "choices": [
                            {
                                "text": "<tt class=\"docutils literal\">{ name: &quot;celery&quot;, type: &quot;produce&quot;, USD_per_pound: 1.5 }</tt>",
                                "correct": true,
                                "checked": false
                            },
                            {
                                "text": "<tt class=\"docutils literal\">{ name: &quot;asparagus&quot;, type: &quot;produce&quot;, USD_per_pound: 5 }</tt>",
                                "correct": true,
                                "checked": false
                            },
                            {
                                "text": "<tt class=\"docutils literal\">{ name: &quot;cabbage&quot;, type: &quot;produce&quot;, USD_per_pound: 3 }</tt>",
                                "correct": true,
                                "checked": false
                            }
                        ],
                        "answerExplanation": "All answers are correct, because the query only specifies the key-value pair\n<tt class=\"docutils literal\">{ type: &quot;produce&quot; }</tt>, and all three documents contain this pair."
                    }
                ],
                "score": 0
            },
            {
                "id": "1c335bcc03bf293c28370a7a",
                "name": "Indexes",
                "total": 11,
                "problems": [
                    {
                        "id": "5c421f3c715fd7ac152d5bdc",
                        "correct": false,
                        "problemType": "multipleChoice",
                        "text": "Which data structure is used to store a newly created index in MongoDB?",
                        "bookmarked": false,
                        "choices": [
                            {
                                "text": "Hash list",
                                "correct": false,
                                "checked": false
                            },
                            {
                                "text": "Graph",
                                "correct": false,
                                "checked": false
                            },
                            {
                                "text": "B-tree",
                                "correct": true,
                                "checked": false
                            },
                            {
                                "text": "Heap",
                                "correct": false,
                                "checked": false
                            },
                            {
                                "text": "Binary Tree",
                                "correct": false,
                                "checked": false
                            }
                        ],
                        "answerExplanation": "<p>The correct answer is:</p>\n<ul class=\"simple\">\n<li>B-Tree</li>\n</ul>\n<p>All other answers are incorrect. B-tree is commonly used to store indexes as it\nhas an efficient lookup speed because you need fewer comparisons to find the\nvalue that they are looking for in a B-tree.</p>\n"
                    },
                    {
                        "id": "5c4799567ddbedadc75444b5",
                        "correct": false,
                        "problemType": "multipleChoice",
                        "text": "When creating an index on an array field, what type of index is created?",
                        "bookmarked": false,
                        "choices": [
                            {
                                "text": "text index",
                                "correct": false,
                                "checked": false
                            },
                            {
                                "text": "multikey index",
                                "correct": true,
                                "checked": false
                            },
                            {
                                "text": "single field index",
                                "correct": false,
                                "checked": false
                            },
                            {
                                "text": "hashed index",
                                "correct": false,
                                "checked": false
                            },
                            {
                                "text": "geospatial index",
                                "correct": false,
                                "checked": false
                            }
                        ],
                        "answerExplanation": "<p>The <strong>correct</strong> answer is:</p>\n<ul class=\"simple\">\n<li><em>multikey index</em></li>\n</ul>\n<p>All other answers are <strong>incorrect</strong> because:</p>\n<ul class=\"simple\">\n<li><em>single field index</em> is defined on a single field  that is not an array field</li>\n<li><em>geospatial index</em> is used to support efficient queries of geospatial data, using <em>2d indexes</em> and <em>2dsphere indexes</em> to return results</li>\n<li><em>text index</em> is supports searching for string content in a collection</li>\n<li><em>hashed index</em> is created to support hashed based sharding</li>\n</ul>\n"
                    },
                    {
                        "id": "5c40cdf06ea7d79dbccd5e03",
                        "correct": false,
                        "problemType": "checkAllThatApply",
                        "text": "<p>Consider the following index in the <tt class=\"docutils literal\">computers</tt> collection:</p>\n<pre class=\"code js literal-block\">\n<span class=\"punctuation\">{</span> <span class=\"name other\">processor</span><span class=\"operator\">:</span> <span class=\"literal number integer\">1</span><span class=\"punctuation\">,</span> <span class=\"name other\">price</span><span class=\"operator\">:</span> <span class=\"literal number integer\">1</span><span class=\"punctuation\">,</span> <span class=\"name other\">memoryGB</span><span class=\"operator\">:</span> <span class=\"operator\">-</span><span class=\"literal number integer\">1</span> <span class=\"punctuation\">}</span>\n</pre>\n<p>Which of the following queries could use this index for <strong>filtering</strong> and\n<strong>sorting</strong>?</p>\n",
                        "bookmarked": false,
                        "choices": [
                            {
                                "text": "<pre class=\"code js literal-block\">\n<span class=\"name other\">db</span><span class=\"punctuation\">.</span><span class=\"name other\">computers</span><span class=\"punctuation\">.</span><span class=\"name other\">find</span><span class=\"punctuation\">(</span> <span class=\"punctuation\">{</span> <span class=\"name other\">price</span><span class=\"operator\">:</span> <span class=\"punctuation\">{</span> <span class=\"name other\">$lt</span><span class=\"operator\">:</span> <span class=\"literal number integer\">1500</span> <span class=\"punctuation\">}</span> <span class=\"punctuation\">}</span> <span class=\"punctuation\">)</span>\n            <span class=\"punctuation\">.</span><span class=\"name other\">sort</span><span class=\"punctuation\">(</span> <span class=\"punctuation\">{</span> <span class=\"name other\">memoryGB</span><span class=\"operator\">:</span> <span class=\"operator\">-</span><span class=\"literal number integer\">1</span> <span class=\"punctuation\">}</span> <span class=\"punctuation\">)</span>\n</pre>\n",
                                "correct": false,
                                "checked": false
                            },
                            {
                                "text": "<pre class=\"code js literal-block\">\n<span class=\"name other\">db</span><span class=\"punctuation\">.</span><span class=\"name other\">computers</span><span class=\"punctuation\">.</span><span class=\"name other\">find</span><span class=\"punctuation\">(</span> <span class=\"punctuation\">{</span> <span class=\"name other\">processor</span><span class=\"operator\">:</span> <span class=\"literal string double\">&quot;i7&quot;</span> <span class=\"punctuation\">}</span> <span class=\"punctuation\">)</span>\n            <span class=\"punctuation\">.</span><span class=\"name other\">sort</span><span class=\"punctuation\">(</span> <span class=\"punctuation\">{</span> <span class=\"name other\">price</span><span class=\"operator\">:</span> <span class=\"literal number integer\">1</span> <span class=\"punctuation\">}</span> <span class=\"punctuation\">)</span>\n</pre>\n",
                                "correct": true,
                                "checked": false
                            },
                            {
                                "text": "<pre class=\"code js literal-block\">\n<span class=\"name other\">db</span><span class=\"punctuation\">.</span><span class=\"name other\">computers</span><span class=\"punctuation\">.</span><span class=\"name other\">find</span><span class=\"punctuation\">(</span> <span class=\"punctuation\">{</span> <span class=\"name other\">processor</span><span class=\"operator\">:</span> <span class=\"literal string double\">&quot;i9&quot;</span><span class=\"punctuation\">,</span> <span class=\"name other\">price</span><span class=\"operator\">:</span> <span class=\"punctuation\">{</span> <span class=\"name other\">$lt</span><span class=\"operator\">:</span> <span class=\"literal number integer\">2000</span> <span class=\"punctuation\">}</span> <span class=\"punctuation\">}</span> <span class=\"punctuation\">)</span>\n            <span class=\"punctuation\">.</span><span class=\"name other\">sort</span><span class=\"punctuation\">(</span> <span class=\"punctuation\">{</span> <span class=\"name other\">memoryGB</span><span class=\"operator\">:</span> <span class=\"operator\">-</span><span class=\"literal number integer\">1</span> <span class=\"punctuation\">}</span> <span class=\"punctuation\">)</span>\n</pre>\n",
                                "correct": true,
                                "checked": false
                            }
                        ],
                        "answerExplanation": "<p><strong>Correct Answers:</strong></p>\n<pre class=\"code js literal-block\">\n<span class=\"name other\">db</span><span class=\"punctuation\">.</span><span class=\"name other\">computers</span><span class=\"punctuation\">.</span><span class=\"name other\">find</span><span class=\"punctuation\">(</span> <span class=\"punctuation\">{</span> <span class=\"name other\">processor</span><span class=\"operator\">:</span> <span class=\"literal string double\">&quot;i9&quot;</span><span class=\"punctuation\">,</span> <span class=\"name other\">price</span><span class=\"operator\">:</span> <span class=\"punctuation\">{</span> <span class=\"name other\">$lt</span><span class=\"operator\">:</span> <span class=\"literal number integer\">2000</span> <span class=\"punctuation\">}</span> <span class=\"punctuation\">}</span> <span class=\"punctuation\">)</span>\n            <span class=\"punctuation\">.</span><span class=\"name other\">sort</span><span class=\"punctuation\">(</span> <span class=\"punctuation\">{</span> <span class=\"name other\">memoryGB</span><span class=\"operator\">:</span> <span class=\"operator\">-</span><span class=\"literal number integer\">1</span> <span class=\"punctuation\">}</span> <span class=\"punctuation\">)</span>\n</pre>\n<p>This answer is correct because the <strong>processor</strong>, <strong>price</strong>, and <strong>memoryGB</strong>\nform an index prefix.</p>\n<pre class=\"code js literal-block\">\n<span class=\"name other\">db</span><span class=\"punctuation\">.</span><span class=\"name other\">computers</span><span class=\"punctuation\">.</span><span class=\"name other\">find</span><span class=\"punctuation\">(</span> <span class=\"punctuation\">{</span> <span class=\"name other\">processor</span><span class=\"operator\">:</span> <span class=\"literal string double\">&quot;i7&quot;</span> <span class=\"punctuation\">}</span> <span class=\"punctuation\">)</span>\n            <span class=\"punctuation\">.</span><span class=\"name other\">sort</span><span class=\"punctuation\">(</span> <span class=\"punctuation\">{</span> <span class=\"name other\">price</span><span class=\"operator\">:</span> <span class=\"literal number integer\">1</span> <span class=\"punctuation\">}</span> <span class=\"punctuation\">)</span>\n</pre>\n<p>This answer is correct because the <strong>processor</strong> and <strong>price</strong> form an index\nprefix.</p>\n<p><strong>Incorrect Answer:</strong></p>\n<pre class=\"code js literal-block\">\n<span class=\"name other\">db</span><span class=\"punctuation\">.</span><span class=\"name other\">computers</span><span class=\"punctuation\">.</span><span class=\"name other\">find</span><span class=\"punctuation\">(</span> <span class=\"punctuation\">{</span> <span class=\"name other\">price</span><span class=\"operator\">:</span> <span class=\"punctuation\">{</span> <span class=\"name other\">$lt</span><span class=\"operator\">:</span> <span class=\"literal number integer\">1500</span> <span class=\"punctuation\">}</span> <span class=\"punctuation\">}</span> <span class=\"punctuation\">)</span>\n            <span class=\"punctuation\">.</span><span class=\"name other\">sort</span><span class=\"punctuation\">(</span> <span class=\"punctuation\">{</span> <span class=\"name other\">memoryGB</span><span class=\"operator\">:</span> <span class=\"operator\">-</span><span class=\"literal number integer\">1</span> <span class=\"punctuation\">}</span> <span class=\"punctuation\">)</span>\n</pre>\n<p>This answer is incorrect because the <strong>price</strong> and <strong>memoryGB</strong> do NOT form an\nindex prefix.</p>\n"
                    },
                    {
                        "id": "5c4a2618515994c2f5d2882e",
                        "correct": false,
                        "problemType": "multipleChoice",
                        "text": "<p>Given the following query:</p>\n<pre class=\"code js literal-block\">\n<span class=\"name other\">db</span><span class=\"punctuation\">.</span><span class=\"name other\">songs</span><span class=\"punctuation\">.</span><span class=\"name other\">find</span><span class=\"punctuation\">(</span>\n  <span class=\"punctuation\">{</span> <span class=\"literal string double\">&quot;seconds&quot;</span><span class=\"operator\">:</span> <span class=\"punctuation\">{</span> <span class=\"literal string double\">&quot;$lt&quot;</span><span class=\"operator\">:</span> <span class=\"literal number integer\">400</span> <span class=\"punctuation\">},</span> <span class=\"literal string double\">&quot;genre&quot;</span><span class=\"operator\">:</span> <span class=\"literal string double\">&quot;rock&quot;</span> <span class=\"punctuation\">}</span>\n<span class=\"punctuation\">).</span><span class=\"name other\">sort</span><span class=\"punctuation\">(</span>\n  <span class=\"punctuation\">{</span> <span class=\"literal string double\">&quot;rating&quot;</span><span class=\"operator\">:</span> <span class=\"literal number integer\">1</span> <span class=\"punctuation\">}</span>\n<span class=\"punctuation\">)</span>\n</pre>\n<p>Which index on the <em>songs</em> collection will be the most performant for the above\nquery?</p>\n",
                        "bookmarked": false,
                        "choices": [
                            {
                                "text": "<tt class=\"docutils literal\">{&quot;genre&quot;: 1, &quot;seconds&quot;: 1, &quot;rating&quot;: 1}</tt>",
                                "correct": false,
                                "checked": false
                            },
                            {
                                "text": "<tt class=\"docutils literal\">{&quot;genre&quot;: 1, &quot;rating&quot;: 1, &quot;seconds&quot;: 1}</tt>",
                                "correct": true,
                                "checked": false
                            },
                            {
                                "text": "<tt class=\"docutils literal\">{&quot;rating&quot;: 1, &quot;genre&quot;: 1, &quot;seconds&quot;: 1}</tt>",
                                "correct": false,
                                "checked": false
                            },
                            {
                                "text": "<tt class=\"docutils literal\">{&quot;seconds&quot;: 1, &quot;genre&quot;: 1, &quot;rating&quot;: 1}</tt>",
                                "correct": false,
                                "checked": false
                            },
                            {
                                "text": "<tt class=\"docutils literal\">{&quot;rating&quot;: 1, &quot;seconds&quot;: 1, &quot;genre&quot;: 1}</tt>",
                                "correct": false,
                                "checked": false
                            }
                        ],
                        "answerExplanation": "<p>The <strong>correct</strong> answer is</p>\n<ul class=\"simple\">\n<li><tt class=\"docutils literal\">{&quot;genre&quot;: 1, &quot;rating&quot;: 1, &quot;seconds&quot;: 1}</tt></li>\n</ul>\n<p>Making the following answers <strong>incorrect</strong></p>\n<ul class=\"simple\">\n<li><tt class=\"docutils literal\">{&quot;genre&quot;: 1, &quot;seconds&quot;: 1, &quot;rating&quot;: 1}</tt></li>\n<li><tt class=\"docutils literal\">{&quot;rating&quot;: 1, &quot;genre&quot;: 1, &quot;seconds&quot;: 1}</tt></li>\n<li><tt class=\"docutils literal\">{&quot;rating&quot;: 1, &quot;seconds&quot;: 1, &quot;genre&quot;: 1}</tt></li>\n<li><tt class=\"docutils literal\">{&quot;seconds&quot;: 1, &quot;genre&quot;: 1, &quot;rating&quot;: 1}</tt></li>\n</ul>\n<p>The most efficient index for the given query should follow the <strong>equality,\nsort, range</strong> rule, where the compound index is built in this order for a query\nthat employs equality, range and sort conditions in it. This rule helps to\navoid inefficient operations such as a full collection scan or in\nmemory sort.</p>\n"
                    },
                    {
                        "id": "5c41e09005d6309c6ca4a6f8",
                        "correct": false,
                        "problemType": "multipleChoice",
                        "text": "What is the default mode when using <tt class=\"docutils literal\">explain</tt> to analyze a query?",
                        "bookmarked": false,
                        "choices": [
                            {
                                "text": "<tt class=\"docutils literal\">allPlansExecution</tt>",
                                "correct": false,
                                "checked": false
                            },
                            {
                                "text": "<tt class=\"docutils literal\">executionStats</tt>",
                                "correct": false,
                                "checked": false
                            },
                            {
                                "text": "<tt class=\"docutils literal\">queryPlanner</tt>",
                                "correct": true,
                                "checked": false
                            }
                        ],
                        "answerExplanation": "The correct answer is <tt class=\"docutils literal\">queryPlanner</tt>. This is to allow immediate use on a\nserver that may already be under heavy load to help the administrator determine\nif a query would have used an index without impacting other operations more\nheavily."
                    },
                    {
                        "id": "5c3fbe684d1acdb7a52cf648",
                        "correct": false,
                        "problemType": "multipleChoice",
                        "text": "What is the principal reason why adding indexes may lead to slower write operations?",
                        "bookmarked": false,
                        "choices": [
                            {
                                "text": "There are additional writes to disk to keep the indexes in sync with the data",
                                "correct": true,
                                "checked": false
                            },
                            {
                                "text": "Index values can not be compressed as efficiently as BSON documents",
                                "correct": false,
                                "checked": false
                            },
                            {
                                "text": "MongoDB does not use Bloom filters for the indexes",
                                "correct": false,
                                "checked": false
                            },
                            {
                                "text": "They will take space in the working set kept in RAM",
                                "correct": false,
                                "checked": false
                            },
                            {
                                "text": "B-Trees are slow to traverse",
                                "correct": false,
                                "checked": false
                            }
                        ],
                        "answerExplanation": "<p><strong>Correct Option:</strong></p>\n<ul>\n<li><p class=\"first\">There are additional writes to disk to keep the indexes in sync with the data</p>\n<p>If you have 5 indexes, writing a new document will require 6 logical writes.\nHowever, don't let this drawback discourage you to create indexes, as\nrunning collection scan queries are likely going to impact more negatively\nyour performance.</p>\n</li>\n</ul>\n<p><strong>Incorrect Option:</strong></p>\n<ul>\n<li><p class=\"first\">They will take space in the working set kept in RAM</p>\n<p>It is true that they will impact the size of the working set, and may\nresult in more reads to the disk, however only if you don't have enough RAM.</p>\n</li>\n<li><p class=\"first\">MongoDB does not use Bloom filters for the indexes</p>\n<p>Bloom filters is a cool technology that may be used in the future.\nThey may help for some workloads, however they are not the main reason,\nas they also produce some additional writes for each index.</p>\n</li>\n<li><p class=\"first\">Index values can not be compressed as efficiently as BSON documents</p>\n<p>The WiredTiger storage engine does prefix compression on index keys,\nwhich usually results in better compression on large datasets.</p>\n</li>\n<li><p class=\"first\">B-Trees are slow to traverse</p>\n<p>B-Trees tend to be good data structure to find quickly information, so\nthis is not a good reason.</p>\n</li>\n</ul>\n"
                    },
                    {
                        "id": "5c4786efc967a2449edb89c4",
                        "correct": false,
                        "problemType": "multipleChoice",
                        "text": "<p>Given the following commands run in the <tt class=\"docutils literal\">mongo</tt> shell:</p>\n<pre class=\"code js literal-block\">\n<span class=\"name other\">db</span><span class=\"punctuation\">.</span><span class=\"name other\">createCollection</span><span class=\"punctuation\">(</span>\n  <span class=\"literal string double\">&quot;signs&quot;</span><span class=\"punctuation\">,</span>\n  <span class=\"punctuation\">{</span> <span class=\"literal string double\">&quot;collation&quot;</span><span class=\"operator\">:</span> <span class=\"punctuation\">{</span> <span class=\"literal string double\">&quot;locale&quot;</span><span class=\"operator\">:</span> <span class=\"literal string double\">&quot;fr&quot;</span> <span class=\"punctuation\">}</span> <span class=\"punctuation\">}</span>\n<span class=\"punctuation\">)</span>\n\n<span class=\"name other\">db</span><span class=\"punctuation\">.</span><span class=\"name other\">signs</span><span class=\"punctuation\">.</span><span class=\"name other\">createIndex</span><span class=\"punctuation\">(</span>\n  <span class=\"punctuation\">{</span> <span class=\"literal string double\">&quot;sign_text&quot;</span><span class=\"operator\">:</span> <span class=\"literal number integer\">1</span> <span class=\"punctuation\">},</span>\n  <span class=\"punctuation\">{</span> <span class=\"literal string double\">&quot;collation&quot;</span><span class=\"operator\">:</span> <span class=\"punctuation\">{</span> <span class=\"literal string double\">&quot;locale&quot;</span><span class=\"operator\">:</span> <span class=\"literal string double\">&quot;es&quot;</span> <span class=\"punctuation\">}</span> <span class=\"punctuation\">}</span>\n<span class=\"punctuation\">)</span>\n\n<span class=\"name other\">db</span><span class=\"punctuation\">.</span><span class=\"name other\">signs</span><span class=\"punctuation\">.</span><span class=\"name other\">find</span><span class=\"punctuation\">(</span>\n  <span class=\"punctuation\">{</span> <span class=\"literal string double\">&quot;sign_text&quot;</span><span class=\"operator\">:</span> <span class=\"literal string double\">&quot;Bonjour Qu\u00e9bec&quot;</span> <span class=\"punctuation\">},</span>\n  <span class=\"punctuation\">{</span> <span class=\"literal string double\">&quot;collation&quot;</span><span class=\"operator\">:</span> <span class=\"punctuation\">{</span> <span class=\"literal string double\">&quot;locale&quot;</span><span class=\"operator\">:</span> <span class=\"literal string double\">&quot;en&quot;</span> <span class=\"punctuation\">}</span> <span class=\"punctuation\">}</span>\n<span class=\"punctuation\">)</span>\n</pre>\n<p>Which behavior are you going to observe?</p>\n",
                        "bookmarked": false,
                        "choices": [
                            {
                                "text": "matching documents using no locale",
                                "correct": false,
                                "checked": false
                            },
                            {
                                "text": "matching documents using the locales <tt class=\"docutils literal\">&quot;fr&quot;</tt> and <tt class=\"docutils literal\">&quot;es&quot;</tt>",
                                "correct": false,
                                "checked": false
                            },
                            {
                                "text": "mongod will throw an error",
                                "correct": true,
                                "checked": false
                            },
                            {
                                "text": "matching documents using the locale <tt class=\"docutils literal\">&quot;en&quot;</tt>",
                                "correct": false,
                                "checked": false
                            },
                            {
                                "text": "matching documents using the locale <tt class=\"docutils literal\">&quot;fr&quot;</tt>",
                                "correct": false,
                                "checked": false
                            }
                        ],
                        "answerExplanation": "<p><strong>Correct Option:</strong></p>\n<ul>\n<li><p class=\"first\">mongod will throw an error</p>\n<p>Because the locale asked is not available, the <tt class=\"docutils literal\">mongod</tt> process will\nthrown an error.</p>\n<p>The find command could have used &quot;fr&quot;, &quot;fr_CA&quot; or no locale, however it\ncan not use a locale that is not associated with the collection or its\nindexes.</p>\n</li>\n</ul>\n<p><strong>Incorrect Options:</strong></p>\n<ul>\n<li><p class=\"first\">matching documents using the locale &quot;fr&quot;</p>\n<p><tt class=\"docutils literal\">find</tt> would have had to be used <tt class=\"docutils literal\">{ &quot;collation&quot;: { &quot;locale&quot;: &quot;fr&quot; }</tt></p>\n</li>\n<li><p class=\"first\">matching documents using the locale &quot;fr_CA&quot;</p>\n<p><tt class=\"docutils literal\">find</tt> would have had to be used <tt class=\"docutils literal\">{ &quot;collation&quot;: { &quot;locale&quot;: &quot;fr_CA&quot; }</tt></p>\n</li>\n<li><p class=\"first\">matching documents using the locale &quot;fr&quot; and &quot;fr_CA&quot;</p>\n<p>The server can not use 2 locales together for a given query, only one.</p>\n</li>\n<li><p class=\"first\">matching documents using no locale</p>\n<p>Because there is a locale at the collection level, it will always be used\nas the default locale if no explicit locale is specified.</p>\n</li>\n</ul>\n"
                    },
                    {
                        "id": "5c4b4a75dff5767ab9ed208b",
                        "correct": false,
                        "problemType": "multipleChoice",
                        "text": "When creating an index on a field with values of varying data types, how will\nthe values be sorted in this index?",
                        "bookmarked": false,
                        "choices": [
                            {
                                "text": "first ordered by value then by data type",
                                "correct": false,
                                "checked": false
                            },
                            {
                                "text": "only ordered by data type",
                                "correct": false,
                                "checked": false
                            },
                            {
                                "text": "first ordered by data type, then by value",
                                "correct": true,
                                "checked": false
                            },
                            {
                                "text": "only ordered by value",
                                "correct": false,
                                "checked": false
                            },
                            {
                                "text": "an index can not have different data types",
                                "correct": false,
                                "checked": false
                            }
                        ],
                        "answerExplanation": "<p><strong>Correct Answer:</strong></p>\n<ul class=\"simple\">\n<li>first ordered by datatype, then by value</li>\n</ul>\n<p>The indexed values are grouped based on the data type representation first, that\nway if we are traversing the tree, we can go directly to that branch of the\ntree and get results in a more streamlined fashion</p>\n<hr class=\"docutils\" />\n<p><strong>Incorrect Answers:</strong></p>\n<ul class=\"simple\">\n<li>first ordered by value then by datatype</li>\n<li>only ordered by value</li>\n<li>only ordered by datatype</li>\n<li>the index is not stored as a b-tree</li>\n</ul>\n"
                    },
                    {
                        "id": "5c40f78e2cd45570174c8fa0",
                        "correct": false,
                        "problemType": "multipleChoice",
                        "text": "<p>You have the following index on the <tt class=\"docutils literal\">products</tt> collection:</p>\n<pre class=\"code js literal-block\">\n<span class=\"punctuation\">{</span> <span class=\"name other\">rating</span><span class=\"operator\">:</span> <span class=\"literal number integer\">1</span><span class=\"punctuation\">,</span> <span class=\"name other\">price</span><span class=\"operator\">:</span> <span class=\"literal number integer\">1</span> <span class=\"punctuation\">}</span>\n</pre>\n<p>Which of the following choices would be a covered query?</p>\n",
                        "bookmarked": false,
                        "choices": [
                            {
                                "text": "<pre class=\"code js literal-block\">\n<span class=\"name other\">db</span><span class=\"punctuation\">.</span><span class=\"name other\">products</span><span class=\"punctuation\">.</span><span class=\"name other\">find</span><span class=\"punctuation\">(</span>\n  <span class=\"punctuation\">{</span> <span class=\"literal string double\">&quot;rating&quot;</span><span class=\"operator\">:</span> <span class=\"punctuation\">{</span> <span class=\"literal string double\">&quot;$gte&quot;</span><span class=\"operator\">:</span> <span class=\"literal number integer\">7</span> <span class=\"punctuation\">}</span> <span class=\"punctuation\">},</span>\n  <span class=\"punctuation\">{</span> <span class=\"literal string double\">&quot;price&quot;</span><span class=\"operator\">:</span> <span class=\"literal number integer\">1</span> <span class=\"punctuation\">}</span>\n<span class=\"punctuation\">)</span>\n</pre>\n",
                                "correct": false,
                                "checked": false
                            },
                            {
                                "text": "<pre class=\"code js literal-block\">\n<span class=\"name other\">db</span><span class=\"punctuation\">.</span><span class=\"name other\">products</span><span class=\"punctuation\">.</span><span class=\"name other\">find</span><span class=\"punctuation\">(</span>\n  <span class=\"punctuation\">{</span> <span class=\"literal string double\">&quot;rating&quot;</span><span class=\"operator\">:</span> <span class=\"punctuation\">{</span> <span class=\"literal string double\">&quot;$gt&quot;</span><span class=\"operator\">:</span> <span class=\"literal number integer\">7</span> <span class=\"punctuation\">}</span> <span class=\"punctuation\">},</span>\n  <span class=\"punctuation\">{</span> <span class=\"literal string double\">&quot;_id&quot;</span><span class=\"operator\">:</span> <span class=\"literal number integer\">0</span><span class=\"punctuation\">,</span> <span class=\"literal string double\">&quot;price&quot;</span><span class=\"operator\">:</span> <span class=\"literal number integer\">1</span> <span class=\"punctuation\">}</span>\n<span class=\"punctuation\">)</span>\n</pre>\n",
                                "correct": true,
                                "checked": false
                            },
                            {
                                "text": "<pre class=\"code js literal-block\">\n<span class=\"name other\">db</span><span class=\"punctuation\">.</span><span class=\"name other\">products</span><span class=\"punctuation\">.</span><span class=\"name other\">find</span><span class=\"punctuation\">(</span>\n  <span class=\"punctuation\">{</span> <span class=\"literal string double\">&quot;price&quot;</span><span class=\"operator\">:</span> <span class=\"punctuation\">{</span> <span class=\"literal string double\">&quot;$lt&quot;</span><span class=\"operator\">:</span> <span class=\"literal number integer\">7</span> <span class=\"punctuation\">}</span> <span class=\"punctuation\">},</span>\n  <span class=\"punctuation\">{</span> <span class=\"literal string double\">&quot;_id&quot;</span><span class=\"operator\">:</span> <span class=\"literal number integer\">0</span><span class=\"punctuation\">,</span> <span class=\"literal string double\">&quot;price&quot;</span><span class=\"operator\">:</span> <span class=\"literal number integer\">1</span><span class=\"punctuation\">,</span> <span class=\"literal string double\">&quot;rating&quot;</span><span class=\"operator\">:</span> <span class=\"literal number integer\">1</span> <span class=\"punctuation\">}</span>\n<span class=\"punctuation\">)</span>\n</pre>\n",
                                "correct": false,
                                "checked": false
                            },
                            {
                                "text": "<pre class=\"code js literal-block\">\n<span class=\"name other\">db</span><span class=\"punctuation\">.</span><span class=\"name other\">products</span><span class=\"punctuation\">.</span><span class=\"name other\">find</span><span class=\"punctuation\">(</span>\n  <span class=\"punctuation\">{</span> <span class=\"literal string double\">&quot;price&quot;</span><span class=\"operator\">:</span> <span class=\"punctuation\">{</span> <span class=\"literal string double\">&quot;$lt&quot;</span><span class=\"operator\">:</span> <span class=\"literal number integer\">7</span> <span class=\"punctuation\">},</span> <span class=\"literal string double\">&quot;rating&quot;</span><span class=\"operator\">:</span> <span class=\"literal number integer\">7</span> <span class=\"punctuation\">},</span>\n  <span class=\"punctuation\">{</span> <span class=\"literal string double\">&quot;_id&quot;</span><span class=\"operator\">:</span> <span class=\"literal number integer\">0</span> <span class=\"punctuation\">}</span>\n<span class=\"punctuation\">)</span>\n</pre>\n",
                                "correct": false,
                                "checked": false
                            },
                            {
                                "text": "<pre class=\"code js literal-block\">\n<span class=\"name other\">db</span><span class=\"punctuation\">.</span><span class=\"name other\">products</span><span class=\"punctuation\">.</span><span class=\"name other\">find</span><span class=\"punctuation\">(</span>\n  <span class=\"punctuation\">{</span> <span class=\"literal string double\">&quot;price&quot;</span><span class=\"operator\">:</span> <span class=\"punctuation\">{</span> <span class=\"literal string double\">&quot;$lt&quot;</span><span class=\"operator\">:</span> <span class=\"literal number integer\">7</span> <span class=\"punctuation\">}</span> <span class=\"punctuation\">},</span>\n  <span class=\"punctuation\">{</span> <span class=\"literal string double\">&quot;_id&quot;</span><span class=\"operator\">:</span> <span class=\"literal number integer\">0</span><span class=\"punctuation\">,</span> <span class=\"literal string double\">&quot;price&quot;</span><span class=\"operator\">:</span> <span class=\"literal number integer\">1</span> <span class=\"punctuation\">}</span>\n<span class=\"punctuation\">)</span>\n</pre>\n",
                                "correct": false,
                                "checked": false
                            }
                        ],
                        "answerExplanation": "<p>The correct answer is</p>\n<pre class=\"code js literal-block\">\n<span class=\"name other\">db</span><span class=\"punctuation\">.</span><span class=\"name other\">products</span><span class=\"punctuation\">.</span><span class=\"name other\">find</span><span class=\"punctuation\">(</span>\n  <span class=\"punctuation\">{</span> <span class=\"literal string double\">&quot;rating&quot;</span><span class=\"operator\">:</span> <span class=\"punctuation\">{</span> <span class=\"literal string double\">&quot;$gt&quot;</span><span class=\"operator\">:</span> <span class=\"literal number integer\">7</span> <span class=\"punctuation\">}</span> <span class=\"punctuation\">},</span>\n  <span class=\"punctuation\">{</span> <span class=\"literal string double\">&quot;_id&quot;</span><span class=\"operator\">:</span> <span class=\"literal number integer\">0</span><span class=\"punctuation\">,</span> <span class=\"literal string double\">&quot;price&quot;</span><span class=\"operator\">:</span> <span class=\"literal number integer\">1</span> <span class=\"punctuation\">}</span>\n<span class=\"punctuation\">)</span>\n</pre>\n<p>This is because it's using the prefix <tt class=\"docutils literal\">rating</tt>, and projecting away all fields\nthat aren't in the index. That only one key of the two is specified to be kept\ndoesn't impact the query itself.</p>\n"
                    },
                    {
                        "id": "5c488f06c1ac97a066c392cb",
                        "correct": false,
                        "problemType": "checkAllThatApply",
                        "text": "<p>You issue the following query against our database:</p>\n<pre class=\"code js literal-block\">\n<span class=\"name other\">db</span><span class=\"punctuation\">.</span><span class=\"name other\">inventory</span><span class=\"punctuation\">.</span><span class=\"name other\">find</span><span class=\"punctuation\">(</span> <span class=\"punctuation\">{</span> <span class=\"literal string double\">&quot;qty&quot;</span><span class=\"operator\">:</span> <span class=\"punctuation\">{</span> <span class=\"literal string double\">&quot;$gte&quot;</span><span class=\"operator\">:</span> <span class=\"literal number integer\">20</span> <span class=\"punctuation\">}</span> <span class=\"punctuation\">}</span> <span class=\"punctuation\">)</span>\n</pre>\n<p>Which of the following commands will create an index that will cover the query?</p>\n",
                        "bookmarked": false,
                        "choices": [
                            {
                                "text": "<tt class=\"docutils literal\">db.records.createIndex( { &quot;qty&quot;: &quot;$range&quot; } )</tt>",
                                "correct": false,
                                "checked": false
                            },
                            {
                                "text": "<tt class=\"docutils literal\">db.records.createIndex( { &quot;qty&quot;: 1 } )</tt>",
                                "correct": true,
                                "checked": false
                            },
                            {
                                "text": "<tt class=\"docutils literal\">db.records.createIndex( { &quot;qty&quot;: &quot;sorted&quot; } )</tt>",
                                "correct": false,
                                "checked": false
                            }
                        ],
                        "answerExplanation": "<p><strong>Correct Option</strong></p>\n<ul>\n<li><p class=\"first\"><tt class=\"docutils literal\">db.records.createIndex( { &quot;qty&quot;: 1 } )</tt></p>\n<p>This will create an index on the <tt class=\"docutils literal\">&quot;qty&quot;</tt> field, which will cover the range\nquery.</p>\n</li>\n</ul>\n<p><strong>Incorrect Options:</strong></p>\n<ul>\n<li><p class=\"first\"><tt class=\"docutils literal\">db.records.createIndex( { &quot;qty&quot;: $range } )</tt></p>\n<p>You cannot specify an aggregation operator when creating an index. The\n<tt class=\"docutils literal\">$range</tt> operator returns an array whose elements are a generated sequence\nof numbers.</p>\n</li>\n<li><p class=\"first\"><tt class=\"docutils literal\">db.records.createIndex( { &quot;qty&quot;: sorted } )</tt></p>\n<p>Sorted is not an option you can pass to an index. Indexes are already sorted,\nyou can specify the direction of the sort using 1 or -1 when creating the\nindex.</p>\n</li>\n</ul>\n"
                    },
                    {
                        "id": "5c4776809713b60f3c2b3132",
                        "correct": false,
                        "problemType": "checkAllThatApply",
                        "text": "<p>Given the following query:</p>\n<pre class=\"code js literal-block\">\n<span class=\"name other\">db</span><span class=\"punctuation\">.</span><span class=\"name other\">animals</span><span class=\"punctuation\">.</span><span class=\"name other\">find</span><span class=\"punctuation\">(</span>\n  <span class=\"punctuation\">{},</span>\n  <span class=\"punctuation\">{</span> <span class=\"literal string double\">&quot;_id&quot;</span><span class=\"operator\">:</span> <span class=\"literal number integer\">0</span><span class=\"punctuation\">,</span> <span class=\"literal string double\">&quot;species&quot;</span><span class=\"operator\">:</span> <span class=\"literal number integer\">1</span><span class=\"punctuation\">,</span> <span class=\"literal string double\">&quot;name&quot;</span><span class=\"operator\">:</span> <span class=\"literal number integer\">1</span><span class=\"punctuation\">,</span> <span class=\"literal string double\">&quot;number_of_chromosomes&quot;</span><span class=\"operator\">:</span> <span class=\"literal number integer\">1</span> <span class=\"punctuation\">}</span>\n<span class=\"punctuation\">).</span><span class=\"name other\">sort</span><span class=\"punctuation\">(</span>\n  <span class=\"punctuation\">{</span> <span class=\"literal string double\">&quot;number_of_chromosomes&quot;</span><span class=\"operator\">:</span> <span class=\"operator\">-</span><span class=\"literal number integer\">1</span> <span class=\"punctuation\">}</span>\n<span class=\"punctuation\">)</span>\n</pre>\n<p>and the following index:</p>\n<pre class=\"code js literal-block\">\n<span class=\"punctuation\">{</span> <span class=\"literal string double\">&quot;number_of_chromosomes&quot;</span><span class=\"operator\">:</span> <span class=\"literal number integer\">1</span> <span class=\"punctuation\">}</span>\n</pre>\n<p>How will the data get retrieved, and why?</p>\n",
                        "bookmarked": false,
                        "choices": [
                            {
                                "text": "in-memory sort after the data is retrieved from the collection",
                                "correct": false,
                                "checked": false
                            },
                            {
                                "text": "index scan in descending order without the need to sort",
                                "correct": true,
                                "checked": false
                            },
                            {
                                "text": "index scan followed by a sort, because the index is built in ascending order",
                                "correct": false,
                                "checked": false
                            }
                        ],
                        "answerExplanation": "<p><strong>Correct answer:</strong></p>\n<ul class=\"simple\">\n<li>index scan in descending order without the need to sort</li>\n</ul>\n<p>This is because when we are sorting with a single field index, we can always\nsort our documents either in ascending or descending order regardless of the\nphysical ordering of the index keys.</p>\n"
                    }
                ],
                "score": 0
            },
            {
                "id": "f531f6c8144e8c8aaeb8e445",
                "name": "Server Administration",
                "total": 11,
                "problems": [
                    {
                        "id": "5c4786efc967a2449edb89c6",
                        "correct": false,
                        "problemType": "multipleChoice",
                        "text": "Which of the following would not be found in the combined\nresults of explain() commands run on every shard?",
                        "bookmarked": false,
                        "choices": [
                            {
                                "text": "name of the index, or lack of it, chosen on each shard",
                                "correct": false,
                                "checked": false
                            },
                            {
                                "text": "number of documents read on every shard",
                                "correct": false,
                                "checked": false
                            },
                            {
                                "text": "the complete list of available indexes on each shard",
                                "correct": true,
                                "checked": false
                            },
                            {
                                "text": "list of stages ran on the mongos",
                                "correct": false,
                                "checked": false
                            },
                            {
                                "text": "execution time of each stage on each shard",
                                "correct": false,
                                "checked": false
                            }
                        ],
                        "answerExplanation": "<p><strong>Correct Option:</strong></p>\n<ul>\n<li><p class=\"first\">the complete list of available indexes on each shard</p>\n<p>You may see 2 or 3 alternate plans for a given query, however the\noutput is not listing the whole list of available indexes, only those\nfew that it thinks may be the best match.\nRun <tt class=\"docutils literal\">getIndexes()</tt> on your collection to see the complete list</p>\n</li>\n</ul>\n<p><strong>Incorrect Options:</strong></p>\n<p>All other options are incorrect, as they are important information you\nshould first look for when reading an <tt class=\"docutils literal\">explain()</tt> output.</p>\n"
                    },
                    {
                        "id": "5c3cd7a94fa8e45d87fe487d",
                        "correct": false,
                        "problemType": "checkAllThatApply",
                        "text": "<p>Consider a write operation that takes 150 milliseconds, and a database\nprofiler that uses the default value of <tt class=\"docutils literal\">slowms</tt>.</p>\n<p>Which of the following profiler levels would cause the profiler to capture\nthis operation?</p>\n",
                        "bookmarked": false,
                        "choices": [
                            {
                                "text": "0",
                                "correct": false,
                                "checked": false
                            },
                            {
                                "text": "1",
                                "correct": true,
                                "checked": false
                            },
                            {
                                "text": "2",
                                "correct": true,
                                "checked": false
                            }
                        ],
                        "answerExplanation": "<p><strong>Correct Answers</strong></p>\n<p><em>1</em></p>\n<blockquote>\nThis profiling level will record all operations that exceed the <tt class=\"docutils literal\">slowms</tt>\nlimit, which is 100ms by default.</blockquote>\n<p><em>2</em></p>\n<blockquote>\nThis profiling level will record all operations, regardless of how long they\ntake.</blockquote>\n<p><strong>Incorrect Answers</strong></p>\n<p><em>0</em></p>\n<blockquote>\nThis profiling level will not record <strong>any</strong> events to the\n<tt class=\"docutils literal\">system.profile</tt> collection.</blockquote>\n"
                    },
                    {
                        "id": "58ab5626d280e4266a1881cf",
                        "correct": false,
                        "problemType": "checkAllThatApply",
                        "text": "Which of the following data management processes are heavily reliant on\navailable CPU and benefit from the abundance of such computational resource?",
                        "bookmarked": false,
                        "choices": [
                            {
                                "text": "Write operations",
                                "correct": true,
                                "checked": false
                            },
                            {
                                "text": "Aggregation pipeline",
                                "correct": true,
                                "checked": false
                            },
                            {
                                "text": "Read operations",
                                "correct": true,
                                "checked": false
                            }
                        ],
                        "answerExplanation": "<p>Almost all MongoDB data management processes will benefit from the abundance of\nCPU resources. In particular due to the fact that MongoDB uses concurrency model\nthat benefits from available CPU.</p>\n<ul class=\"simple\">\n<li>Write operations</li>\n<li>Aggregation pipeline</li>\n<li>Read operations</li>\n</ul>\n<p>Are operations perform better the more CPU resources are available.</p>\n"
                    },
                    {
                        "id": "5a9c84fd97182d4140a45edb",
                        "correct": false,
                        "problemType": "checkAllThatApply",
                        "text": "Which of the following is true in respect of the command <tt class=\"docutils literal\">rs.config()</tt>",
                        "bookmarked": false,
                        "choices": [
                            {
                                "text": "Lists the set of nodes of a replica set",
                                "correct": true,
                                "checked": false
                            },
                            {
                                "text": "Lists the nodes of all shard cluster replica sets",
                                "correct": false,
                                "checked": false
                            },
                            {
                                "text": "The command is executed in the context of a replica set",
                                "correct": true,
                                "checked": false
                            }
                        ],
                        "answerExplanation": "<p><a href=\"#id1\"><span class=\"problematic\" id=\"id2\">**</span></a>Correct Options:*</p>\n<ul>\n<li><p class=\"first\">Lists the set of nodes of a replica set</p>\n<p><tt class=\"docutils literal\">rs.config()</tt> provides the current configuration of the replica set.</p>\n</li>\n<li><p class=\"first\">The command is executed in the context of a replica set</p>\n<p>All <tt class=\"docutils literal\">mongo</tt> shell command helpers that start with <tt class=\"docutils literal\">rs</tt> are executed in the\ncontext of a replica set cluster.</p>\n</li>\n</ul>\n<p><strong>Incorrect Option:</strong></p>\n<ul class=\"simple\">\n<li>Lists the nodes of all shard cluster replica sets.</li>\n</ul>\n"
                    },
                    {
                        "id": "5cdd6b556658f4f6712696b5",
                        "correct": false,
                        "problemType": "checkAllThatApply",
                        "text": "<p>In the command below, what is the impact of the <tt class=\"docutils literal\">j: true</tt> setting?</p>\n<pre class=\"code js literal-block\">\n<span class=\"name other\">db</span><span class=\"punctuation\">.</span><span class=\"name other\">products</span><span class=\"punctuation\">.</span><span class=\"name other\">insert</span><span class=\"punctuation\">(</span>\n  <span class=\"punctuation\">{</span> <span class=\"name other\">item</span><span class=\"operator\">:</span> <span class=\"literal string double\">&quot;envelopes&quot;</span><span class=\"punctuation\">,</span> <span class=\"name other\">qty</span> <span class=\"operator\">:</span> <span class=\"literal number integer\">100</span><span class=\"punctuation\">,</span> <span class=\"name other\">type</span><span class=\"operator\">:</span> <span class=\"literal string double\">&quot;A4&quot;</span> <span class=\"punctuation\">},</span>\n  <span class=\"punctuation\">{</span> <span class=\"name other\">writeConcern</span><span class=\"operator\">:</span> <span class=\"punctuation\">{</span> <span class=\"name other\">w</span><span class=\"operator\">:</span> <span class=\"literal string double\">&quot;majority&quot;</span> <span class=\"punctuation\">,</span>  <span class=\"name other\">j</span><span class=\"operator\">:</span> <span class=\"keyword constant\">true</span> <span class=\"punctuation\">}</span> <span class=\"punctuation\">}</span>\n<span class=\"punctuation\">)</span>\n</pre>\n",
                        "bookmarked": false,
                        "choices": [
                            {
                                "text": "It enables journaling",
                                "correct": false,
                                "checked": false
                            },
                            {
                                "text": "It forces data to be synced to the journal before acknowledging a write",
                                "correct": true,
                                "checked": false
                            },
                            {
                                "text": "You should never set j:true",
                                "correct": false,
                                "checked": false
                            }
                        ],
                        "answerExplanation": "<p><strong>Correct answer:</strong></p>\n<p>Setting {j: true} forces data to be synced to disk before acknowledging a write operation. Be aware that this may have some\nperformance impact while the operation waits for the journal commit.</p>\n<p><strong>Incorrect answers:</strong></p>\n<p><em>It enables journaling</em></p>\n<blockquote>\nEnabling or disabling journaling is an operation done at the process level, not per operation.</blockquote>\n<p><em>You should never set j:true</em></p>\n<p><tt class=\"docutils literal\">j: true</tt> is a valid write concern option. With <tt class=\"docutils literal\">j: true</tt>, MongoDB returns only after the requested number of members, including the primary, have written to the journal.</p>\n"
                    },
                    {
                        "id": "5c59a17cc2b8e9e0663475d0",
                        "correct": false,
                        "problemType": "multipleChoice",
                        "text": "What is the correct way to report a vulnerability to MongoDB?",
                        "bookmarked": false,
                        "choices": [
                            {
                                "text": "file a ticket in our security Jira project",
                                "correct": true,
                                "checked": false
                            },
                            {
                                "text": "post on the forums in MongoDB University",
                                "correct": false,
                                "checked": false
                            },
                            {
                                "text": "calling our support hotline",
                                "correct": false,
                                "checked": false
                            }
                        ],
                        "answerExplanation": "<p>The correct answer is:</p>\n<ul class=\"simple\">\n<li>file a ticket in our security Jira project</li>\n</ul>\n<p>When you believe you have discovered a vulnerability you should file a ticket in our security Jira project including\nas much information as possible, such as contact details</p>\n"
                    },
                    {
                        "id": "5c49ca12d32814081cccbfed",
                        "correct": false,
                        "problemType": "checkAllThatApply",
                        "text": "<p>Consider the following command:</p>\n<pre class=\"code sh literal-block\">\n$ mongod --enableEncryption --kmipServerName localhost --kmipServerCAFile ca.pem --kmipClientCertificateFile client.pem\n</pre>\n<p>This command enables:</p>\n",
                        "bookmarked": false,
                        "choices": [
                            {
                                "text": "the use of the KMIP server that is running on the local machine",
                                "correct": true,
                                "checked": false
                            },
                            {
                                "text": "starting the KMIP server",
                                "correct": false,
                                "checked": false
                            },
                            {
                                "text": "storage encryption",
                                "correct": true,
                                "checked": false
                            }
                        ],
                        "answerExplanation": "<p><strong>Correct Answers:</strong></p>\n<ul class=\"simple\">\n<li>the use of the KMIP server that is running on the local machine</li>\n</ul>\n<p>The <tt class=\"docutils literal\"><span class=\"pre\">--kmipServerName</span></tt> points to the <tt class=\"docutils literal\">mongod</tt> process to a currently running\nKMIP server, which in this case is running locally, hence the name used is\n<em>localhost</em></p>\n<ul class=\"simple\">\n<li>storage encryption</li>\n</ul>\n<p>The <tt class=\"docutils literal\"><span class=\"pre\">--enableEncryption</span></tt> option turns on storage encryption for a <tt class=\"docutils literal\">mongod</tt>\nprocess.</p>\n<hr class=\"docutils\" />\n<p><strong>Incorrect Answers:</strong></p>\n<ul class=\"simple\">\n<li>starting the KMIP server</li>\n</ul>\n<p>The KMIP server is a separate program that a mongod process can connect to, but\nnot start, hence this answer is incorrect.</p>\n"
                    },
                    {
                        "id": "5c5b62efec971914737ad3d3",
                        "correct": false,
                        "problemType": "multipleChoice",
                        "text": "In the context of a role-based access control (RBAC), which of following apply\nto the principle of least privilege (POLP)?",
                        "bookmarked": false,
                        "choices": [
                            {
                                "text": "Grant roles to users with minimal access required for their tasks",
                                "correct": true,
                                "checked": false
                            },
                            {
                                "text": "Grant read only roles to users by default",
                                "correct": false,
                                "checked": false
                            },
                            {
                                "text": "Allow for all users roles to perform root actions if needed",
                                "correct": false,
                                "checked": false
                            },
                            {
                                "text": "Limit root role to only one user",
                                "correct": false,
                                "checked": false
                            },
                            {
                                "text": "Grant roles to users where they can explore the cluster features",
                                "correct": false,
                                "checked": false
                            }
                        ],
                        "answerExplanation": "<p><strong>Correct Option:</strong></p>\n<ul>\n<li><p class=\"first\">Grant roles to users with minimal access required for their tasks</p>\n<p>Users should be granted privileges limited to the scope of the operations that\nthey need.\nMost <a class=\"reference external\" href=\"https://docs.mongodb.com/manual/reference/built-in-roles/\">built-in roles</a> have been designed with this principle in mind, however,\nyou may have to create your own database custom roles to adequately provide\nusers with the absolute necessary set of privileges they need to perform their\nexpected tasks.</p>\n</li>\n</ul>\n<p><strong>Incorrect Options:</strong></p>\n<ul>\n<li><p class=\"first\">Grant roles to users where they can explore the cluster features</p>\n</li>\n<li><p class=\"first\">Allow for all users roles to perform root actions if needed</p>\n<p>These two options are wrong because they imply the opposite of POLP.</p>\n</li>\n<li><p class=\"first\">Grant read only roles to users by default</p>\n<p>Granting roles to users enforcing POLP does not imply restricting all database\nusers to read only mode. Quite the opposite, only read what they need to read,\nand only write what the user needs to write.</p>\n</li>\n<li><p class=\"first\">Limit root role to only one user</p>\n<p>Having a limited amount of users with root level access is a common sense\napproach, but that should not be a strict rule. If you need to have more than\none user with a given role, either root or other roles, so be it. As long it\nis  absolutely necessary to have such role so the user can perform is expected\ntasks.</p>\n</li>\n</ul>\n"
                    },
                    {
                        "id": "5c4106384d1acdb7a52cf64a",
                        "correct": false,
                        "problemType": "checkAllThatApply",
                        "text": "Which is/are primarily authorization operation(s)?",
                        "bookmarked": false,
                        "choices": [
                            {
                                "text": "Reading a document from the Mongo Shell",
                                "correct": true,
                                "checked": false
                            },
                            {
                                "text": "Creating a user in any database other than admin",
                                "correct": true,
                                "checked": false
                            },
                            {
                                "text": "Using a X.509 certificate",
                                "correct": false,
                                "checked": false
                            }
                        ],
                        "answerExplanation": "<p><strong>Correct Options:</strong></p>\n<ul>\n<li><p class=\"first\">Reading a document from the Mongo Shell</p>\n<p>Before you can issue the query to read a document, you would have been\nauthenticated. Now the server would verify that you are authorized to\naccess this document.</p>\n</li>\n<li><p class=\"first\">Creating a user in any database other than admin</p>\n<p>The operation of creating the user is also related to authorization.\nYou will be authorized to add this user, if you are granted the appropriate\nprivileges in this database.</p>\n</li>\n</ul>\n<p><strong>Incorrect Option:</strong></p>\n<ul>\n<li><p class=\"first\">Using an X.509 certificate</p>\n<p>You can use an X.509 certificate to authenticate a machine, or a user.\nIn both cases, the certificate helps identifying who you are, so it is\nan authorization operation.</p>\n</li>\n</ul>\n"
                    },
                    {
                        "id": "5c4b3364d8f382dbe40e2aad",
                        "correct": false,
                        "problemType": "multipleChoice",
                        "text": "Which of the following statements is true with regard to the localhost exemption?",
                        "bookmarked": false,
                        "choices": [
                            {
                                "text": "You can create the first user when connecting to a newly configured mongod from localhost.",
                                "correct": true,
                                "checked": false
                            },
                            {
                                "text": "Users connecting from localhost are audited in the audit log.",
                                "correct": false,
                                "checked": false
                            },
                            {
                                "text": "You need to use the mongod user to create additional users when connecting to a mongod for the first time.",
                                "correct": false,
                                "checked": false
                            },
                            {
                                "text": "Any user logging on from localhost bypasses authentication",
                                "correct": false,
                                "checked": false
                            },
                            {
                                "text": "Localhost connections are blacklisted by default.",
                                "correct": false,
                                "checked": false
                            }
                        ],
                        "answerExplanation": "<p>The correct answer is:</p>\n<ul class=\"simple\">\n<li>You can create the first user when connecting to a newly configured mongod from localhost.</li>\n</ul>\n<p>When you first connect to a newly configured mongod, you can create the first user even if authentication is on.\nThis user can then be used to create subsequent users as needed.</p>\n"
                    },
                    {
                        "id": "5c2fa347966e8fb97f54774f",
                        "correct": false,
                        "problemType": "checkAllThatApply",
                        "text": "<p>You are setting up MongoDB and have enabled authorization with the following\nsetting in your configuration file</p>\n<pre class=\"literal-block\">\nsecurity:\n  authorization: enabled\n</pre>\n<p>Which of the following statements apply?</p>\n",
                        "bookmarked": false,
                        "choices": [
                            {
                                "text": "Database users will have access to only those resources granted to\nthem through the role-based access control system",
                                "correct": true,
                                "checked": false
                            },
                            {
                                "text": "Users will be forced to connect to MongoDB over SSL/TLS",
                                "correct": false,
                                "checked": false
                            },
                            {
                                "text": "Authentication will now be enforced as turning on authorization\nimplicitly enables authentication",
                                "correct": true,
                                "checked": false
                            }
                        ],
                        "answerExplanation": "<p>The correct answers are:</p>\n<ul class=\"simple\">\n<li>Authentication will now be enforced as turning on authorization\nimplicitly enables authentication</li>\n<li>Database users will have access to only those resources granted to\nthem through the role-based access control system</li>\n</ul>\n<p>The answer <em>Users will be forced to connect to MongoDB over SSL/TLS</em> is\nincorrect. These settings are contained in the <tt class=\"docutils literal\">net.ssl</tt> section of the\nconfiguration document.</p>\n"
                    }
                ],
                "score": 0
            },
            {
                "id": "44f32b09c0f8576ea83d4ac4",
                "name": "Application Administration",
                "total": 10,
                "problems": [
                    {
                        "id": "5c6f04f8bc3a680a215c2c7c",
                        "correct": false,
                        "problemType": "checkAllThatApply",
                        "text": "<p>Consider the following audit filter:</p>\n<pre class=\"code bash literal-block\">\n--auditFilter <span class=\"literal string single\">'{ &quot;atype&quot;: { &quot;$in&quot;: [ &quot;createCollection&quot;, &quot;dropCollection&quot; ] },\n                 &quot;param.ns&quot;: &quot;test.*&quot;}'</span>\n</pre>\n<p>Which of the following operations <strong>must</strong> appear in the audit log?</p>\n",
                        "bookmarked": false,
                        "choices": [
                            {
                                "text": "<pre class=\"code js literal-block\">\n<span class=\"name other\">use</span> <span class=\"name other\">test</span>\n<span class=\"name other\">db</span><span class=\"punctuation\">.</span><span class=\"name other\">createCollection</span><span class=\"punctuation\">(</span><span class=\"literal string double\">&quot;games&quot;</span><span class=\"punctuation\">)</span>\n</pre>\n",
                                "correct": true,
                                "checked": false
                            },
                            {
                                "text": "<pre class=\"code js literal-block\">\n<span class=\"name other\">use</span> <span class=\"name other\">production</span>\n<span class=\"name other\">db</span><span class=\"punctuation\">.</span><span class=\"name other\">createCollection</span><span class=\"punctuation\">(</span><span class=\"literal string double\">&quot;test&quot;</span><span class=\"punctuation\">)</span>\n</pre>\n",
                                "correct": false,
                                "checked": false
                            },
                            {
                                "text": "<pre class=\"code js literal-block\">\n<span class=\"name other\">use</span> <span class=\"name other\">test</span>\n<span class=\"name other\">db</span><span class=\"punctuation\">.</span><span class=\"name other\">dropCollection</span><span class=\"punctuation\">(</span><span class=\"literal string double\">&quot;games&quot;</span><span class=\"punctuation\">)</span>\n</pre>\n",
                                "correct": false,
                                "checked": false
                            }
                        ],
                        "answerExplanation": "<p><strong>Correct Option:</strong></p>\n<pre class=\"code js literal-block\">\n<span class=\"name other\">use</span> <span class=\"name other\">test</span>\n<span class=\"name other\">db</span><span class=\"punctuation\">.</span><span class=\"name other\">createCollection</span><span class=\"punctuation\">(</span><span class=\"literal string double\">&quot;games&quot;</span><span class=\"punctuation\">)</span>\n</pre>\n<p>This instruction will be logged in the audit log because both the audit\nnamespace is <tt class=\"docutils literal\">test.games</tt> and the action type <tt class=\"docutils literal\">createCollection</tt> are defined\nin the <tt class=\"docutils literal\">auditFilter</tt>.</p>\n<p><strong>Incorrect Options:</strong></p>\n<pre class=\"code js literal-block\">\n<span class=\"name other\">use</span> <span class=\"name other\">production</span>\n<span class=\"name other\">db</span><span class=\"punctuation\">.</span><span class=\"name other\">createCollection</span><span class=\"punctuation\">(</span><span class=\"literal string double\">&quot;test&quot;</span><span class=\"punctuation\">)</span>\n</pre>\n<p>This command namespace <tt class=\"docutils literal\">production.test</tt> is not included in the audit filter,\ntherefore the operation would not be logged.</p>\n<pre class=\"code js literal-block\">\n<span class=\"name other\">use</span> <span class=\"name other\">test</span>\n<span class=\"name other\">db</span><span class=\"punctuation\">.</span><span class=\"name other\">dropCollection</span><span class=\"punctuation\">(</span><span class=\"literal string double\">&quot;games&quot;</span><span class=\"punctuation\">)</span>\n</pre>\n<p>In this case both the action <tt class=\"docutils literal\">dropCollection</tt> and the namespace <tt class=\"docutils literal\">test.games</tt>\nare part of the audit filter. However, given the information that we have, we\ncannot guarantee that the collection <strong>games</strong> exists in the <strong>test</strong> database,\ntherefore we cannot be sure that this command will be successful. The audit log\nwill only log successful operations, operations that complete. Given that we are\nlooking for operations that <strong>must</strong> be logged, we cannot tell for sure that\nthis would be a successful operation.</p>\n"
                    },
                    {
                        "id": "5c6447869b11f73f8e5175ff",
                        "correct": false,
                        "problemType": "checkAllThatApply",
                        "text": "<p>Consider the following operation:</p>\n<pre class=\"code js literal-block\">\n<span class=\"name other\">db</span><span class=\"punctuation\">.</span><span class=\"name other\">createUser</span><span class=\"punctuation\">({</span>\n <span class=\"literal string double\">&quot;user&quot;</span><span class=\"operator\">:</span> <span class=\"literal string double\">&quot;appusername&quot;</span><span class=\"punctuation\">,</span>\n <span class=\"literal string double\">&quot;pwd&quot;</span><span class=\"operator\">:</span> <span class=\"literal string double\">&quot;apppassword&quot;</span><span class=\"punctuation\">,</span>\n <span class=\"literal string double\">&quot;roles&quot;</span><span class=\"operator\">:</span> <span class=\"punctuation\">[</span> <span class=\"punctuation\">{</span> <span class=\"literal string double\">&quot;role&quot;</span><span class=\"operator\">:</span> <span class=\"literal string double\">&quot;readWrite&quot;</span><span class=\"punctuation\">,</span> <span class=\"literal string double\">&quot;db&quot;</span><span class=\"operator\">:</span> <span class=\"literal string double\">&quot;applicationDB&quot;</span> <span class=\"punctuation\">}</span> <span class=\"punctuation\">]</span>\n<span class=\"punctuation\">})</span>\n</pre>\n<p>Assume that the audit log captured this operation. By default, what information\nwill appear in the audit log?</p>\n",
                        "bookmarked": false,
                        "choices": [
                            {
                                "text": "The role <tt class=\"docutils literal\">readWrite</tt>",
                                "correct": true,
                                "checked": false
                            },
                            {
                                "text": "The username <tt class=\"docutils literal\">appusername</tt>",
                                "correct": true,
                                "checked": false
                            },
                            {
                                "text": "The password <tt class=\"docutils literal\">apppassword</tt>",
                                "correct": false,
                                "checked": false
                            }
                        ],
                        "answerExplanation": "<p><strong>Correct Answers</strong></p>\n<p><em>The username</em> <tt class=\"docutils literal\">appusername</tt>.</p>\n<p><em>The role</em> <tt class=\"docutils literal\">readWrite</tt>.</p>\n<p><strong>Incorrect Answers</strong></p>\n<p><em>The password</em> <tt class=\"docutils literal\">apppassword</tt>.</p>\n<p>The password in a <tt class=\"docutils literal\">createUser</tt> command is redacted from the audit log by\ndefault, for security purposes.</p>\n"
                    },
                    {
                        "id": "5c5471673655a854831cc7c0",
                        "correct": false,
                        "problemType": "checkAllThatApply",
                        "text": "When configuring a new replica set to use keyfile authentication, which of the\nfollowing applies?",
                        "bookmarked": false,
                        "choices": [
                            {
                                "text": "The same keyfile needs to be configured on each member.",
                                "correct": true,
                                "checked": false
                            },
                            {
                                "text": "After starting the first member with keyfile authentication enabled, the first user must be created via the localhost exception.",
                                "correct": true,
                                "checked": false
                            },
                            {
                                "text": "The hostname in the keyfile for each node must match the hostname for the host it is running on.",
                                "correct": false,
                                "checked": false
                            }
                        ],
                        "answerExplanation": "<p><strong>Correct answers</strong></p>\n<p><em>After you have started the first member with keyfile authentication enabled,\nyou must create the first user via the localhost exception.</em></p>\n<blockquote>\nThis is true as when you enable keyfile authentication, client authentication\nis enabled by default.</blockquote>\n<p><em>You must create identical keyfiles for each member.</em></p>\n<blockquote>\nEach keyfile for each node must match. If not, communication between nodes\nwill fail due to authentication errors.</blockquote>\n<p><strong>Incorrect answers</strong></p>\n<p><em>The hostname in the keyfile for each node must match the hostname for the host\nit is running on.</em></p>\n<blockquote>\nKeyfiles do not use hostnames as a means of verifying where a connection is\ncoming from. X.509 authentication does.</blockquote>\n"
                    },
                    {
                        "id": "5c4125ee8907d2198adc6d1b",
                        "correct": false,
                        "problemType": "multipleChoice",
                        "text": "<p>Let's assume an administrator created a user account with the following\ncommands on a replica set with authorization turned on:</p>\n<pre class=\"code sh literal-block\">\n$ mongo\nuse foundation\ndb.createUser<span class=\"operator\">({</span>user: <span class=\"literal string double\">&quot;daneel.olivaw&quot;</span>, pwd: <span class=\"literal string double\">&quot;etodemerzel&quot;</span>, roles: <span class=\"operator\">[</span><span class=\"literal string double\">&quot;readWrite&quot;</span><span class=\"operator\">]})</span>\n</pre>\n<p>Which of the following methods is <strong>not</strong> valid to authenticate this user?</p>\n",
                        "bookmarked": false,
                        "choices": [
                            {
                                "text": "<pre class=\"code sh literal-block\">\n$ mongo\n&gt; use foundation\n&gt; db.auth<span class=\"operator\">(</span><span class=\"literal string double\">&quot;daneel.olivaw&quot;</span>, <span class=\"literal string double\">&quot;etodemerzel&quot;</span><span class=\"operator\">)</span>\n</pre>\n",
                                "correct": false,
                                "checked": false
                            },
                            {
                                "text": "<pre class=\"code sh literal-block\">\n$ mongo <span class=\"name builtin\">test</span> -u daneel.olivaw -p etodemerzel --authenticationDatabase foundation\n</pre>\n",
                                "correct": false,
                                "checked": false
                            },
                            {
                                "text": "<pre class=\"code sh literal-block\">\n$ mongo foundation -u daneel.olivaw -p etodemerzel\n</pre>\n",
                                "correct": false,
                                "checked": false
                            },
                            {
                                "text": "<pre class=\"code sh literal-block\">\n$ mongo <span class=\"name builtin\">test</span>\n&gt; use foundation\n&gt; db.auth<span class=\"operator\">(</span><span class=\"literal string double\">&quot;daneel.olivaw&quot;</span>, <span class=\"literal string double\">&quot;etodemerzel&quot;</span><span class=\"operator\">)</span>\n</pre>\n",
                                "correct": false,
                                "checked": false
                            },
                            {
                                "text": "<pre class=\"code sh literal-block\">\n$ mongo <span class=\"name builtin\">test</span> --authenticationDatabase foundation\n&gt; db.auth<span class=\"operator\">(</span><span class=\"literal string double\">&quot;daneel.olivaw&quot;</span>, <span class=\"literal string double\">&quot;etodemerzel&quot;</span><span class=\"operator\">)</span>\n</pre>\n",
                                "correct": true,
                                "checked": false
                            }
                        ],
                        "answerExplanation": "<p>The correct answer is:</p>\n<pre class=\"code sh literal-block\">\n$ mongo <span class=\"name builtin\">test</span> --authenticationDatabase foundation\n&gt; db.auth<span class=\"operator\">(</span><span class=\"literal string double\">&quot;daneel.olivaw&quot;</span>, <span class=\"literal string double\">&quot;etodemerzel&quot;</span><span class=\"operator\">)</span>\n</pre>\n<p>This is the only commands that will not authenticate correctly.\nAfter the mongo shell starts, it will land in the 'test' directory.\nThe subsequent <tt class=\"docutils literal\">db.auth()</tt> command will try to authenticate in this\n'test' database, while it should do it in 'foundation' to succeed.\nThe key thing to understand here is that <tt class=\"docutils literal\"><span class=\"pre\">--authenticationDatabase</span></tt>\nonly make sense if you are also providing the credentials at the same time.</p>\n"
                    },
                    {
                        "id": "5c62ec067f3ab8a90b1256f2",
                        "correct": false,
                        "problemType": "checkAllThatApply",
                        "text": "<p>We have created the following user:</p>\n<pre class=\"code js literal-block\">\n<span class=\"name other\">db</span><span class=\"punctuation\">.</span><span class=\"name other\">createUser</span><span class=\"punctuation\">({</span>\n  <span class=\"literal string double\">&quot;user&quot;</span><span class=\"operator\">:</span> <span class=\"literal string double\">&quot;John&quot;</span><span class=\"punctuation\">,</span>\n  <span class=\"literal string double\">&quot;pwd&quot;</span><span class=\"operator\">:</span> <span class=\"literal string double\">&quot;secret&quot;</span><span class=\"punctuation\">,</span>\n  <span class=\"literal string double\">&quot;roles&quot;</span><span class=\"operator\">:</span> <span class=\"punctuation\">[{</span><span class=\"literal string double\">&quot;role&quot;</span><span class=\"operator\">:</span> <span class=\"literal string double\">&quot;readwrite&quot;</span><span class=\"punctuation\">,</span> <span class=\"literal string double\">&quot;db&quot;</span><span class=\"operator\">:</span> <span class=\"literal string double\">&quot;students&quot;</span><span class=\"punctuation\">}]</span>\n<span class=\"punctuation\">})</span>\n</pre>\n<p>Which of the following statements are true?</p>\n",
                        "bookmarked": false,
                        "choices": [
                            {
                                "text": "<tt class=\"docutils literal\">students</tt> is a resource",
                                "correct": true,
                                "checked": false
                            },
                            {
                                "text": "<tt class=\"docutils literal\">readWrite</tt> is a role",
                                "correct": true,
                                "checked": false
                            },
                            {
                                "text": "<tt class=\"docutils literal\">John</tt> is a resource",
                                "correct": false,
                                "checked": false
                            }
                        ],
                        "answerExplanation": "<p><strong>Correct answers</strong></p>\n<p><tt class=\"docutils literal\">students</tt> <em>is a resource.</em></p>\n<blockquote>\n<tt class=\"docutils literal\">students</tt> is a database, which is considered a resource that we can grant\nprivileges over.</blockquote>\n<p><tt class=\"docutils literal\">readWrite</tt> <em>is a role.</em></p>\n<blockquote>\n<tt class=\"docutils literal\">readWrite</tt> is a built-in role in MongoDB. You can find a list of all MongoDB\nbuilt-in roles in <a class=\"reference external\" href=\"https://docs.mongodb.com/manual/reference/built-in-roles/\">the documentation located here</a>.</blockquote>\n<p><strong>Incorrect answers</strong></p>\n<p><tt class=\"docutils literal\">John</tt> <em>is a resource.</em></p>\n<blockquote>\nJohn is not considered a resource in role-based access control. John is a user.</blockquote>\n"
                    },
                    {
                        "id": "5c6f0cf83f876716e16926ad",
                        "correct": false,
                        "problemType": "checkAllThatApply",
                        "text": "Which of the following actions is a user with the <tt class=\"docutils literal\">clusterManager</tt> built-in role\nable to perform?",
                        "bookmarked": false,
                        "choices": [
                            {
                                "text": "Add nodes from a replica set",
                                "correct": true,
                                "checked": false
                            },
                            {
                                "text": "Resync a replica node",
                                "correct": true,
                                "checked": false
                            },
                            {
                                "text": "Remove shards",
                                "correct": true,
                                "checked": false
                            }
                        ],
                        "answerExplanation": "<p>All of the above are actions that users with the <a class=\"reference external\" href=\"https://docs.mongodb.com/manual/reference/built-in-roles/#clusterManager\">clusterManager</a> built-in role\nare able to perform.</p>\n"
                    },
                    {
                        "id": "5c494cc6c967a2449edb89cb",
                        "correct": false,
                        "problemType": "checkAllThatApply",
                        "text": "Which of the following commands will successfully create the user\n<tt class=\"docutils literal\">braun</tt> and give the user the appropriate privileges to import data in\nany collection of the <tt class=\"docutils literal\">nasa</tt> database?",
                        "bookmarked": false,
                        "choices": [
                            {
                                "text": "<pre class=\"code sh literal-block\">\n&gt; use nasa\n&gt; db.createUser<span class=\"operator\">({</span><span class=\"literal string double\">&quot;user&quot;</span>:<span class=\"literal string double\">&quot;braun&quot;</span>, <span class=\"literal string double\">&quot;pwd&quot;</span>: <span class=\"literal string double\">&quot;rocketscientist&quot;</span>, <span class=\"literal string double\">&quot;roles&quot;</span>: <span class=\"operator\">[{</span><span class=\"literal string double\">&quot;role&quot;</span>: <span class=\"literal string double\">&quot;readWrite&quot;</span>, <span class=\"literal string double\">&quot;db&quot;</span>: <span class=\"literal string double\">&quot;admin&quot;</span><span class=\"operator\">}]</span> <span class=\"operator\">})</span>\n</pre>\n",
                                "correct": false,
                                "checked": false
                            },
                            {
                                "text": "<pre class=\"code sh literal-block\">\n&gt; use nasa\n&gt; db.createUser<span class=\"operator\">({</span><span class=\"literal string double\">&quot;user&quot;</span>:<span class=\"literal string double\">&quot;braun&quot;</span>, <span class=\"literal string double\">&quot;pwd&quot;</span>: <span class=\"literal string double\">&quot;rocketscientist&quot;</span>, <span class=\"literal string double\">&quot;roles&quot;</span>: <span class=\"operator\">[{</span><span class=\"literal string double\">&quot;role&quot;</span>: <span class=\"literal string double\">&quot;readWrite&quot;</span>, <span class=\"literal string double\">&quot;db&quot;</span>: <span class=\"literal string double\">&quot;nasa&quot;</span><span class=\"operator\">}]</span> <span class=\"operator\">})</span>\n</pre>\n",
                                "correct": true,
                                "checked": false
                            },
                            {
                                "text": "<pre class=\"code sh literal-block\">\n&gt; use admin\n&gt; db.createUser<span class=\"operator\">({</span><span class=\"literal string double\">&quot;user&quot;</span>:<span class=\"literal string double\">&quot;braun&quot;</span>, <span class=\"literal string double\">&quot;pwd&quot;</span>: <span class=\"literal string double\">&quot;rocketscientist&quot;</span>, <span class=\"literal string double\">&quot;roles&quot;</span>: <span class=\"operator\">[{</span><span class=\"literal string double\">&quot;role&quot;</span>: <span class=\"literal string double\">&quot;readWrite&quot;</span>, <span class=\"literal string double\">&quot;db&quot;</span>: <span class=\"literal string double\">&quot;nasa&quot;</span><span class=\"operator\">}]</span> <span class=\"operator\">})</span>\n</pre>\n",
                                "correct": true,
                                "checked": false
                            }
                        ],
                        "answerExplanation": "<p><strong>Correct Options:</strong></p>\n<ul>\n<li><pre class=\"code sh first literal-block\">\n&gt; use admin\n&gt; db.createUser<span class=\"operator\">({</span><span class=\"literal string double\">&quot;user&quot;</span>:<span class=\"literal string double\">&quot;braun&quot;</span>, <span class=\"literal string double\">&quot;pwd&quot;</span>: <span class=\"literal string double\">&quot;rocketscientist&quot;</span>, <span class=\"literal string double\">&quot;roles&quot;</span>: <span class=\"operator\">[{</span><span class=\"literal string double\">&quot;role&quot;</span>: <span class=\"literal string double\">&quot;readWrite&quot;</span>, <span class=\"literal string double\">&quot;db&quot;</span>: <span class=\"literal string double\">&quot;nasa&quot;</span><span class=\"operator\">}]</span> <span class=\"operator\">})</span>\n</pre>\n</li>\n<li><pre class=\"code sh first literal-block\">\n&gt; use nasa\n&gt; db.createUser<span class=\"operator\">({</span><span class=\"literal string double\">&quot;user&quot;</span>:<span class=\"literal string double\">&quot;braun&quot;</span>, <span class=\"literal string double\">&quot;pwd&quot;</span>: <span class=\"literal string double\">&quot;rocketscientist&quot;</span>, <span class=\"literal string double\">&quot;roles&quot;</span>: <span class=\"operator\">[{</span><span class=\"literal string double\">&quot;role&quot;</span>: <span class=\"literal string double\">&quot;readWrite&quot;</span>, <span class=\"literal string double\">&quot;db&quot;</span>: <span class=\"literal string double\">&quot;nasa&quot;</span><span class=\"operator\">}]</span> <span class=\"operator\">})</span>\n</pre>\n</li>\n</ul>\n<p>These 2 sets of commands will create the user &quot;braun&quot; with the appropriate\nprivileges.\nHowever, those 2 users will have to authenticate against different databases.</p>\n<p><strong>Incorrect Option:</strong></p>\n<ul>\n<li><pre class=\"code sh first literal-block\">\n&gt; use nasa\n&gt; db.createUser<span class=\"operator\">({</span><span class=\"literal string double\">&quot;user&quot;</span>:<span class=\"literal string double\">&quot;braun&quot;</span>, <span class=\"literal string double\">&quot;pwd&quot;</span>: <span class=\"literal string double\">&quot;rocketscientist&quot;</span>, <span class=\"literal string double\">&quot;roles&quot;</span>: <span class=\"operator\">[{</span><span class=\"literal string double\">&quot;role&quot;</span>: <span class=\"literal string double\">&quot;readWrite&quot;</span>, <span class=\"literal string double\">&quot;db&quot;</span>: <span class=\"literal string double\">&quot;admin&quot;</span><span class=\"operator\">}]</span> <span class=\"operator\">})</span>\n</pre>\n</li>\n</ul>\n<p>In this example, the user is created on the <cite>nasa</cite> database with privileges\non the <cite>admin</cite> database. This will not allow the user to import data into the\n<cite>nasa</cite> database.</p>\n"
                    },
                    {
                        "id": "5c4786efc967a2449edb89c8",
                        "correct": false,
                        "problemType": "checkAllThatApply",
                        "text": "<p>Consider the following user:</p>\n<pre class=\"code sh literal-block\">\n<span class=\"operator\">{</span>\n  <span class=\"literal string double\">&quot;_id&quot;</span> : <span class=\"literal string double\">&quot;admin.matt&quot;</span>,\n  <span class=\"literal string double\">&quot;user&quot;</span> : <span class=\"literal string double\">&quot;matt&quot;</span>,\n  <span class=\"literal string double\">&quot;db&quot;</span> : <span class=\"literal string double\">&quot;admin&quot;</span>,\n  <span class=\"literal string double\">&quot;roles&quot;</span> : <span class=\"operator\">[</span>\n    <span class=\"operator\">{</span>\n      <span class=\"literal string double\">&quot;role&quot;</span> : <span class=\"literal string double\">&quot;userAdminAnyDatabase&quot;</span>,\n      <span class=\"literal string double\">&quot;db&quot;</span> : <span class=\"literal string double\">&quot;admin&quot;</span>\n    <span class=\"operator\">}</span>\n  <span class=\"operator\">]</span>,\n  <span class=\"literal string double\">&quot;mechanisms&quot;</span> : <span class=\"operator\">[</span>\n    <span class=\"literal string double\">&quot;SCRAM-SHA-1&quot;</span>,\n    <span class=\"literal string double\">&quot;SCRAM-SHA-256&quot;</span>\n  <span class=\"operator\">]</span>\n<span class=\"operator\">}</span>\n</pre>\n<p>Which commands would let you see the privileges and actions for this user?</p>\n",
                        "bookmarked": false,
                        "choices": [
                            {
                                "text": "db.getRole( &quot;userAdminAnyDatabase&quot; )",
                                "correct": false,
                                "checked": false
                            },
                            {
                                "text": "db.getUser( &quot;daniel&quot;, { &quot;showPrivileges&quot;: true } )",
                                "correct": true,
                                "checked": false
                            },
                            {
                                "text": "db.getRoles( { &quot;showPrivileges&quot;: true, showBuiltinRoles: true } )",
                                "correct": true,
                                "checked": false
                            }
                        ],
                        "answerExplanation": "<p><strong>Correct Options:</strong></p>\n<ul class=\"simple\">\n<li>db.getUser( &quot;daniel&quot;, { &quot;showPrivileges&quot;: true } )</li>\n</ul>\n<p>This is the most straightforward way to see the privileges and actions\nthis user can execute.</p>\n<ul class=\"simple\">\n<li>db.getRoles( { &quot;showPrivileges&quot;: true, showBuiltinRoles: true } )</li>\n</ul>\n<p>This command would give you more than you need, listing all the privileges\nfor all roles, however since our user has only one role, it is possible\nto locate that section in the output to see the list of privileges and\nactions that are allowed.</p>\n<p><strong>Incorrect Options:</strong></p>\n<ul class=\"simple\">\n<li>db.getRole( &quot;userAdminAnyDatabase&quot; )</li>\n</ul>\n<p>This command would provide the desired information if you add the\noption <tt class=\"docutils literal\">{&quot;showPrivileges&quot;: true}</tt> to it.\nOtherwise, the information returned is much less detailed.</p>\n"
                    },
                    {
                        "id": "5c5b62ead88fc62fc0c6bd6c",
                        "correct": false,
                        "problemType": "checkAllThatApply",
                        "text": "Where does MongoDB use TLS 1.1+ encryption algorithms?",
                        "bookmarked": false,
                        "choices": [
                            {
                                "text": "Transport layer",
                                "correct": true,
                                "checked": false
                            },
                            {
                                "text": "Encrypted storage engine",
                                "correct": false,
                                "checked": false
                            },
                            {
                                "text": "Password salting",
                                "correct": false,
                                "checked": false
                            }
                        ],
                        "answerExplanation": "<ul class=\"simple\">\n<li>Transport layer</li>\n</ul>\n<p>MongoDB uses TLS 1.1+ to encrypt client-server and intra-cluster network\ntransport layer communication.</p>\n"
                    },
                    {
                        "id": "5c51d2e1ea83619e61fd55e5",
                        "correct": false,
                        "problemType": "checkAllThatApply",
                        "text": "Which of the following is true in relation to the encrypted storage engine in MongoDB?",
                        "bookmarked": false,
                        "choices": [
                            {
                                "text": "Master keys are stored outside MongoDB",
                                "correct": true,
                                "checked": false
                            },
                            {
                                "text": "Database keys can be managed using KMIP",
                                "correct": false,
                                "checked": false
                            },
                            {
                                "text": "Database keys are stored inside MongoDB",
                                "correct": true,
                                "checked": false
                            },
                            {
                                "text": "Master keys are password protected",
                                "correct": false,
                                "checked": false
                            }
                        ],
                        "answerExplanation": "<p><strong>Correct answers</strong></p>\n<ul class=\"simple\">\n<li><strong>Master keys are stored outside MongoDB.</strong> This is true, we recommend that you use KMIP to manage these keys.</li>\n<li><strong>Database keys are stored inside MongoDB.</strong> This is also true, there is a key per database stored inside MongoDB.</li>\n</ul>\n<p><strong>Incorrect answers</strong></p>\n<ul class=\"simple\">\n<li><strong>Database keys can be managed using KMIP.</strong> These keys cannot be managed using KMIP as they are stored inside MongoDB.</li>\n<li><strong>Master keys are password protected.</strong> Master keys are not password protected.</li>\n</ul>\n"
                    }
                ],
                "score": 0
            },
            {
                "id": "b2d408ffdbe74f98ba57a460",
                "name": "Replication",
                "total": 10,
                "problems": [
                    {
                        "id": "5c3d005fad56b93182571c10",
                        "correct": false,
                        "problemType": "checkAllThatApply",
                        "text": "You need to set up a replica set. Which command(s) do you need to run to set\nup the replica set and add 2 other nodes?",
                        "bookmarked": false,
                        "choices": [
                            {
                                "text": "<tt class=\"docutils literal\"><span class=\"pre\">rs.initiate();</span> rs.add(node2); rs.add(node3);</tt>",
                                "correct": true,
                                "checked": false
                            },
                            {
                                "text": "<tt class=\"docutils literal\">rs.add(node2); rs.add(node3); rs.initiate()</tt>",
                                "correct": false,
                                "checked": false
                            },
                            {
                                "text": "<tt class=\"docutils literal\"><span class=\"pre\">rs.initiate();</span> rs.add(node2); rs.reconfig()</tt>",
                                "correct": false,
                                "checked": false
                            }
                        ],
                        "answerExplanation": "<p>The correct answer is:</p>\n<ul>\n<li><p class=\"first\"><tt class=\"docutils literal\"><span class=\"pre\">rs.initiate();</span> rs.add(node2); rs.add(node3)</tt></p>\n<p><tt class=\"docutils literal\">rs.initiate()</tt> must be run first in order to initialize the replica set, and\n<tt class=\"docutils literal\">rs.reconfig()</tt> should only be run if you are modifying the replica\nconfiguration file directly.</p>\n</li>\n</ul>\n"
                    },
                    {
                        "id": "5c38c374f69dd994eee197cd",
                        "correct": false,
                        "problemType": "checkAllThatApply",
                        "text": "Which are valid read concerns in MongoDB?",
                        "bookmarked": false,
                        "choices": [
                            {
                                "text": "majority",
                                "correct": true,
                                "checked": false
                            },
                            {
                                "text": "linearizable",
                                "correct": true,
                                "checked": false
                            },
                            {
                                "text": "local",
                                "correct": true,
                                "checked": false
                            }
                        ],
                        "answerExplanation": "<p><strong>Correct Options:</strong></p>\n<p>All choices are correct.</p>\n<p><strong>majority</strong> read concern reads data that was written to a majority\nof nodes.</p>\n<p><strong>local</strong> read concern reads data at least written to the primary.\nIt is the default read concern</p>\n<p><strong>linearizable</strong> read concern reads data written to a majority of nodes prior\nto the read request, and unlike <strong>majority</strong> will wait for pending write\noperations to complete that would modify the document(s) requested</p>\n"
                    },
                    {
                        "id": "5c35094163557422af95d3e7",
                        "correct": false,
                        "problemType": "multipleChoice",
                        "text": "You are required to perform a rolling upgrade on your running replica set. You\nhave upgraded the secondaries and are now ready to upgrade the primary. What\ncommand should you run on the primary before restarting it?",
                        "bookmarked": false,
                        "choices": [
                            {
                                "text": "<tt class=\"docutils literal\">rs.freeze()</tt>",
                                "correct": false,
                                "checked": false
                            },
                            {
                                "text": "<tt class=\"docutils literal\">rs.remove()</tt>",
                                "correct": false,
                                "checked": false
                            },
                            {
                                "text": "<tt class=\"docutils literal\">rs.slaveOk()</tt>",
                                "correct": false,
                                "checked": false
                            },
                            {
                                "text": "<tt class=\"docutils literal\">rs.reconfig()</tt>",
                                "correct": false,
                                "checked": false
                            },
                            {
                                "text": "<tt class=\"docutils literal\">rs.stepDown()</tt>",
                                "correct": true,
                                "checked": false
                            }
                        ],
                        "answerExplanation": "The correct answer is <tt class=\"docutils literal\">rs.stepDown()</tt>. This will insruct the primary that it\nshould step down. The primary will check there is an electable secondary and\nwait if necessary for a secondary to catch up. It will then step down if safe\nto do so."
                    },
                    {
                        "id": "5c3668d521a9c50319a3e273",
                        "correct": false,
                        "problemType": "checkAllThatApply",
                        "text": "Which collections in the <tt class=\"docutils literal\">local</tt> database are replicated by secondary nodes\nin a MongoDB replica set?",
                        "bookmarked": false,
                        "choices": [
                            {
                                "text": "<tt class=\"docutils literal\">startup_log</tt>",
                                "correct": false,
                                "checked": false
                            },
                            {
                                "text": "<tt class=\"docutils literal\">system.replSet</tt>",
                                "correct": false,
                                "checked": false
                            },
                            {
                                "text": "<tt class=\"docutils literal\">oplog.rs</tt>",
                                "correct": true,
                                "checked": false
                            }
                        ],
                        "answerExplanation": "<p><strong>Correct Answer</strong></p>\n<p><tt class=\"docutils literal\">oplog.rs</tt></p>\n<blockquote>\nThe oplog collection is replicated by secondary nodes to perform any new\noperations. This is the <strong>only</strong> collection in the <tt class=\"docutils literal\">local</tt> database that\nis replicated by secondary nodes.</blockquote>\n<p><strong>Incorrect Answers</strong></p>\n<p><tt class=\"docutils literal\">system.replSet</tt></p>\n<blockquote>\nThis collection stores information on the replica set, but it is not\nreplicated by secondaries.</blockquote>\n<p><tt class=\"docutils literal\">startup_log</tt></p>\n<blockquote>\nThis collection contains the options used to start the <tt class=\"docutils literal\">mongod</tt> process.\nIt is not replicated by secondaries.</blockquote>\n"
                    },
                    {
                        "id": "5c351fdf30888e85c90dbc7e",
                        "correct": false,
                        "problemType": "checkAllThatApply",
                        "text": "What do <strong>binary</strong> and <strong>statement-based</strong> replication have in common?",
                        "bookmarked": false,
                        "choices": [
                            {
                                "text": "They both provide availability in a database server.",
                                "correct": true,
                                "checked": false
                            },
                            {
                                "text": "They are both used in MongoDB.",
                                "correct": false,
                                "checked": false
                            },
                            {
                                "text": "They both work across different operating systems.",
                                "correct": false,
                                "checked": false
                            }
                        ],
                        "answerExplanation": "<p><strong>Correct Answer</strong></p>\n<p><em>They both provide availability in a database server.</em></p>\n<blockquote>\nReplicating data provides availability in a database server, because it\nkeeps multiple servers up-to-date and ready to serve database requests.</blockquote>\n<p><strong>Incorrect Answers</strong></p>\n<p><em>Both forms of replication are used in MongoDB.</em></p>\n<blockquote>\nMongoDB uses statement-based replication in replica sets. This solution\nis agnostic of any machine-level dependencies.</blockquote>\n<p><em>Both forms of replication work across different operating systems.</em></p>\n<blockquote>\n<p>Statement-based replication will work across platforms, because MongoDB\ncommands can be understood by any operating system or software version.</p>\n<p>Binary replication will <strong>not</strong> work across different platforms, because\nit uses binary differences to replicate data, and any change to the\nplatform may affect these binary differences drastically.</p>\n</blockquote>\n"
                    },
                    {
                        "id": "5c37d3f4b6e998119958d6fd",
                        "correct": false,
                        "problemType": "checkAllThatApply",
                        "text": "<p>Consider a write operation performed against a replica set with write concern\n<tt class=\"docutils literal\">w: 1</tt>.</p>\n<p>After changing the write concern to <tt class=\"docutils literal\">w: &quot;majority&quot;</tt>, this operation is:</p>\n",
                        "bookmarked": false,
                        "choices": [
                            {
                                "text": "more likely to take longer",
                                "correct": true,
                                "checked": false
                            },
                            {
                                "text": "more likely to block other operations in the application",
                                "correct": true,
                                "checked": false
                            },
                            {
                                "text": "less likely to be rolled back",
                                "correct": true,
                                "checked": false
                            }
                        ],
                        "answerExplanation": "<p>All three of these options are true.</p>\n<p>The write operation is <strong>more likely to take longer</strong> because the server has\nto wait for acknowledgement from a majority of nodes in the replica set. This\ntypically takes longer than waiting for only one acknowledgement.</p>\n<p>It is also <strong>less likely to be rolled back</strong>, because even if the primary node\nshuts down, there is at least one other node that's applied the write\noperation.</p>\n<p>And finally, it is <strong>more likely to block other operations in the application</strong>,\nbecause the write operation will take longer than the same operation issued\nwith write concern <tt class=\"docutils literal\">w: 1</tt>. However, this can be remedied by issuing a\n<tt class=\"docutils literal\">wtimeout</tt> that satisfies the application's need for timely acknowledgement.</p>\n"
                    },
                    {
                        "id": "5c3659666e70452e426f21ef",
                        "correct": false,
                        "problemType": "checkAllThatApply",
                        "text": "Which of the following commands can be used to retrieve the size of the\noplog in a MongoDB replica set?",
                        "bookmarked": false,
                        "choices": [
                            {
                                "text": "<tt class=\"docutils literal\">db.oplog.rs.stats()</tt>",
                                "correct": true,
                                "checked": false
                            },
                            {
                                "text": "<tt class=\"docutils literal\">db.startup_log.stats()</tt>",
                                "correct": false,
                                "checked": false
                            },
                            {
                                "text": "<tt class=\"docutils literal\">rs.printReplicationInfo()</tt>",
                                "correct": true,
                                "checked": false
                            }
                        ],
                        "answerExplanation": "<p><strong>Correct Answers</strong></p>\n<p><tt class=\"docutils literal\">rs.printReplicationInfo()</tt></p>\n<blockquote>\nThis will return the size of the oplog in both gigabytes and minutes.</blockquote>\n<p><tt class=\"docutils literal\">db.oplog.rs.stats()</tt></p>\n<blockquote>\nThis will return all available stats on the <tt class=\"docutils literal\">oplog.rs</tt> collection.</blockquote>\n<p><strong>Incorrect Answer</strong></p>\n<p><tt class=\"docutils literal\">db.startup_log.stats()</tt></p>\n<blockquote>\nThis will return all available stats on the <tt class=\"docutils literal\">startup_log</tt> collection,\nwhich does not tell us about the oplog.</blockquote>\n"
                    },
                    {
                        "id": "5c48adabfb57922c7ab251d0",
                        "correct": false,
                        "problemType": "checkAllThatApply",
                        "text": "Which command would you use to add an arbiter to an existing replica set on host mongo2, running on port 27017?",
                        "bookmarked": false,
                        "choices": [
                            {
                                "text": "<pre class=\"code js literal-block\">\n<span class=\"name other\">rs</span><span class=\"punctuation\">.</span><span class=\"name other\">reconfig</span><span class=\"punctuation\">({</span><span class=\"literal string double\">&quot;host&quot;</span><span class=\"operator\">:</span> <span class=\"literal string double\">&quot;mongo2&quot;</span><span class=\"punctuation\">,</span> <span class=\"literal string double\">&quot;port&quot;</span><span class=\"operator\">:</span> <span class=\"literal number integer\">27017</span><span class=\"punctuation\">,</span> <span class=\"literal string double\">&quot;arbiter&quot;</span><span class=\"operator\">:</span> <span class=\"literal string double\">&quot;true&quot;</span><span class=\"punctuation\">})</span>\n</pre>\n",
                                "correct": false,
                                "checked": false
                            },
                            {
                                "text": "<pre class=\"code js literal-block\">\n<span class=\"name other\">rs</span><span class=\"punctuation\">.</span><span class=\"name other\">add</span><span class=\"punctuation\">(</span><span class=\"literal string double\">&quot;mongo2:27017, arb: true&quot;</span><span class=\"punctuation\">)</span>\n</pre>\n",
                                "correct": false,
                                "checked": false
                            },
                            {
                                "text": "<pre class=\"code js literal-block\">\n<span class=\"name other\">rs</span><span class=\"punctuation\">.</span><span class=\"name other\">addArb</span><span class=\"punctuation\">(</span><span class=\"literal string double\">&quot;mongo2:27107&quot;</span><span class=\"punctuation\">)</span>\n</pre>\n",
                                "correct": true,
                                "checked": false
                            }
                        ],
                        "answerExplanation": "<p><strong>Correct Option</strong></p>\n<pre class=\"code js literal-block\">\n<span class=\"name other\">rs</span><span class=\"punctuation\">.</span><span class=\"name other\">addArb</span><span class=\"punctuation\">(</span><span class=\"literal string double\">&quot;mongo2:27107&quot;</span><span class=\"punctuation\">)</span>\n</pre>\n<p>This command will add the arbiter on mongo2:27107.</p>\n<p><strong>Incorrect Options:</strong></p>\n<pre class=\"code js literal-block\">\n<span class=\"name other\">rs</span><span class=\"punctuation\">.</span><span class=\"name other\">add</span><span class=\"punctuation\">(</span><span class=\"literal string double\">&quot;mongo2:27017, arb: true&quot;</span><span class=\"punctuation\">)</span>\n</pre>\n<p>Is not a valid command.</p>\n<pre class=\"code js literal-block\">\n<span class=\"name other\">rs</span><span class=\"punctuation\">.</span><span class=\"name other\">reconfig</span><span class=\"punctuation\">({</span><span class=\"literal string double\">&quot;host&quot;</span><span class=\"operator\">:</span> <span class=\"literal string double\">&quot;mongo2&quot;</span><span class=\"punctuation\">,</span> <span class=\"literal string double\">&quot;port&quot;</span><span class=\"operator\">:</span> <span class=\"literal number integer\">27017</span><span class=\"punctuation\">,</span> <span class=\"literal string double\">&quot;arbiter&quot;</span><span class=\"operator\">:</span> <span class=\"literal string double\">&quot;true&quot;</span><span class=\"punctuation\">})</span>\n</pre>\n<p>Is not a valid command, you need to pass a full configuration document to rs.reconfig().</p>\n"
                    },
                    {
                        "id": "5a9b505597182d4140a45ec2",
                        "correct": false,
                        "problemType": "checkAllThatApply",
                        "text": "When connected to a replica set secondary node using the <tt class=\"docutils literal\">mongo</tt> shell, which\nof the following set of commands will return successfully?",
                        "bookmarked": false,
                        "choices": [
                            {
                                "text": "<tt class=\"docutils literal\">db.isMaster()</tt>",
                                "correct": true,
                                "checked": false
                            },
                            {
                                "text": "<tt class=\"docutils literal\"><span class=\"pre\">rs.setSlaveOk();</span> <span class=\"pre\">db.newcollection.insert({&quot;name&quot;:</span> <span class=\"pre\">&quot;Nathan&quot;})</span></tt>",
                                "correct": false,
                                "checked": false
                            },
                            {
                                "text": "<tt class=\"docutils literal\"><span class=\"pre\">rs.setSlaveOk();</span> <span class=\"pre\">db.adminCommand({listDatabases:</span> 1})</tt>",
                                "correct": true,
                                "checked": false
                            }
                        ],
                        "answerExplanation": "<p><strong>Incorrect Option:</strong></p>\n<ul>\n<li><p class=\"first\"><tt class=\"docutils literal\"><span class=\"pre\">rs.setSlaveOk();</span> <span class=\"pre\">db.newcollection.insert({&quot;name&quot;:</span> <span class=\"pre\">&quot;Nathan&quot;})</span></tt></p>\n<p>This command will fail since write operations cannot be performed in secondary\nnodes of a replica set.</p>\n</li>\n</ul>\n<p><strong>Correct Options:</strong></p>\n<ul>\n<li><p class=\"first\"><tt class=\"docutils literal\"><span class=\"pre\">rs.setSlaveOk();</span> <span class=\"pre\">db.adminCommand({listDatabases:</span> 1})</tt></p>\n<p>Reads on secondary nodes need to be explicit. In the <tt class=\"docutils literal\">mongo</tt> shell we enable\nreads on secondary nodes by preceding a read command with <tt class=\"docutils literal\">rs.setSlaveOk()</tt>,\ntherefore this <tt class=\"docutils literal\"><span class=\"pre\">db.adminCommand({listDatabases:</span> 1})</tt> would return\nsuccessfully.</p>\n</li>\n<li><p class=\"first\"><tt class=\"docutils literal\">db.isMaster()</tt></p>\n<p>The <tt class=\"docutils literal\">db.isMaster()</tt> returns a document that describes the role of the\n<tt class=\"docutils literal\">mongod</tt> instance to which we are connected. This command can be run on all\nnodes, regardless of the node current replica set role.</p>\n</li>\n</ul>\n"
                    },
                    {
                        "id": "5c336bdb599c82a4679654bf",
                        "correct": false,
                        "problemType": "checkAllThatApply",
                        "text": "<p>You have the following information for the <tt class=\"docutils literal\">members</tt> field in your\nreplicaset configuration document</p>\n<pre class=\"code sh literal-block\">\n<span class=\"literal string double\">&quot;members&quot;</span> : <span class=\"operator\">[</span>\n  <span class=\"operator\">{</span>\n    <span class=\"literal string double\">&quot;_id&quot;</span> : 0,\n    <span class=\"literal string double\">&quot;host&quot;</span> : <span class=\"literal string double\">&quot;acmecorp:27017&quot;</span>,\n    <span class=\"literal string double\">&quot;arbiterOnly&quot;</span> : false,\n    <span class=\"literal string double\">&quot;buildIndexes&quot;</span> : true,\n    <span class=\"literal string double\">&quot;hidden&quot;</span> : false,\n    <span class=\"literal string double\">&quot;priority&quot;</span> : 1,\n    <span class=\"literal string double\">&quot;tags&quot;</span> : <span class=\"operator\">{</span>\n\n    <span class=\"operator\">}</span>,\n    <span class=\"literal string double\">&quot;slaveDelay&quot;</span> : NumberLong<span class=\"operator\">(</span>0<span class=\"operator\">)</span>,\n    <span class=\"literal string double\">&quot;votes&quot;</span> : 1\n  <span class=\"operator\">}</span>,\n  <span class=\"operator\">{</span>\n    <span class=\"literal string double\">&quot;_id&quot;</span> : 1,\n    <span class=\"literal string double\">&quot;host&quot;</span> : <span class=\"literal string double\">&quot;acmecorp:27018&quot;</span>,\n    <span class=\"literal string double\">&quot;arbiterOnly&quot;</span> : false,\n    <span class=\"literal string double\">&quot;buildIndexes&quot;</span> : true,\n    <span class=\"literal string double\">&quot;hidden&quot;</span> : true,\n    <span class=\"literal string double\">&quot;priority&quot;</span> : 0,\n    <span class=\"literal string double\">&quot;tags&quot;</span> : <span class=\"operator\">{</span>\n\n    <span class=\"operator\">}</span>,\n    <span class=\"literal string double\">&quot;slaveDelay&quot;</span> : NumberLong<span class=\"operator\">(</span>3600<span class=\"operator\">)</span>,\n    <span class=\"literal string double\">&quot;votes&quot;</span> : 0\n  <span class=\"operator\">}</span>,\n  <span class=\"operator\">{</span>\n    <span class=\"literal string double\">&quot;_id&quot;</span> : 2,\n    <span class=\"literal string double\">&quot;host&quot;</span> : <span class=\"literal string double\">&quot;acmecorp:27019&quot;</span>,\n    <span class=\"literal string double\">&quot;arbiterOnly&quot;</span> : false,\n    <span class=\"literal string double\">&quot;buildIndexes&quot;</span> : true,\n    <span class=\"literal string double\">&quot;hidden&quot;</span> : false,\n    <span class=\"literal string double\">&quot;priority&quot;</span> : 1,\n    <span class=\"literal string double\">&quot;tags&quot;</span> : <span class=\"operator\">{</span>\n\n    <span class=\"operator\">}</span>,\n    <span class=\"literal string double\">&quot;slaveDelay&quot;</span> : NumberLong<span class=\"operator\">(</span>0<span class=\"operator\">)</span>,\n    <span class=\"literal string double\">&quot;votes&quot;</span> : 1\n  <span class=\"operator\">}</span>\n<span class=\"operator\">]</span>,\n</pre>\n<p>Select the following true statements.</p>\n",
                        "bookmarked": false,
                        "choices": [
                            {
                                "text": "If member 0 or member 2 goes down, no new primary will be elected",
                                "correct": true,
                                "checked": false
                            },
                            {
                                "text": "Member 2 is more likely than member 0 to become primary",
                                "correct": false,
                                "checked": false
                            },
                            {
                                "text": "Member 1 can never become the primary",
                                "correct": true,
                                "checked": false
                            }
                        ],
                        "answerExplanation": "<p>The correct answers are:</p>\n<ul class=\"simple\">\n<li>If member 0 or member 2 goes down, no new primary will be elected<ul>\n<li>This is because of the hidden node, member 1! Since it cannot vote, there\nwould be no majority to elect a new primary if member 0 or member 2 goes\ndown. An important consideration to keep in mind.</li>\n</ul>\n</li>\n<li>Member 1 can never become the primary<ul>\n<li>Because member 1 has a <cite>slaveDelay</cite>, it can never become the primary.</li>\n</ul>\n</li>\n</ul>\n"
                    }
                ],
                "score": 0
            },
            {
                "id": "602dbef4bed1b67447eaa31e",
                "name": "Sharding",
                "total": 10,
                "problems": [
                    {
                        "id": "5c49ec64414a09cbf6ab4a6d",
                        "correct": false,
                        "problemType": "multipleChoice",
                        "text": "How can you increase the cardinality of the shard key?",
                        "bookmarked": false,
                        "choices": [
                            {
                                "text": "Increase the number of shards.",
                                "correct": false,
                                "checked": false
                            },
                            {
                                "text": "Use multiple shard keys.",
                                "correct": false,
                                "checked": false
                            },
                            {
                                "text": "Increase the number of chunks.",
                                "correct": false,
                                "checked": false
                            },
                            {
                                "text": "Create an index on the shard key.",
                                "correct": false,
                                "checked": false
                            },
                            {
                                "text": "Use a compound shard key.",
                                "correct": true,
                                "checked": false
                            }
                        ],
                        "answerExplanation": "<p><strong>Correct Answer:</strong></p>\n<p><em>Use a compound shard key.</em></p>\n<blockquote>\nUsing a compound shard key creates more possibilities for the value of the\nshard key, by using each unique combination of all the fields in the key.</blockquote>\n<p><strong>Incorrect Answers:</strong></p>\n<p><em>Use multiple shard keys.</em></p>\n<blockquote>\nYou cannot shard on multiple keys in a collection.</blockquote>\n<p><em>Increase the number of shards.</em></p>\n<blockquote>\nAdding more shards will decrease the load on each shard, but this will not\nincrease the cardinality of the shard key.</blockquote>\n<p><em>Increase the number of chunks.</em></p>\n<blockquote>\nThis will be a <em>result</em> of increasing the cardinality of the shard key, not a\n<em>cause</em>.</blockquote>\n<p><em>Create an index on the shard key.</em></p>\n<blockquote>\nIt is already a requirement that the shard key has an index, therefore this\nwill not increase the cardinality of the shard key.</blockquote>\n"
                    },
                    {
                        "id": "5aa31bc996f30f818591a5a1",
                        "correct": false,
                        "problemType": "multipleChoice",
                        "text": "Where do all non-sharded collections get stored in a sharded cluster?",
                        "bookmarked": false,
                        "choices": [
                            {
                                "text": "mongos",
                                "correct": false,
                                "checked": false
                            },
                            {
                                "text": "Config server",
                                "correct": false,
                                "checked": false
                            },
                            {
                                "text": "In all primary shard nodes",
                                "correct": false,
                                "checked": false
                            },
                            {
                                "text": "In all secondaries shard nodes",
                                "correct": false,
                                "checked": false
                            },
                            {
                                "text": "Primary shard",
                                "correct": true,
                                "checked": false
                            }
                        ],
                        "answerExplanation": "<p><strong>Correct Option:</strong></p>\n<ul>\n<li><p class=\"first\">Primary shard</p>\n<p>All <a class=\"reference external\" href=\"https://docs.mongodb.com/manual/sharding/index.html#sharded-and-non-sharded-collections\">non-sharded collections</a> will be stored in the database primary shard.</p>\n</li>\n</ul>\n<p><strong>Incorrect Options:</strong></p>\n<ul>\n<li><p class=\"first\">Config server</p>\n<p>The config servers do not hold any application data. Just shard metadata\ninformation.</p>\n</li>\n<li><p class=\"first\">In all primary shard nodes</p>\n<p>Sharded collections documents will be distributed across all shards.\nNon-sharded are kept in the primary shard</p>\n</li>\n<li><p class=\"first\">In all secondaries shard nodes</p>\n<p>Sharded collections documents will be distributed across all shards.\nNon-sharded are kept in the primary shard</p>\n</li>\n<li><p class=\"first\">mongos</p>\n<p>The mongos does not hold any data.</p>\n</li>\n</ul>\n"
                    },
                    {
                        "id": "5c3f6c4ed27f809976d98860",
                        "correct": false,
                        "problemType": "checkAllThatApply",
                        "text": "When is it most beneficial to use a hashed shard key?",
                        "bookmarked": false,
                        "choices": [
                            {
                                "text": "for geographically zoned sharding",
                                "correct": false,
                                "checked": false
                            },
                            {
                                "text": "for fast sorts using the shard key",
                                "correct": false,
                                "checked": false
                            },
                            {
                                "text": "for monotonically decreasing or increasing shard key values",
                                "correct": true,
                                "checked": false
                            }
                        ],
                        "answerExplanation": "<p>The correct answer is:</p>\n<ul class=\"simple\">\n<li>for a monotonically changing shard key</li>\n</ul>\n<p>All other answers are incorrect since a hashed shard key will not be able to\nsupport either geographically zoned sharding or fast sorts on the shard key.</p>\n"
                    },
                    {
                        "id": "5c40df8995e658fa67acbb25",
                        "correct": false,
                        "problemType": "checkAllThatApply",
                        "text": "Which is true of scatter gather queries?",
                        "bookmarked": false,
                        "choices": [
                            {
                                "text": "scatter gather queries are highly performant",
                                "correct": false,
                                "checked": false
                            },
                            {
                                "text": "the mongos has to go to each shard to check if the shard has the requested documents",
                                "correct": true,
                                "checked": false
                            },
                            {
                                "text": "scatter gather queries can be triggered by using your shard key in your query predicates",
                                "correct": false,
                                "checked": false
                            }
                        ],
                        "answerExplanation": "<p><strong>Incorrect Options:</strong></p>\n<ul>\n<li><p class=\"first\"><em>scatter gather queries can be triggered by using your shard key in your query predicates</em></p>\n<p>Using the shard key in your query predicates prevents scatter gather queries\nby routing the query to the correct shard. This is due to the config server\nbeing aware of the distribution of the values across the cluster.</p>\n</li>\n<li><p class=\"first\"><em>scatter gather queries are highly performant</em></p>\n<p>Scatter gather queries are not performant as the mongos has to go to each\nshard to check if the requested documents are present.</p>\n</li>\n</ul>\n<p><strong>Correct Option</strong></p>\n<ul>\n<li><p class=\"first\"><em>the mongos has to go to each shard to check if the shard has the requested documents</em></p>\n<p>Not querying on your shard key causes scatter gather queries. As a result, the\nmongos has no way of checking which shard the data resides on. This causes the\nmongos needs to route the query to each shard to gather the result set.</p>\n</li>\n</ul>\n"
                    },
                    {
                        "id": "5c33e30e0a96f53fc48aef25",
                        "correct": false,
                        "problemType": "multipleChoice",
                        "text": "<p>Given the following query:</p>\n<pre class=\"code js literal-block\">\n<span class=\"punctuation\">{</span>\n  <span class=\"name other\">find</span><span class=\"punctuation\">({</span><span class=\"literal string double\">&quot;cast&quot;</span><span class=\"operator\">:</span> <span class=\"literal string double\">&quot;Meryl Streep&quot;</span><span class=\"punctuation\">}).</span><span class=\"name other\">sort</span><span class=\"punctuation\">({</span><span class=\"literal string double\">&quot;year&quot;</span><span class=\"operator\">:</span><span class=\"literal number integer\">1</span><span class=\"punctuation\">}).</span><span class=\"name other\">skip</span><span class=\"punctuation\">(</span><span class=\"literal number integer\">100</span><span class=\"punctuation\">).</span><span class=\"name other\">limit</span><span class=\"punctuation\">(</span><span class=\"literal number integer\">20</span><span class=\"punctuation\">)</span>\n<span class=\"punctuation\">}</span>\n</pre>\n<p>And the following steps for executing such query in a sharded cluster:</p>\n<blockquote>\nroute - mongos send/route the query to the shards\nlimit_by_shards - each shard limits to 100+20 docs on their partial result set\nlimit_by_mongos - mongos limits to 20 docs\nskip_by_shards - each shard skips 100 docs on their partial result set\nskip_by_mongos - mongos skips of 100 docs\nsort_by_shards - each shard sorts their partial result set\nsort_by_mongos - mongos does a merge sort on the received documents</blockquote>\n<p>Which of the following has the right steps, and in the right order?</p>\n",
                        "bookmarked": false,
                        "choices": [
                            {
                                "text": "route, sort_by_shard, skip_by_shard, limit_by_shard, sort_by_mongos, skip_by_mongos, limit_by_mongos",
                                "correct": false,
                                "checked": false
                            },
                            {
                                "text": "route, sort_by_shard, limit_by_shard, sort_by_mongos, skip_by_mongos, limit_by_mongos",
                                "correct": true,
                                "checked": false
                            },
                            {
                                "text": "route, limit_by_shard, sort_by_mongos, limit_by_mongos, skip_by_mongos",
                                "correct": false,
                                "checked": false
                            },
                            {
                                "text": "route, skip_by_shard, limit_by_shard, sort_by_shard, skip_by_mongos, limit_by_mongos, sort_by_mongos",
                                "correct": false,
                                "checked": false
                            },
                            {
                                "text": "route, limit_by_shard, sort_by_mongos, skip_by_mongos, limit_by_mongos",
                                "correct": false,
                                "checked": false
                            }
                        ],
                        "answerExplanation": "<p><strong>Correct Answer:</strong></p>\n<p><em>route, sort_by_shard, limit_by_shard, sort_by_mongos, skip_by_mongos, limit_by_mongos</em></p>\n<p>Out of all the steps, the shards are not going to skip documents, because\nskipping the first X documents only make sense on the final result set.</p>\n<p>Remember the importance of having the shards responsible to sort their set,\nbecause they likely have an index to produce the ordered set.\nThe mongos, a lighter process than the <tt class=\"docutils literal\">mongod</tt>, performs a merge sort,\nwhich is a rather inexpensive operation compare to a complete sort.</p>\n<p>The shards must limit to not only 20 documents, but also returned the\npotentially skipped documents. For this reason, they will limit to\nthe sum of the <tt class=\"docutils literal\">limit()</tt> and <tt class=\"docutils literal\">skip()</tt> values.</p>\n"
                    },
                    {
                        "id": "5c3d07ac9183fbf92fd8ba73",
                        "correct": false,
                        "problemType": "checkAllThatApply",
                        "text": "In order to store data in a sharded cluster in MongoDB, you <strong>must</strong> have:",
                        "bookmarked": false,
                        "choices": [
                            {
                                "text": "a mongos process",
                                "correct": true,
                                "checked": false
                            },
                            {
                                "text": "at least one shard",
                                "correct": true,
                                "checked": false
                            },
                            {
                                "text": "config servers",
                                "correct": true,
                                "checked": false
                            }
                        ],
                        "answerExplanation": "<p>All three of these options are true.</p>\n<p>In order to start a sharded cluster in MongoDB, you must have config servers,\nwhich will store chunk metadata and user information, a mongos process to\nroute requests to the correct shards, and at least one shard to store data.</p>\n"
                    },
                    {
                        "id": "5c3fa5a4831ac81344409bd7",
                        "correct": false,
                        "problemType": "checkAllThatApply",
                        "text": "At which point does the balancer decide to start moving chunks from\none shard to another?",
                        "bookmarked": false,
                        "choices": [
                            {
                                "text": "there has been a request to <em>drain</em> a shard due to a <tt class=\"docutils literal\">removeShard</tt> command",
                                "correct": true,
                                "checked": false
                            },
                            {
                                "text": "zone sharding is used and some chunks are identified to be on the wrong shard",
                                "correct": true,
                                "checked": false
                            },
                            {
                                "text": "when some shards have too many chunks compared to others",
                                "correct": true,
                                "checked": false
                            }
                        ],
                        "answerExplanation": "<p><strong>Correct Options:</strong></p>\n<ul class=\"simple\">\n<li>when some shards have too many chunks compared to others</li>\n<li>zone sharding is used and some chunks are identified to be on the wrong shard</li>\n<li>there has been a request to <em>drain</em> a shard due to a <tt class=\"docutils literal\">removeShard</tt> command</li>\n</ul>\n<p>All of these scenarios trigger a chunk migration.</p>\n"
                    },
                    {
                        "id": "5c3f57ebd9bfdc23a6c1a211",
                        "correct": false,
                        "problemType": "checkAllThatApply",
                        "text": "<p>You have the following operational requirements and benchmarks within your\norganization:</p>\n<blockquote>\n<ul class=\"simple\">\n<li>Full backup or restore times can never exceed 20 minutes</li>\n<li>Client read and writes can never exceed 95 ms latency</li>\n<li>The current machines are provisioned with 16GB of RAM and 4TB disk space</li>\n<li>Backup and recovery times with 1.5TB took 15 minutes each, respectively</li>\n<li>The next available server size is 32GB RAM and 8TB disk space with a monthly\ncost increase of 10% for double the performance.</li>\n</ul>\n</blockquote>\n<p>The application is expected to grow in users and resource consumption at a rate\nof 7% monthly. Consider the following scenarios that represent different\napplications:</p>\n<blockquote>\n<ul class=\"simple\">\n<li><em>Scenario A:</em> Your replica set nodes are consuming 10% of available RAM and\nyour database is 200GB, and a new law was passed in the EU requiring your\norganization to store certain data about EU customers within the EU. 66% of\nyour users are location within the Americas with an average read and write\nresponse time of 90ms.</li>\n<li><em>Scenario B:</em> Your replica set nodes are consuming 90% of available RAM and\nyour database is 400GB</li>\n<li><em>Scenario C:</em> Your replica set nodes are consuming 60% of a available RAM and\nyour database is 2.8TB</li>\n</ul>\n</blockquote>\n<p>Select the scenario(s) above where sharding should be considered.</p>\n",
                        "bookmarked": false,
                        "choices": [
                            {
                                "text": "A",
                                "correct": true,
                                "checked": false
                            },
                            {
                                "text": "B",
                                "correct": false,
                                "checked": false
                            },
                            {
                                "text": "C",
                                "correct": true,
                                "checked": false
                            }
                        ],
                        "answerExplanation": "<p>The correct answers are scenarios A and C.</p>\n<p><em>Scenario C:</em> While the cost of vertically scaling is acceptable, we're already\nusing 2.8TB of disk space. Considering we benchmarked a backup operation and\nrestore operation at 15 minutes each with 1.5TB of data, we're already beyond\nour SLAs. Sharding should have already been considered much sooner.</p>\n<p><em>Scenario A:</em> This is a real world scenario that zone sharding was designed to\naddress, and depending on the type of information your organization stores you\nmay be subject to regulations requiring you to store data in a specific\ngeographical area. Considering the majority of users are located in the Americas\napproaching SLA limits, sharding is more appropriate here than relocating all\ndata to the EU.</p>\n<p>Let's discuss the incorrect answer.</p>\n<p>In scenario B, we're consuming 10% of available disk (400GB) and 90% of\navailable RAM. This indicates quite an abundance of indexes for more performant\nreads. Based on benchmarks, backup and restore times are within acceptable SLAs\nand the cost to scale vertically is cheaper than the cost to scale horizontally.\nBased on the information provided, sharding is not appropriate in this scenario.</p>\n"
                    },
                    {
                        "id": "5c3f26fcbaf880de6f093683",
                        "correct": false,
                        "problemType": "checkAllThatApply",
                        "text": "The <tt class=\"docutils literal\">config</tt> database in a sharded cluster contains information such as:",
                        "bookmarked": false,
                        "choices": [
                            {
                                "text": "The primary shard for a database",
                                "correct": true,
                                "checked": false
                            },
                            {
                                "text": "The distribution of chunks and chunk boundaries",
                                "correct": true,
                                "checked": false
                            },
                            {
                                "text": "Hints to improve the performance of sharded queries",
                                "correct": false,
                                "checked": false
                            }
                        ],
                        "answerExplanation": "<p>The <tt class=\"docutils literal\">config</tt> database contains a lot of information, including which shard\nis the primary shard for a database and how information on chunk distribution\nand boundaries.</p>\n<p>It does not include performance hints.</p>\n"
                    },
                    {
                        "id": "5c3e0774a55c9fbb0de6e118",
                        "correct": false,
                        "problemType": "checkAllThatApply",
                        "text": "What is sharding?",
                        "bookmarked": false,
                        "choices": [
                            {
                                "text": "a method of distributing data across multiple machines",
                                "correct": true,
                                "checked": false
                            },
                            {
                                "text": "a method to ensure data availability",
                                "correct": false,
                                "checked": false
                            },
                            {
                                "text": "a way to vertically scale",
                                "correct": false,
                                "checked": false
                            }
                        ],
                        "answerExplanation": "<p>The correct answer is:</p>\n<ul class=\"simple\">\n<li>a method of distributing data across multiple machines</li>\n<li>a method to ensure data availability</li>\n</ul>\n<p>Is an <strong>incorrect</strong> answer. <em>Replication</em> is used to ensure data availability.</p>\n<ul class=\"simple\">\n<li>a way to vertically scale</li>\n</ul>\n<p>Is an <strong>incorrect</strong> answer.</p>\n<ul class=\"simple\">\n<li>Sharding is a way to horizontally scale when vertical scaling becomes either too\ncostly or you reach a data size where backups and restores will become unmanagable\nfor a single replica set. You can read more in the <a class=\"reference external\" href=\"https://docs.mongodb.com/manual/sharding/\">Sharding section of MongoDB documentation</a>.</li>\n</ul>\n"
                    }
                ],
                "score": 0
            }
        ]
    }
}