{
    "examRole": "DBA",
    "displayName": "MongoDB DBA Exam",
    "studentExamDates": [
        {
            "id": "5d1778d116d2372b7aaf35a2",
            "submitDate": "2019-06-29T14:42:34.164000Z"
        },
        {
            "id": "5d1777fe16d2372b7aaf359f",
            "submitDate": "2019-06-29T14:39:30.034000Z"
        },
        {
            "id": "5d176bcfeb8883736bb5d788",
            "submitDate": "2019-06-29T14:23:32.395000Z"
        }
    ],
    "studentExam": {
        "id": "5d1778d116d2372b7aaf35a2",
        "userId": 703428,
        "score": 0,
        "total": 60,
        "sections": [
            {
                "id": "a38a72b3300bda14ca31cd75",
                "name": "Philosophy & Features",
                "total": 3,
                "problems": [
                    {
                        "id": "5c8c184ee3dc333c0fbc81fc",
                        "correct": false,
                        "problemType": "checkAllThatApply",
                        "text": "Which of the following is true?",
                        "bookmarked": false,
                        "choices": [
                            {
                                "text": "a document references multiple collections in a database",
                                "correct": false,
                                "checked": false
                            },
                            {
                                "text": "collections can contain multiple sub-collections",
                                "correct": false,
                                "checked": false
                            },
                            {
                                "text": "databases can store many documents",
                                "correct": true,
                                "checked": false
                            },
                            {
                                "text": "a database and collection combination reference a namespace",
                                "correct": true,
                                "checked": false
                            }
                        ],
                        "answerExplanation": "<p><strong>Correct Answers</strong></p>\n<blockquote>\n<ul class=\"simple\">\n<li>databases can store many documents. This is true.</li>\n<li>a database and collection combination reference a namespace. A database and\ncollection are referenced using dot notation. For <tt class=\"docutils literal\">exampla movies.reviews</tt>.</li>\n</ul>\n</blockquote>\n<p><strong>Incorrect Answers</strong></p>\n<ul class=\"simple\">\n<li><strong>collections can contain multiple sub-collections</strong> A collection cannot contain collections.\nOnly documents.</li>\n<li><strong>a document references multiple collections in a database</strong> A document is only\npart of a single collection and cannot be part of multiple collections.</li>\n</ul>\n"
                    },
                    {
                        "id": "5c38fb79a16793843eb61bc1",
                        "correct": false,
                        "problemType": "checkAllThatApply",
                        "text": "What information can be obtained from running <tt class=\"docutils literal\"><span class=\"pre\">rs.serverStatus()['repl']</span></tt>\non a secondary replica set node?",
                        "bookmarked": false,
                        "choices": [
                            {
                                "text": "replica set name",
                                "correct": true,
                                "checked": false
                            },
                            {
                                "text": "the name, port and IP of the primary node",
                                "correct": true,
                                "checked": false
                            },
                            {
                                "text": "whether the node is a primary or a secondary",
                                "correct": true,
                                "checked": false
                            }
                        ],
                        "answerExplanation": "<p>All answers are correct.</p>\n<p><tt class=\"docutils literal\"><span class=\"pre\">rs.serverStatus()['repl']</span></tt> provides information aboout the categories\nlisted and more, such as the status of the replica set and its members. This\nparticular command's output is almost identical to the <tt class=\"docutils literal\">rs.isMaster</tt> command\nexcept that it includes the <tt class=\"docutils literal\">rbid</tt> field.</p>\n"
                    },
                    {
                        "id": "5c9563718d9381b2522f4e96",
                        "correct": false,
                        "problemType": "checkAllThatApply",
                        "text": "<p>Consider the following aggregation pipeline:</p>\n<pre class=\"code js literal-block\">\n<span class=\"name other\">use</span> <span class=\"name other\">services</span>\n\n<span class=\"name other\">db</span><span class=\"punctuation\">.</span><span class=\"name other\">orders</span><span class=\"punctuation\">.</span><span class=\"name other\">aggregate</span><span class=\"punctuation\">([</span>\n  <span class=\"punctuation\">{</span>\n    <span class=\"name other\">$lookup</span><span class=\"operator\">:</span>\n      <span class=\"punctuation\">{</span>\n        <span class=\"name other\">from</span><span class=\"operator\">:</span> <span class=\"literal string double\">&quot;warehouses&quot;</span><span class=\"punctuation\">,</span>\n        <span class=\"keyword declaration\">let</span><span class=\"operator\">:</span> <span class=\"punctuation\">{</span> <span class=\"name other\">order_item</span><span class=\"operator\">:</span> <span class=\"literal string double\">&quot;$item&quot;</span><span class=\"punctuation\">,</span> <span class=\"name other\">order_qty</span><span class=\"operator\">:</span> <span class=\"literal string double\">&quot;$ordered&quot;</span> <span class=\"punctuation\">},</span>\n        <span class=\"name other\">pipeline</span><span class=\"operator\">:</span> <span class=\"punctuation\">[</span>\n          <span class=\"punctuation\">{</span> <span class=\"name other\">$match</span><span class=\"operator\">:</span>\n            <span class=\"punctuation\">{</span> <span class=\"name other\">$expr</span><span class=\"operator\">:</span>\n              <span class=\"punctuation\">{</span> <span class=\"name other\">$and</span><span class=\"operator\">:</span>\n                <span class=\"punctuation\">[</span>\n                  <span class=\"punctuation\">{</span> <span class=\"name other\">$eq</span><span class=\"operator\">:</span> <span class=\"punctuation\">[</span> <span class=\"literal string double\">&quot;$stock_item&quot;</span><span class=\"punctuation\">,</span>  <span class=\"literal string double\">&quot;$$order_item&quot;</span> <span class=\"punctuation\">]</span> <span class=\"punctuation\">},</span>\n                  <span class=\"punctuation\">{</span> <span class=\"name other\">$gte</span><span class=\"operator\">:</span> <span class=\"punctuation\">[</span> <span class=\"literal string double\">&quot;$instock&quot;</span><span class=\"punctuation\">,</span> <span class=\"literal string double\">&quot;$$order_qty&quot;</span> <span class=\"punctuation\">]</span> <span class=\"punctuation\">}</span>\n                <span class=\"punctuation\">]</span>\n              <span class=\"punctuation\">}</span>\n            <span class=\"punctuation\">}</span>\n          <span class=\"punctuation\">},</span>\n          <span class=\"punctuation\">{</span> <span class=\"name other\">$project</span><span class=\"operator\">:</span> <span class=\"punctuation\">{</span> <span class=\"name other\">stock_item</span><span class=\"operator\">:</span> <span class=\"literal number integer\">0</span><span class=\"punctuation\">,</span> <span class=\"name other\">_id</span><span class=\"operator\">:</span> <span class=\"literal number integer\">0</span> <span class=\"punctuation\">}</span> <span class=\"punctuation\">}</span>\n        <span class=\"punctuation\">],</span>\n        <span class=\"name other\">as</span><span class=\"operator\">:</span> <span class=\"literal string double\">&quot;stockdata&quot;</span>\n      <span class=\"punctuation\">}</span>\n  <span class=\"punctuation\">}</span>\n<span class=\"punctuation\">])</span>\n</pre>\n<p>If this pipeline is executed on a sharded cluster, where can the <tt class=\"docutils literal\">$lookup</tt>\nstage be performed?</p>\n",
                        "bookmarked": false,
                        "choices": [
                            {
                                "text": "On the primary shard",
                                "correct": true,
                                "checked": false
                            },
                            {
                                "text": "On the <tt class=\"docutils literal\">mongos</tt>",
                                "correct": false,
                                "checked": false
                            },
                            {
                                "text": "On a random shard",
                                "correct": false,
                                "checked": false
                            }
                        ],
                        "answerExplanation": "The correct answer is the primary shard. This is because the <tt class=\"docutils literal\">$lookup</tt> stage\nneeds to be run on the primary shard. All other answers are incorrect."
                    }
                ],
                "score": 0
            },
            {
                "id": "ba1c1d7c799e90c738b6b8dc",
                "name": "CRUD",
                "total": 5,
                "problems": [
                    {
                        "id": "6b5aae2236942e83e9a361db",
                        "correct": false,
                        "problemType": "checkAllThatApply",
                        "text": "<p>The following <tt class=\"docutils literal\">find</tt> command, run from in a client application using the\ndefault cursor settings, matches 150 documents in the server:</p>\n<pre class=\"code js literal-block\">\n<span class=\"name other\">db</span><span class=\"punctuation\">.</span><span class=\"name other\">users</span><span class=\"punctuation\">.</span><span class=\"name other\">find</span><span class=\"punctuation\">({</span> <span class=\"literal string double\">&quot;comments&quot;</span><span class=\"operator\">:</span> <span class=\"punctuation\">{</span> <span class=\"literal string double\">&quot;$gte&quot;</span><span class=\"operator\">:</span> <span class=\"literal number integer\">200</span> <span class=\"punctuation\">}})</span>\n</pre>\n<p>Once the initial batch of results gets exhausted in the client, which command\nwill be sent to the server?</p>\n",
                        "bookmarked": false,
                        "choices": [
                            {
                                "text": "<tt class=\"docutils literal\">find</tt> command",
                                "correct": false,
                                "checked": false
                            },
                            {
                                "text": "No command will be sent if the cursor batch size is greater or equals to 150.",
                                "correct": true,
                                "checked": false
                            },
                            {
                                "text": "<tt class=\"docutils literal\">getMore</tt> command",
                                "correct": true,
                                "checked": false
                            }
                        ],
                        "answerExplanation": "<p><strong>Incorrect Answer</strong></p>\n<ul>\n<li><p class=\"first\"><tt class=\"docutils literal\">find</tt> command</p>\n<p>The <tt class=\"docutils literal\">find</tt> command is sent to open the cursor. It is not used to\nretrieve / iterate over batches of documents for an existing open cursor.</p>\n</li>\n</ul>\n<p><strong>Correct Answers</strong></p>\n<ul>\n<li><p class=\"first\"><tt class=\"docutils literal\">getMore</tt> command</p>\n<p>This is correct. After the initial batch of cursor documents gets exhausted, on client side,\na new batch of documents is requested by emitting a <a class=\"reference external\" href=\"https://docs.mongodb.com/manual/reference/command/getMore/#dbcmd.getMore\">getMore</a> command to the server.\nThe client application does not need to perform this operation. The driver will\nhandle the cursor results iteration.</p>\n</li>\n<li><p class=\"first\">No command will be sent if the cursor batch size is greater or equals to 150.</p>\n<p>In case the the cursor gets exhausted but there are no more results to return,\nsince the initial batch already encompasses all the matching documents, no\ncommand needs to be sent back to the server.</p>\n</li>\n</ul>\n"
                    },
                    {
                        "id": "5c6460e019bce23acdc102ff",
                        "correct": false,
                        "problemType": "checkAllThatApply",
                        "text": "<p>Consider the following operation:</p>\n<pre class=\"code js literal-block\">\n<span class=\"name other\">db</span><span class=\"punctuation\">.</span><span class=\"name other\">movies</span><span class=\"punctuation\">.</span><span class=\"name other\">find</span><span class=\"punctuation\">(</span> <span class=\"punctuation\">{</span> <span class=\"name other\">genre</span><span class=\"operator\">:</span> <span class=\"literal string double\">&quot;Action&quot;</span> <span class=\"punctuation\">},</span> <span class=\"punctuation\">{</span> <span class=\"name other\">year</span><span class=\"operator\">:</span> <span class=\"literal number integer\">1</span> <span class=\"punctuation\">}</span> <span class=\"punctuation\">)</span>\n</pre>\n<p>Which fields should we expect to exist in result documents?</p>\n",
                        "bookmarked": false,
                        "choices": [
                            {
                                "text": "<tt class=\"docutils literal\">_id</tt>",
                                "correct": true,
                                "checked": false
                            },
                            {
                                "text": "<tt class=\"docutils literal\">year</tt>",
                                "correct": true,
                                "checked": false
                            },
                            {
                                "text": "<tt class=\"docutils literal\">genre</tt>",
                                "correct": false,
                                "checked": false
                            }
                        ],
                        "answerExplanation": "<p><strong>Correct Answers</strong></p>\n<p><tt class=\"docutils literal\">year</tt>, <tt class=\"docutils literal\">_id</tt></p>\n<p>The <tt class=\"docutils literal\">year</tt> field was specified in the projection, and the <tt class=\"docutils literal\">_id</tt> field is\nreturned by default.</p>\n<p><strong>Incorrect Answers</strong></p>\n<p><tt class=\"docutils literal\">genre</tt></p>\n<p>Because the field <tt class=\"docutils literal\">year</tt> was the only field specified in the projection, all\nother fields (except <tt class=\"docutils literal\">_id</tt>) will be suppressed from result documents.</p>\n"
                    },
                    {
                        "id": "5c2a0affe512f9e0b5bd5afa",
                        "correct": false,
                        "problemType": "checkAllThatApply",
                        "text": "The <tt class=\"docutils literal\">$geoWithin</tt> operator finds:",
                        "bookmarked": false,
                        "choices": [
                            {
                                "text": "documents that completely overlap with a GeoJson Polygon",
                                "correct": true,
                                "checked": false
                            },
                            {
                                "text": "documents within a GeoJson Polygon",
                                "correct": true,
                                "checked": false
                            },
                            {
                                "text": "documents that partially overlap with a GeoJson Polygon",
                                "correct": false,
                                "checked": false
                            }
                        ],
                        "answerExplanation": "<p><strong>Incorrect Answer:</strong></p>\n<ul>\n<li><p class=\"first\">finds document that partially overlap a GeoJson Polygon</p>\n<p>This option is incorrect. The <tt class=\"docutils literal\">$geoWithin</tt> returns documents within a\nGeoJson Polygon, or Multi-Polygon, therefore all documents need to be within\nthe boundaries defined by the given GeoJson.</p>\n</li>\n</ul>\n<p><strong>Correct Answers:</strong></p>\n<ul>\n<li><p class=\"first\">finds documents within a GeoJson Polygon</p>\n</li>\n<li><p class=\"first\">finds documents that completely overlap a GeoJson Polygon</p>\n<p>All document coordinates are required to be within the defined GeoJson Polygon\nor Multi-Polygon therefore all documents need to completely overlap in their\ndefined geometry.</p>\n</li>\n</ul>\n<p><a class=\"reference external\" href=\"https://docs.mongodb.com/manual/reference/operator/query/geoWithin/\">$geoWithin</a></p>\n"
                    },
                    {
                        "id": "5c252b0585c09e94f57cb894",
                        "correct": false,
                        "problemType": "checkAllThatApply",
                        "text": "Which of the following statements are true of creating documents?",
                        "bookmarked": false,
                        "choices": [
                            {
                                "text": "We can supply an <tt class=\"docutils literal\">_id</tt> for the document.",
                                "correct": true,
                                "checked": false
                            },
                            {
                                "text": "MongoDB or the client will create an <tt class=\"docutils literal\">_id</tt> for us if we do not supply one.",
                                "correct": true,
                                "checked": false
                            },
                            {
                                "text": "All <tt class=\"docutils literal\">_id</tt> values within a single collection must be unique.",
                                "correct": true,
                                "checked": false
                            }
                        ],
                        "answerExplanation": "<p><strong>All options are correct</strong>.</p>\n<p><tt class=\"docutils literal\">_id</tt> values created for us by MongoDB are of type <tt class=\"docutils literal\">ObjectId</tt>.\nWe can supply an <tt class=\"docutils literal\">_id</tt> for the document and all <tt class=\"docutils literal\">_id</tt> values within a single\ncollection must be unique given that they represent the document primary key</p>\n"
                    },
                    {
                        "id": "5c2543dfdbbed90e9abdbf1e",
                        "correct": false,
                        "problemType": "checkAllThatApply",
                        "text": "Select all statements that accurately describe how the <tt class=\"docutils literal\">updateOne</tt> command\nworks in conjunction with the <tt class=\"docutils literal\">$unset</tt> operator.",
                        "bookmarked": false,
                        "choices": [
                            {
                                "text": "if the field does not exist, <tt class=\"docutils literal\">$unset</tt> does nothing",
                                "correct": true,
                                "checked": false
                            },
                            {
                                "text": "the specified value in the <tt class=\"docutils literal\">$unset</tt> expression does not impact the operation",
                                "correct": true,
                                "checked": false
                            },
                            {
                                "text": "the <tt class=\"docutils literal\">$unset</tt> operator deletes a particular field",
                                "correct": true,
                                "checked": false
                            }
                        ],
                        "answerExplanation": "<p><strong>Correct Answers:</strong></p>\n<p>All choices are correct.</p>\n<p><tt class=\"docutils literal\">$unset</tt> operator deletes the field specified in the expression if it is\npresent in the document regardless of the value that is used in the <tt class=\"docutils literal\">$unset</tt>\nexpression.</p>\n<p>For additional description, such as using <tt class=\"docutils literal\">$unset</tt> with array fields see the\n<a class=\"reference external\" href=\"https://docs.mongodb.com/manual/reference/operator/update/unset/\">relevant documentation page.</a></p>\n"
                    }
                ],
                "score": 0
            },
            {
                "id": "1c335bcc03bf293c28370a7a",
                "name": "Indexes",
                "total": 11,
                "problems": [
                    {
                        "id": "5c4a2618515994c2f5d2882e",
                        "correct": false,
                        "problemType": "multipleChoice",
                        "text": "<p>Given the following query:</p>\n<pre class=\"code js literal-block\">\n<span class=\"name other\">db</span><span class=\"punctuation\">.</span><span class=\"name other\">songs</span><span class=\"punctuation\">.</span><span class=\"name other\">find</span><span class=\"punctuation\">(</span>\n  <span class=\"punctuation\">{</span> <span class=\"literal string double\">&quot;seconds&quot;</span><span class=\"operator\">:</span> <span class=\"punctuation\">{</span> <span class=\"literal string double\">&quot;$lt&quot;</span><span class=\"operator\">:</span> <span class=\"literal number integer\">400</span> <span class=\"punctuation\">},</span> <span class=\"literal string double\">&quot;genre&quot;</span><span class=\"operator\">:</span> <span class=\"literal string double\">&quot;rock&quot;</span> <span class=\"punctuation\">}</span>\n<span class=\"punctuation\">).</span><span class=\"name other\">sort</span><span class=\"punctuation\">(</span>\n  <span class=\"punctuation\">{</span> <span class=\"literal string double\">&quot;rating&quot;</span><span class=\"operator\">:</span> <span class=\"literal number integer\">1</span> <span class=\"punctuation\">}</span>\n<span class=\"punctuation\">)</span>\n</pre>\n<p>Which index on the <em>songs</em> collection will be the most performant for the above\nquery?</p>\n",
                        "bookmarked": false,
                        "choices": [
                            {
                                "text": "<tt class=\"docutils literal\">{&quot;genre&quot;: 1, &quot;seconds&quot;: 1, &quot;rating&quot;: 1}</tt>",
                                "correct": false,
                                "checked": false
                            },
                            {
                                "text": "<tt class=\"docutils literal\">{&quot;seconds&quot;: 1, &quot;genre&quot;: 1, &quot;rating&quot;: 1}</tt>",
                                "correct": false,
                                "checked": false
                            },
                            {
                                "text": "<tt class=\"docutils literal\">{&quot;rating&quot;: 1, &quot;seconds&quot;: 1, &quot;genre&quot;: 1}</tt>",
                                "correct": false,
                                "checked": false
                            },
                            {
                                "text": "<tt class=\"docutils literal\">{&quot;rating&quot;: 1, &quot;genre&quot;: 1, &quot;seconds&quot;: 1}</tt>",
                                "correct": false,
                                "checked": false
                            },
                            {
                                "text": "<tt class=\"docutils literal\">{&quot;genre&quot;: 1, &quot;rating&quot;: 1, &quot;seconds&quot;: 1}</tt>",
                                "correct": true,
                                "checked": false
                            }
                        ],
                        "answerExplanation": "<p>The <strong>correct</strong> answer is</p>\n<ul class=\"simple\">\n<li><tt class=\"docutils literal\">{&quot;genre&quot;: 1, &quot;rating&quot;: 1, &quot;seconds&quot;: 1}</tt></li>\n</ul>\n<p>Making the following answers <strong>incorrect</strong></p>\n<ul class=\"simple\">\n<li><tt class=\"docutils literal\">{&quot;genre&quot;: 1, &quot;seconds&quot;: 1, &quot;rating&quot;: 1}</tt></li>\n<li><tt class=\"docutils literal\">{&quot;rating&quot;: 1, &quot;genre&quot;: 1, &quot;seconds&quot;: 1}</tt></li>\n<li><tt class=\"docutils literal\">{&quot;rating&quot;: 1, &quot;seconds&quot;: 1, &quot;genre&quot;: 1}</tt></li>\n<li><tt class=\"docutils literal\">{&quot;seconds&quot;: 1, &quot;genre&quot;: 1, &quot;rating&quot;: 1}</tt></li>\n</ul>\n<p>The most efficient index for the given query should follow the <strong>equality,\nsort, range</strong> rule, where the compound index is built in this order for a query\nthat employs equality, range and sort conditions in it. This rule helps to\navoid inefficient operations such as a full collection scan or in\nmemory sort.</p>\n"
                    },
                    {
                        "id": "5c4a0fd4d2d90f130c33241a",
                        "correct": false,
                        "problemType": "multipleChoice",
                        "text": "<p>Given the following index:</p>\n<pre class=\"code js literal-block\">\n<span class=\"name other\">db</span><span class=\"punctuation\">.</span><span class=\"name other\">books</span><span class=\"punctuation\">.</span><span class=\"name other\">createIndex</span><span class=\"punctuation\">({</span> <span class=\"literal string double\">&quot;genre&quot;</span><span class=\"operator\">:</span> <span class=\"literal number integer\">1</span><span class=\"punctuation\">,</span> <span class=\"literal string double\">&quot;chapters&quot;</span><span class=\"operator\">:</span> <span class=\"literal number integer\">1</span> <span class=\"punctuation\">})</span>\n</pre>\n<p>what will the query plan look like for the following query?</p>\n<pre class=\"code js literal-block\">\n<span class=\"name other\">db</span><span class=\"punctuation\">.</span><span class=\"name other\">books</span><span class=\"punctuation\">.</span><span class=\"name other\">find</span><span class=\"punctuation\">(</span>\n  <span class=\"punctuation\">{</span> <span class=\"literal string double\">&quot;genre&quot;</span><span class=\"operator\">:</span> <span class=\"literal string double\">&quot;fiction&quot;</span><span class=\"punctuation\">,</span> <span class=\"literal string double\">&quot;chapters&quot;</span><span class=\"operator\">:</span> <span class=\"punctuation\">{</span><span class=\"literal string double\">&quot;$gt&quot;</span><span class=\"operator\">:</span> <span class=\"literal string double\">&quot;20&quot;</span> <span class=\"punctuation\">}</span> <span class=\"punctuation\">}</span>\n<span class=\"punctuation\">).</span><span class=\"name other\">sort</span><span class=\"punctuation\">(</span>\n  <span class=\"punctuation\">{</span> <span class=\"literal string double\">&quot;rating&quot;</span><span class=\"operator\">:</span> <span class=\"operator\">-</span><span class=\"literal number integer\">1</span> <span class=\"punctuation\">}</span>\n<span class=\"punctuation\">)</span>\n</pre>\n",
                        "bookmarked": false,
                        "choices": [
                            {
                                "text": "IXSCAN -&gt; FETCH -&gt; SORT",
                                "correct": true,
                                "checked": false
                            },
                            {
                                "text": "SORT -&gt; IXSCAN -&gt; FETCH",
                                "correct": false,
                                "checked": false
                            },
                            {
                                "text": "IXSCAN -&gt; FETCH",
                                "correct": false,
                                "checked": false
                            },
                            {
                                "text": "IXSCAN -&gt; SORT -&gt; FETCH",
                                "correct": false,
                                "checked": false
                            },
                            {
                                "text": "FETCH -&gt; SORT",
                                "correct": false,
                                "checked": false
                            }
                        ],
                        "answerExplanation": "<p><strong>Correct Answer:</strong></p>\n<ul class=\"simple\">\n<li>IXSCAN -&gt; FETCH -&gt; SORT</li>\n</ul>\n<p><strong>Incorrect Answers</strong></p>\n<ul class=\"simple\">\n<li>IXSCAN -&gt; FETCH</li>\n<li>SORT -&gt; IXSCAN -&gt; FETCH</li>\n<li>FETCH -&gt; SORT</li>\n<li>IXSCAN -&gt; SORT -&gt; FETCH</li>\n</ul>\n<p>Given that the index supports this query, the first stage would be IXSCAN.\nTherefore, any option that does not start with that needs to be discarded.</p>\n<p>Since the existing index supports the fetching of documents, it will be used\nbefore the documents are fetched. The query is also looking to get a sorted\nresponse on a field that is not indexed, so the last step will be to do the\nsorting.</p>\n"
                    },
                    {
                        "id": "5c47473877fd2f704d5d2ced",
                        "correct": false,
                        "problemType": "checkAllThatApply",
                        "text": "<p>We have the following index on the songs collection:</p>\n<pre class=\"code js literal-block\">\n<span class=\"punctuation\">{</span> <span class=\"literal string double\">&quot;track&quot;</span><span class=\"operator\">:</span> <span class=\"literal number integer\">1</span><span class=\"punctuation\">,</span> <span class=\"literal string double\">&quot;artist&quot;</span><span class=\"operator\">:</span> <span class=\"literal number integer\">1</span><span class=\"punctuation\">,</span> <span class=\"literal string double\">&quot;length&quot;</span><span class=\"operator\">:</span> <span class=\"literal number integer\">1</span> <span class=\"punctuation\">}</span>\n</pre>\n<p>What would you expect to see in the output of this <tt class=\"docutils literal\">explain()</tt> query?</p>\n<pre class=\"code js literal-block\">\n<span class=\"name other\">db</span><span class=\"punctuation\">.</span><span class=\"name other\">songs</span><span class=\"punctuation\">.</span><span class=\"name other\">find</span><span class=\"punctuation\">(</span>\n  <span class=\"punctuation\">{</span> <span class=\"literal string double\">&quot;track&quot;</span><span class=\"operator\">:</span> <span class=\"literal string double\">&quot;Africa&quot;</span><span class=\"punctuation\">,</span> <span class=\"literal string double\">&quot;artist&quot;</span><span class=\"operator\">:</span> <span class=\"literal string double\">&quot;Toto&quot;</span> <span class=\"punctuation\">}</span>\n<span class=\"punctuation\">).</span><span class=\"name other\">explain</span><span class=\"punctuation\">(</span><span class=\"literal string double\">&quot;executionStats&quot;</span><span class=\"punctuation\">)</span>\n</pre>\n",
                        "bookmarked": false,
                        "choices": [
                            {
                                "text": "an in-memory sort",
                                "correct": false,
                                "checked": false
                            },
                            {
                                "text": "a collection scan",
                                "correct": false,
                                "checked": false
                            },
                            {
                                "text": "a 1:1 ratio between <tt class=\"docutils literal\">totalKeysExamined</tt> and <tt class=\"docutils literal\">nReturned</tt>",
                                "correct": true,
                                "checked": false
                            }
                        ],
                        "answerExplanation": "<p><strong>Correct Option</strong></p>\n<ul>\n<li><p class=\"first\">a 1:1 ratio between <tt class=\"docutils literal\">totalKeysExamined</tt> and <tt class=\"docutils literal\">nReturned</tt></p>\n<p>We should see a ratio of 1:1 as we are querying on the first two fields in the\nindex. This means that all documents can be retrieved by walking the index and\nreturning documents in order. Avoiding the need for a collection scan.</p>\n</li>\n</ul>\n<p><strong>Incorrect Options:</strong></p>\n<ul>\n<li><p class=\"first\">a collection scan</p>\n<p>A collection scan would not be seen in the explain output as we are querying\non the first two fields in the index.</p>\n</li>\n<li><p class=\"first\">an in-memory sort</p>\n<p>An in-memory sort would not happen as we do not have any sort in the query.</p>\n</li>\n</ul>\n"
                    },
                    {
                        "id": "5c428804a6213a156f562dc1",
                        "correct": false,
                        "problemType": "checkAllThatApply",
                        "text": "Select the appropriate option(s) below that should always be kept in mind\nregarding indexes:",
                        "bookmarked": false,
                        "choices": [
                            {
                                "text": "Indexes are data structures that require additional resources as they\ngrow",
                                "correct": true,
                                "checked": false
                            },
                            {
                                "text": "Indexes are part of the database &quot;working set&quot;",
                                "correct": true,
                                "checked": false
                            },
                            {
                                "text": "Indexes should be taken into consideration for sizing and maintenance",
                                "correct": true,
                                "checked": false
                            }
                        ],
                        "answerExplanation": "All answers are correct. Indexes are critical for increased performance, but\nthey aren't free and must be considered when determining disk and memory\nrequirements for a deployment machine."
                    },
                    {
                        "id": "5c4b4a75dff5767ab9ed208b",
                        "correct": false,
                        "problemType": "multipleChoice",
                        "text": "When creating an index on a field with values of varying data types, how will\nthe values be sorted in this index?",
                        "bookmarked": false,
                        "choices": [
                            {
                                "text": "first ordered by value then by data type",
                                "correct": false,
                                "checked": false
                            },
                            {
                                "text": "first ordered by data type, then by value",
                                "correct": true,
                                "checked": false
                            },
                            {
                                "text": "an index can not have different data types",
                                "correct": false,
                                "checked": false
                            },
                            {
                                "text": "only ordered by value",
                                "correct": false,
                                "checked": false
                            },
                            {
                                "text": "only ordered by data type",
                                "correct": false,
                                "checked": false
                            }
                        ],
                        "answerExplanation": "<p><strong>Correct Answer:</strong></p>\n<ul class=\"simple\">\n<li>first ordered by datatype, then by value</li>\n</ul>\n<p>The indexed values are grouped based on the data type representation first, that\nway if we are traversing the tree, we can go directly to that branch of the\ntree and get results in a more streamlined fashion</p>\n<hr class=\"docutils\" />\n<p><strong>Incorrect Answers:</strong></p>\n<ul class=\"simple\">\n<li>first ordered by value then by datatype</li>\n<li>only ordered by value</li>\n<li>only ordered by datatype</li>\n<li>the index is not stored as a b-tree</li>\n</ul>\n"
                    },
                    {
                        "id": "5c4786efc967a2449edb89c4",
                        "correct": false,
                        "problemType": "multipleChoice",
                        "text": "<p>Given the following commands run in the <tt class=\"docutils literal\">mongo</tt> shell:</p>\n<pre class=\"code js literal-block\">\n<span class=\"name other\">db</span><span class=\"punctuation\">.</span><span class=\"name other\">createCollection</span><span class=\"punctuation\">(</span>\n  <span class=\"literal string double\">&quot;signs&quot;</span><span class=\"punctuation\">,</span>\n  <span class=\"punctuation\">{</span> <span class=\"literal string double\">&quot;collation&quot;</span><span class=\"operator\">:</span> <span class=\"punctuation\">{</span> <span class=\"literal string double\">&quot;locale&quot;</span><span class=\"operator\">:</span> <span class=\"literal string double\">&quot;fr&quot;</span> <span class=\"punctuation\">}</span> <span class=\"punctuation\">}</span>\n<span class=\"punctuation\">)</span>\n\n<span class=\"name other\">db</span><span class=\"punctuation\">.</span><span class=\"name other\">signs</span><span class=\"punctuation\">.</span><span class=\"name other\">createIndex</span><span class=\"punctuation\">(</span>\n  <span class=\"punctuation\">{</span> <span class=\"literal string double\">&quot;sign_text&quot;</span><span class=\"operator\">:</span> <span class=\"literal number integer\">1</span> <span class=\"punctuation\">},</span>\n  <span class=\"punctuation\">{</span> <span class=\"literal string double\">&quot;collation&quot;</span><span class=\"operator\">:</span> <span class=\"punctuation\">{</span> <span class=\"literal string double\">&quot;locale&quot;</span><span class=\"operator\">:</span> <span class=\"literal string double\">&quot;es&quot;</span> <span class=\"punctuation\">}</span> <span class=\"punctuation\">}</span>\n<span class=\"punctuation\">)</span>\n\n<span class=\"name other\">db</span><span class=\"punctuation\">.</span><span class=\"name other\">signs</span><span class=\"punctuation\">.</span><span class=\"name other\">find</span><span class=\"punctuation\">(</span>\n  <span class=\"punctuation\">{</span> <span class=\"literal string double\">&quot;sign_text&quot;</span><span class=\"operator\">:</span> <span class=\"literal string double\">&quot;Bonjour Qu\u00e9bec&quot;</span> <span class=\"punctuation\">},</span>\n  <span class=\"punctuation\">{</span> <span class=\"literal string double\">&quot;collation&quot;</span><span class=\"operator\">:</span> <span class=\"punctuation\">{</span> <span class=\"literal string double\">&quot;locale&quot;</span><span class=\"operator\">:</span> <span class=\"literal string double\">&quot;en&quot;</span> <span class=\"punctuation\">}</span> <span class=\"punctuation\">}</span>\n<span class=\"punctuation\">)</span>\n</pre>\n<p>Which behavior are you going to observe?</p>\n",
                        "bookmarked": false,
                        "choices": [
                            {
                                "text": "matching documents using the locale <tt class=\"docutils literal\">&quot;en&quot;</tt>",
                                "correct": false,
                                "checked": false
                            },
                            {
                                "text": "matching documents using the locale <tt class=\"docutils literal\">&quot;fr&quot;</tt>",
                                "correct": false,
                                "checked": false
                            },
                            {
                                "text": "matching documents using the locales <tt class=\"docutils literal\">&quot;fr&quot;</tt> and <tt class=\"docutils literal\">&quot;es&quot;</tt>",
                                "correct": false,
                                "checked": false
                            },
                            {
                                "text": "mongod will throw an error",
                                "correct": true,
                                "checked": false
                            },
                            {
                                "text": "matching documents using no locale",
                                "correct": false,
                                "checked": false
                            }
                        ],
                        "answerExplanation": "<p><strong>Correct Option:</strong></p>\n<ul>\n<li><p class=\"first\">mongod will throw an error</p>\n<p>Because the locale asked is not available, the <tt class=\"docutils literal\">mongod</tt> process will\nthrown an error.</p>\n<p>The find command could have used &quot;fr&quot;, &quot;fr_CA&quot; or no locale, however it\ncan not use a locale that is not associated with the collection or its\nindexes.</p>\n</li>\n</ul>\n<p><strong>Incorrect Options:</strong></p>\n<ul>\n<li><p class=\"first\">matching documents using the locale &quot;fr&quot;</p>\n<p><tt class=\"docutils literal\">find</tt> would have had to be used <tt class=\"docutils literal\">{ &quot;collation&quot;: { &quot;locale&quot;: &quot;fr&quot; }</tt></p>\n</li>\n<li><p class=\"first\">matching documents using the locale &quot;fr_CA&quot;</p>\n<p><tt class=\"docutils literal\">find</tt> would have had to be used <tt class=\"docutils literal\">{ &quot;collation&quot;: { &quot;locale&quot;: &quot;fr_CA&quot; }</tt></p>\n</li>\n<li><p class=\"first\">matching documents using the locale &quot;fr&quot; and &quot;fr_CA&quot;</p>\n<p>The server can not use 2 locales together for a given query, only one.</p>\n</li>\n<li><p class=\"first\">matching documents using no locale</p>\n<p>Because there is a locale at the collection level, it will always be used\nas the default locale if no explicit locale is specified.</p>\n</li>\n</ul>\n"
                    },
                    {
                        "id": "5c488f06c1ac97a066c392cb",
                        "correct": false,
                        "problemType": "checkAllThatApply",
                        "text": "<p>You issue the following query against our database:</p>\n<pre class=\"code js literal-block\">\n<span class=\"name other\">db</span><span class=\"punctuation\">.</span><span class=\"name other\">inventory</span><span class=\"punctuation\">.</span><span class=\"name other\">find</span><span class=\"punctuation\">(</span> <span class=\"punctuation\">{</span> <span class=\"literal string double\">&quot;qty&quot;</span><span class=\"operator\">:</span> <span class=\"punctuation\">{</span> <span class=\"literal string double\">&quot;$gte&quot;</span><span class=\"operator\">:</span> <span class=\"literal number integer\">20</span> <span class=\"punctuation\">}</span> <span class=\"punctuation\">}</span> <span class=\"punctuation\">)</span>\n</pre>\n<p>Which of the following commands will create an index that will cover the query?</p>\n",
                        "bookmarked": false,
                        "choices": [
                            {
                                "text": "<tt class=\"docutils literal\">db.records.createIndex( { &quot;qty&quot;: &quot;sorted&quot; } )</tt>",
                                "correct": false,
                                "checked": false
                            },
                            {
                                "text": "<tt class=\"docutils literal\">db.records.createIndex( { &quot;qty&quot;: &quot;$range&quot; } )</tt>",
                                "correct": false,
                                "checked": false
                            },
                            {
                                "text": "<tt class=\"docutils literal\">db.records.createIndex( { &quot;qty&quot;: 1 } )</tt>",
                                "correct": true,
                                "checked": false
                            }
                        ],
                        "answerExplanation": "<p><strong>Correct Option</strong></p>\n<ul>\n<li><p class=\"first\"><tt class=\"docutils literal\">db.records.createIndex( { &quot;qty&quot;: 1 } )</tt></p>\n<p>This will create an index on the <tt class=\"docutils literal\">&quot;qty&quot;</tt> field, which will cover the range\nquery.</p>\n</li>\n</ul>\n<p><strong>Incorrect Options:</strong></p>\n<ul>\n<li><p class=\"first\"><tt class=\"docutils literal\">db.records.createIndex( { &quot;qty&quot;: $range } )</tt></p>\n<p>You cannot specify an aggregation operator when creating an index. The\n<tt class=\"docutils literal\">$range</tt> operator returns an array whose elements are a generated sequence\nof numbers.</p>\n</li>\n<li><p class=\"first\"><tt class=\"docutils literal\">db.records.createIndex( { &quot;qty&quot;: sorted } )</tt></p>\n<p>Sorted is not an option you can pass to an index. Indexes are already sorted,\nyou can specify the direction of the sort using 1 or -1 when creating the\nindex.</p>\n</li>\n</ul>\n"
                    },
                    {
                        "id": "5c7561b268798dfcb532ec24",
                        "correct": false,
                        "problemType": "multipleChoice",
                        "text": "Your company operates a very popular movie review and recommendation site.\nQueries for movie recommendations are becoming unacceptably slow. 90% of queries\nare for movies with a viewer rating above 7 on a 1-10 scale. What type of index\nis most appropriate to help speed up these queries?",
                        "bookmarked": false,
                        "choices": [
                            {
                                "text": "sparse",
                                "correct": false,
                                "checked": false
                            },
                            {
                                "text": "partial",
                                "correct": true,
                                "checked": false
                            },
                            {
                                "text": "hashed",
                                "correct": false,
                                "checked": false
                            },
                            {
                                "text": "multi-key",
                                "correct": false,
                                "checked": false
                            },
                            {
                                "text": "text",
                                "correct": false,
                                "checked": false
                            }
                        ],
                        "answerExplanation": "The correct answer is <strong>partial</strong>. Partial indexes are especially useful when we\nwant to index a subset of our data, typically the most accessed portion."
                    },
                    {
                        "id": "5c40b8622974a7192f69874a",
                        "correct": false,
                        "problemType": "checkAllThatApply",
                        "text": "<p>Consider the following index in the <tt class=\"docutils literal\">plants</tt> collection:</p>\n<pre class=\"code js literal-block\">\n<span class=\"punctuation\">{</span> <span class=\"name other\">climate</span><span class=\"operator\">:</span> <span class=\"literal number integer\">1</span> <span class=\"punctuation\">}</span>\n</pre>\n<p>Which of the following queries could use this index?</p>\n",
                        "bookmarked": false,
                        "choices": [
                            {
                                "text": "<tt class=\"docutils literal\">db.plants.find({ type: { $in: [ &quot;succulent&quot;, &quot;moss&quot; ] } })</tt>",
                                "correct": false,
                                "checked": false
                            },
                            {
                                "text": "<tt class=\"docutils literal\">db.plants.find({ climate: { $in: [ &quot;marsh&quot;, &quot;swamp&quot; ] } })</tt>",
                                "correct": true,
                                "checked": false
                            },
                            {
                                "text": "<tt class=\"docutils literal\">db.plants.find({ type: &quot;conifer&quot;, climate: &quot;forest&quot; })</tt>",
                                "correct": true,
                                "checked": false
                            }
                        ],
                        "answerExplanation": "<p><strong>Correct Answers:</strong></p>\n<p><tt class=\"docutils literal\">db.plants.find({ climate: { $in: [ &quot;marsh&quot;, &quot;swamp&quot; ] } })</tt></p>\n<p><tt class=\"docutils literal\">db.plants.find({ type: &quot;conifer&quot;, climate: &quot;forest&quot; })</tt></p>\n<blockquote>\n<em>These queries can use the index, because the query selector filters on the\n&quot;climate&quot; field.</em></blockquote>\n<p><strong>Incorrect Answer:</strong></p>\n<p><tt class=\"docutils literal\">db.plants.find({ type: { $in: [ &quot;succulent&quot;, &quot;moss&quot; ] } })</tt></p>\n<blockquote>\n<em>These queries can NOT use the index, because the query selector does not\nfilter on the &quot;climate&quot; field.</em></blockquote>\n"
                    },
                    {
                        "id": "5c40cdf06ea7d79dbccd5e03",
                        "correct": false,
                        "problemType": "checkAllThatApply",
                        "text": "<p>Consider the following index in the <tt class=\"docutils literal\">computers</tt> collection:</p>\n<pre class=\"code js literal-block\">\n<span class=\"punctuation\">{</span> <span class=\"name other\">processor</span><span class=\"operator\">:</span> <span class=\"literal number integer\">1</span><span class=\"punctuation\">,</span> <span class=\"name other\">price</span><span class=\"operator\">:</span> <span class=\"literal number integer\">1</span><span class=\"punctuation\">,</span> <span class=\"name other\">memoryGB</span><span class=\"operator\">:</span> <span class=\"operator\">-</span><span class=\"literal number integer\">1</span> <span class=\"punctuation\">}</span>\n</pre>\n<p>Which of the following queries could use this index for <strong>filtering</strong> and\n<strong>sorting</strong>?</p>\n",
                        "bookmarked": false,
                        "choices": [
                            {
                                "text": "<pre class=\"code js literal-block\">\n<span class=\"name other\">db</span><span class=\"punctuation\">.</span><span class=\"name other\">computers</span><span class=\"punctuation\">.</span><span class=\"name other\">find</span><span class=\"punctuation\">(</span> <span class=\"punctuation\">{</span> <span class=\"name other\">price</span><span class=\"operator\">:</span> <span class=\"punctuation\">{</span> <span class=\"name other\">$lt</span><span class=\"operator\">:</span> <span class=\"literal number integer\">1500</span> <span class=\"punctuation\">}</span> <span class=\"punctuation\">}</span> <span class=\"punctuation\">)</span>\n            <span class=\"punctuation\">.</span><span class=\"name other\">sort</span><span class=\"punctuation\">(</span> <span class=\"punctuation\">{</span> <span class=\"name other\">memoryGB</span><span class=\"operator\">:</span> <span class=\"operator\">-</span><span class=\"literal number integer\">1</span> <span class=\"punctuation\">}</span> <span class=\"punctuation\">)</span>\n</pre>\n",
                                "correct": false,
                                "checked": false
                            },
                            {
                                "text": "<pre class=\"code js literal-block\">\n<span class=\"name other\">db</span><span class=\"punctuation\">.</span><span class=\"name other\">computers</span><span class=\"punctuation\">.</span><span class=\"name other\">find</span><span class=\"punctuation\">(</span> <span class=\"punctuation\">{</span> <span class=\"name other\">processor</span><span class=\"operator\">:</span> <span class=\"literal string double\">&quot;i9&quot;</span><span class=\"punctuation\">,</span> <span class=\"name other\">price</span><span class=\"operator\">:</span> <span class=\"punctuation\">{</span> <span class=\"name other\">$lt</span><span class=\"operator\">:</span> <span class=\"literal number integer\">2000</span> <span class=\"punctuation\">}</span> <span class=\"punctuation\">}</span> <span class=\"punctuation\">)</span>\n            <span class=\"punctuation\">.</span><span class=\"name other\">sort</span><span class=\"punctuation\">(</span> <span class=\"punctuation\">{</span> <span class=\"name other\">memoryGB</span><span class=\"operator\">:</span> <span class=\"operator\">-</span><span class=\"literal number integer\">1</span> <span class=\"punctuation\">}</span> <span class=\"punctuation\">)</span>\n</pre>\n",
                                "correct": true,
                                "checked": false
                            },
                            {
                                "text": "<pre class=\"code js literal-block\">\n<span class=\"name other\">db</span><span class=\"punctuation\">.</span><span class=\"name other\">computers</span><span class=\"punctuation\">.</span><span class=\"name other\">find</span><span class=\"punctuation\">(</span> <span class=\"punctuation\">{</span> <span class=\"name other\">processor</span><span class=\"operator\">:</span> <span class=\"literal string double\">&quot;i7&quot;</span> <span class=\"punctuation\">}</span> <span class=\"punctuation\">)</span>\n            <span class=\"punctuation\">.</span><span class=\"name other\">sort</span><span class=\"punctuation\">(</span> <span class=\"punctuation\">{</span> <span class=\"name other\">price</span><span class=\"operator\">:</span> <span class=\"literal number integer\">1</span> <span class=\"punctuation\">}</span> <span class=\"punctuation\">)</span>\n</pre>\n",
                                "correct": true,
                                "checked": false
                            }
                        ],
                        "answerExplanation": "<p><strong>Correct Answers:</strong></p>\n<pre class=\"code js literal-block\">\n<span class=\"name other\">db</span><span class=\"punctuation\">.</span><span class=\"name other\">computers</span><span class=\"punctuation\">.</span><span class=\"name other\">find</span><span class=\"punctuation\">(</span> <span class=\"punctuation\">{</span> <span class=\"name other\">processor</span><span class=\"operator\">:</span> <span class=\"literal string double\">&quot;i9&quot;</span><span class=\"punctuation\">,</span> <span class=\"name other\">price</span><span class=\"operator\">:</span> <span class=\"punctuation\">{</span> <span class=\"name other\">$lt</span><span class=\"operator\">:</span> <span class=\"literal number integer\">2000</span> <span class=\"punctuation\">}</span> <span class=\"punctuation\">}</span> <span class=\"punctuation\">)</span>\n            <span class=\"punctuation\">.</span><span class=\"name other\">sort</span><span class=\"punctuation\">(</span> <span class=\"punctuation\">{</span> <span class=\"name other\">memoryGB</span><span class=\"operator\">:</span> <span class=\"operator\">-</span><span class=\"literal number integer\">1</span> <span class=\"punctuation\">}</span> <span class=\"punctuation\">)</span>\n</pre>\n<p>This answer is correct because the <strong>processor</strong>, <strong>price</strong>, and <strong>memoryGB</strong>\nform an index prefix.</p>\n<pre class=\"code js literal-block\">\n<span class=\"name other\">db</span><span class=\"punctuation\">.</span><span class=\"name other\">computers</span><span class=\"punctuation\">.</span><span class=\"name other\">find</span><span class=\"punctuation\">(</span> <span class=\"punctuation\">{</span> <span class=\"name other\">processor</span><span class=\"operator\">:</span> <span class=\"literal string double\">&quot;i7&quot;</span> <span class=\"punctuation\">}</span> <span class=\"punctuation\">)</span>\n            <span class=\"punctuation\">.</span><span class=\"name other\">sort</span><span class=\"punctuation\">(</span> <span class=\"punctuation\">{</span> <span class=\"name other\">price</span><span class=\"operator\">:</span> <span class=\"literal number integer\">1</span> <span class=\"punctuation\">}</span> <span class=\"punctuation\">)</span>\n</pre>\n<p>This answer is correct because the <strong>processor</strong> and <strong>price</strong> form an index\nprefix.</p>\n<p><strong>Incorrect Answer:</strong></p>\n<pre class=\"code js literal-block\">\n<span class=\"name other\">db</span><span class=\"punctuation\">.</span><span class=\"name other\">computers</span><span class=\"punctuation\">.</span><span class=\"name other\">find</span><span class=\"punctuation\">(</span> <span class=\"punctuation\">{</span> <span class=\"name other\">price</span><span class=\"operator\">:</span> <span class=\"punctuation\">{</span> <span class=\"name other\">$lt</span><span class=\"operator\">:</span> <span class=\"literal number integer\">1500</span> <span class=\"punctuation\">}</span> <span class=\"punctuation\">}</span> <span class=\"punctuation\">)</span>\n            <span class=\"punctuation\">.</span><span class=\"name other\">sort</span><span class=\"punctuation\">(</span> <span class=\"punctuation\">{</span> <span class=\"name other\">memoryGB</span><span class=\"operator\">:</span> <span class=\"operator\">-</span><span class=\"literal number integer\">1</span> <span class=\"punctuation\">}</span> <span class=\"punctuation\">)</span>\n</pre>\n<p>This answer is incorrect because the <strong>price</strong> and <strong>memoryGB</strong> do NOT form an\nindex prefix.</p>\n"
                    },
                    {
                        "id": "5c40dc88522fe5e9201ac17f",
                        "correct": false,
                        "problemType": "checkAllThatApply",
                        "text": "<p>Consider the following operation:</p>\n<pre class=\"code js literal-block\">\n<span class=\"name other\">db</span><span class=\"punctuation\">.</span><span class=\"name other\">employees</span><span class=\"punctuation\">.</span><span class=\"name other\">createIndex</span><span class=\"punctuation\">(</span> <span class=\"punctuation\">{</span> <span class=\"name other\">firstname</span><span class=\"operator\">:</span> <span class=\"literal number integer\">1</span><span class=\"punctuation\">,</span> <span class=\"name other\">lastname</span><span class=\"operator\">:</span> <span class=\"literal number integer\">1</span> <span class=\"punctuation\">}</span> <span class=\"punctuation\">)</span>\n</pre>\n<p>Which of the following are true about this operation?</p>\n",
                        "bookmarked": false,
                        "choices": [
                            {
                                "text": "mongod will throw an error.",
                                "correct": false,
                                "checked": false
                            },
                            {
                                "text": "It builds one index.",
                                "correct": true,
                                "checked": false
                            },
                            {
                                "text": "It builds two indexes.",
                                "correct": false,
                                "checked": false
                            }
                        ],
                        "answerExplanation": "<p><strong>Correct Answers:</strong></p>\n<p><em>It builds one index.</em></p>\n<blockquote>\nThis answer is correct. This operation will build a single index, on the\n<tt class=\"docutils literal\">firstname</tt> and <tt class=\"docutils literal\">lastname</tt> fields.</blockquote>\n<p><strong>Incorrect Answers:</strong></p>\n<p><em>mongod will throw an error.</em></p>\n<blockquote>\nmongod will not throw an error. It will start the index build.</blockquote>\n<p><em>It builds two indexes.</em></p>\n<blockquote>\nThis answer is incorrect - only one index will be built by this operation.</blockquote>\n"
                    }
                ],
                "score": 0
            },
            {
                "id": "f531f6c8144e8c8aaeb8e445",
                "name": "Server Administration",
                "total": 11,
                "problems": [
                    {
                        "id": "5c4786efc967a2449edb89c6",
                        "correct": false,
                        "problemType": "multipleChoice",
                        "text": "Which of the following would not be found in the combined\nresults of explain() commands run on every shard?",
                        "bookmarked": false,
                        "choices": [
                            {
                                "text": "number of documents read on every shard",
                                "correct": false,
                                "checked": false
                            },
                            {
                                "text": "the complete list of available indexes on each shard",
                                "correct": true,
                                "checked": false
                            },
                            {
                                "text": "execution time of each stage on each shard",
                                "correct": false,
                                "checked": false
                            },
                            {
                                "text": "name of the index, or lack of it, chosen on each shard",
                                "correct": false,
                                "checked": false
                            },
                            {
                                "text": "list of stages ran on the mongos",
                                "correct": false,
                                "checked": false
                            }
                        ],
                        "answerExplanation": "<p><strong>Correct Option:</strong></p>\n<ul>\n<li><p class=\"first\">the complete list of available indexes on each shard</p>\n<p>You may see 2 or 3 alternate plans for a given query, however the\noutput is not listing the whole list of available indexes, only those\nfew that it thinks may be the best match.\nRun <tt class=\"docutils literal\">getIndexes()</tt> on your collection to see the complete list</p>\n</li>\n</ul>\n<p><strong>Incorrect Options:</strong></p>\n<p>All other options are incorrect, as they are important information you\nshould first look for when reading an <tt class=\"docutils literal\">explain()</tt> output.</p>\n"
                    },
                    {
                        "id": "5c2d22c3bb04468c889ad939",
                        "correct": false,
                        "problemType": "multipleChoice",
                        "text": "<p>You are attempting to run a <tt class=\"docutils literal\">mongod</tt> with the following options in your\nterminal. Assume the directory paths and permissions are correctly set.</p>\n<pre class=\"code sh literal-block\">\nmongod --port <span class=\"literal number\">35000</span> --dbpath /home/user/mongodb/data --fork\n</pre>\n<p>The <tt class=\"docutils literal\">mongod</tt> is not starting. Which of the following is the most likely\ncause?</p>\n",
                        "bookmarked": false,
                        "choices": [
                            {
                                "text": "<tt class=\"docutils literal\"><span class=\"pre\">--config</span></tt> is not specified",
                                "correct": false,
                                "checked": false
                            },
                            {
                                "text": "<tt class=\"docutils literal\"><span class=\"pre\">--logpath</span></tt> is not specified",
                                "correct": true,
                                "checked": false
                            },
                            {
                                "text": "the directory <tt class=\"docutils literal\">/home/user/mongodb/data</tt> is empty",
                                "correct": false,
                                "checked": false
                            },
                            {
                                "text": "<tt class=\"docutils literal\"><span class=\"pre\">--bind_ip_all</span></tt> is not specified",
                                "correct": false,
                                "checked": false
                            },
                            {
                                "text": "the port must be 27017",
                                "correct": false,
                                "checked": false
                            }
                        ],
                        "answerExplanation": "<p><strong>Correct Answer:</strong></p>\n<p><tt class=\"docutils literal\"><span class=\"pre\">--logpath</span></tt> is not specified.</p>\n<p>When running <tt class=\"docutils literal\">mongod</tt> with the <tt class=\"docutils literal\"><span class=\"pre\">--fork</span></tt> option, <tt class=\"docutils literal\"><span class=\"pre\">--logpath</span></tt> must be\nspecified.</p>\n"
                    },
                    {
                        "id": "5a9c84fd97182d4140a45edb",
                        "correct": false,
                        "problemType": "checkAllThatApply",
                        "text": "Which of the following is true in respect of the command <tt class=\"docutils literal\">rs.config()</tt>",
                        "bookmarked": false,
                        "choices": [
                            {
                                "text": "The command is executed in the context of a replica set",
                                "correct": true,
                                "checked": false
                            },
                            {
                                "text": "Lists the set of nodes of a replica set",
                                "correct": true,
                                "checked": false
                            },
                            {
                                "text": "Lists the nodes of all shard cluster replica sets",
                                "correct": false,
                                "checked": false
                            }
                        ],
                        "answerExplanation": "<p><a href=\"#id1\"><span class=\"problematic\" id=\"id2\">**</span></a>Correct Options:*</p>\n<ul>\n<li><p class=\"first\">Lists the set of nodes of a replica set</p>\n<p><tt class=\"docutils literal\">rs.config()</tt> provides the current configuration of the replica set.</p>\n</li>\n<li><p class=\"first\">The command is executed in the context of a replica set</p>\n<p>All <tt class=\"docutils literal\">mongo</tt> shell command helpers that start with <tt class=\"docutils literal\">rs</tt> are executed in the\ncontext of a replica set cluster.</p>\n</li>\n</ul>\n<p><strong>Incorrect Option:</strong></p>\n<ul class=\"simple\">\n<li>Lists the nodes of all shard cluster replica sets.</li>\n</ul>\n"
                    },
                    {
                        "id": "5a9719abc9d4ec11e704edcb",
                        "correct": false,
                        "problemType": "multipleChoice",
                        "text": "<p>Which of the following is true for the given command line instruction:</p>\n<pre class=\"code sh literal-block\">\nmongod --dbpath /data/db --port <span class=\"literal number\">40001</span> --replSet RS-0 --bind_ip 10.0.0.10\n</pre>\n",
                        "bookmarked": false,
                        "choices": [
                            {
                                "text": "The <tt class=\"docutils literal\">mongod</tt> will be part of a replica set with name RS-01",
                                "correct": false,
                                "checked": false
                            },
                            {
                                "text": "All incoming requests need to come from a client with ip 10.0.0.10",
                                "correct": false,
                                "checked": false
                            },
                            {
                                "text": "The <tt class=\"docutils literal\">mongod</tt> will be accepting requests on localhost",
                                "correct": false,
                                "checked": false
                            },
                            {
                                "text": "The <tt class=\"docutils literal\">mongod</tt> will be listening for incoming requests on port 40001",
                                "correct": true,
                                "checked": false
                            },
                            {
                                "text": "Log files will be stored in folder <tt class=\"docutils literal\">/data/db</tt>",
                                "correct": false,
                                "checked": false
                            }
                        ],
                        "answerExplanation": "<p><strong>Incorrect Options:</strong></p>\n<ul>\n<li><p class=\"first\">Log files will be stored in folder <tt class=\"docutils literal\">/data/db</tt></p>\n<p>The log information will not be stored in a file, it will rather be sent\nto the standard output of the server where the <tt class=\"docutils literal\">mongod</tt> instance is running</p>\n</li>\n<li><p class=\"first\">The <tt class=\"docutils literal\">mongod</tt> will be accepting requests on localhost</p>\n<p>The <tt class=\"docutils literal\">mongod</tt> will be accepting requests on only on ip 10.0.0.10</p>\n</li>\n<li><p class=\"first\">The <tt class=\"docutils literal\">mongod</tt> will be part of a replica set with name RS-01</p>\n<p>The replica set name configured for this <tt class=\"docutils literal\">mongod</tt> is <strong>RS-0</strong> instead of\nRS-01</p>\n</li>\n<li><p class=\"first\">All incoming requests need to come from a client with ip 10.0.0.10</p>\n<p>Any client can connect to this instance as long as the established connection\nis set to 10.0.0.1. i.e.:</p>\n<p><tt class=\"docutils literal\">mongod <span class=\"pre\">--host</span> 10.0.0.1:40001</tt></p>\n</li>\n</ul>\n<p><strong>Correct Answer:</strong></p>\n<ul>\n<li><p class=\"first\">The <tt class=\"docutils literal\">mongod</tt> will be listening for incoming requests on port 40001</p>\n<p>The configured requests listening port (option <tt class=\"docutils literal\"><span class=\"pre\">--port</span></tt>) is set to 40001</p>\n</li>\n</ul>\n"
                    },
                    {
                        "id": "5c37b0bf0b5e346ba297c206",
                        "correct": false,
                        "problemType": "multipleChoice",
                        "text": "When facing an issue with your MongoDB server, which of the following items\nwill the MongoDB support team request in order to help you troubleshoot?",
                        "bookmarked": false,
                        "choices": [
                            {
                                "text": "diagnostic.data",
                                "correct": true,
                                "checked": false
                            },
                            {
                                "text": "journal",
                                "correct": false,
                                "checked": false
                            },
                            {
                                "text": "WiredTiger.lock",
                                "correct": false,
                                "checked": false
                            },
                            {
                                "text": "storage.bson",
                                "correct": false,
                                "checked": false
                            },
                            {
                                "text": "WiredTigerLAS.wt",
                                "correct": false,
                                "checked": false
                            }
                        ],
                        "answerExplanation": "<p>The correct answer is:</p>\n<ul class=\"simple\">\n<li>diagnostic.data</li>\n</ul>\n<p><strong>diagnostic.data</strong> is a directory rather than a file and contains data for\nMongoDB support to use, though it is not human readable and shouldn't be\nmodified.</p>\n<p>The <strong>WiredTiger.lock</strong> file acts as a safety, which helps prevent a second\nsimultaneous MongoDB process from starting up, when one process is already\nrunning. You should not modify it or any other WiredTiger files without the\nexpress instruction from MongoDB support or a documented process.</p>\n<p><strong>storage.bson</strong>, <strong>journal</strong> and meta data for WiredTiger should not be\nmodified and are not the files that the support is looking for in order to help\nyou troubleshoot a MongoDB server issue.</p>\n"
                    },
                    {
                        "id": "5c59a17cc2b8e9e0663475d0",
                        "correct": false,
                        "problemType": "multipleChoice",
                        "text": "What is the correct way to report a vulnerability to MongoDB?",
                        "bookmarked": false,
                        "choices": [
                            {
                                "text": "file a ticket in our security Jira project",
                                "correct": true,
                                "checked": false
                            },
                            {
                                "text": "post on the forums in MongoDB University",
                                "correct": false,
                                "checked": false
                            },
                            {
                                "text": "calling our support hotline",
                                "correct": false,
                                "checked": false
                            }
                        ],
                        "answerExplanation": "<p>The correct answer is:</p>\n<ul class=\"simple\">\n<li>file a ticket in our security Jira project</li>\n</ul>\n<p>When you believe you have discovered a vulnerability you should file a ticket in our security Jira project including\nas much information as possible, such as contact details</p>\n"
                    },
                    {
                        "id": "5c2fa347966e8fb97f54774f",
                        "correct": false,
                        "problemType": "checkAllThatApply",
                        "text": "<p>You are setting up MongoDB and have enabled authorization with the following\nsetting in your configuration file</p>\n<pre class=\"literal-block\">\nsecurity:\n  authorization: enabled\n</pre>\n<p>Which of the following statements apply?</p>\n",
                        "bookmarked": false,
                        "choices": [
                            {
                                "text": "Database users will have access to only those resources granted to\nthem through the role-based access control system",
                                "correct": true,
                                "checked": false
                            },
                            {
                                "text": "Authentication will now be enforced as turning on authorization\nimplicitly enables authentication",
                                "correct": true,
                                "checked": false
                            },
                            {
                                "text": "Users will be forced to connect to MongoDB over SSL/TLS",
                                "correct": false,
                                "checked": false
                            }
                        ],
                        "answerExplanation": "<p>The correct answers are:</p>\n<ul class=\"simple\">\n<li>Authentication will now be enforced as turning on authorization\nimplicitly enables authentication</li>\n<li>Database users will have access to only those resources granted to\nthem through the role-based access control system</li>\n</ul>\n<p>The answer <em>Users will be forced to connect to MongoDB over SSL/TLS</em> is\nincorrect. These settings are contained in the <tt class=\"docutils literal\">net.ssl</tt> section of the\nconfiguration document.</p>\n"
                    },
                    {
                        "id": "5c4b3364d8f382dbe40e2aad",
                        "correct": false,
                        "problemType": "multipleChoice",
                        "text": "Which of the following statements is true with regard to the localhost exemption?",
                        "bookmarked": false,
                        "choices": [
                            {
                                "text": "You can create the first user when connecting to a newly configured mongod from localhost.",
                                "correct": true,
                                "checked": false
                            },
                            {
                                "text": "Any user logging on from localhost bypasses authentication",
                                "correct": false,
                                "checked": false
                            },
                            {
                                "text": "Localhost connections are blacklisted by default.",
                                "correct": false,
                                "checked": false
                            },
                            {
                                "text": "You need to use the mongod user to create additional users when connecting to a mongod for the first time.",
                                "correct": false,
                                "checked": false
                            },
                            {
                                "text": "Users connecting from localhost are audited in the audit log.",
                                "correct": false,
                                "checked": false
                            }
                        ],
                        "answerExplanation": "<p>The correct answer is:</p>\n<ul class=\"simple\">\n<li>You can create the first user when connecting to a newly configured mongod from localhost.</li>\n</ul>\n<p>When you first connect to a newly configured mongod, you can create the first user even if authentication is on.\nThis user can then be used to create subsequent users as needed.</p>\n"
                    },
                    {
                        "id": "5c4106384d1acdb7a52cf64a",
                        "correct": false,
                        "problemType": "checkAllThatApply",
                        "text": "Which is/are primarily authorization operation(s)?",
                        "bookmarked": false,
                        "choices": [
                            {
                                "text": "Reading a document from the Mongo Shell",
                                "correct": true,
                                "checked": false
                            },
                            {
                                "text": "Creating a user in any database other than admin",
                                "correct": true,
                                "checked": false
                            },
                            {
                                "text": "Using a X.509 certificate",
                                "correct": false,
                                "checked": false
                            }
                        ],
                        "answerExplanation": "<p><strong>Correct Options:</strong></p>\n<ul>\n<li><p class=\"first\">Reading a document from the Mongo Shell</p>\n<p>Before you can issue the query to read a document, you would have been\nauthenticated. Now the server would verify that you are authorized to\naccess this document.</p>\n</li>\n<li><p class=\"first\">Creating a user in any database other than admin</p>\n<p>The operation of creating the user is also related to authorization.\nYou will be authorized to add this user, if you are granted the appropriate\nprivileges in this database.</p>\n</li>\n</ul>\n<p><strong>Incorrect Option:</strong></p>\n<ul>\n<li><p class=\"first\">Using an X.509 certificate</p>\n<p>You can use an X.509 certificate to authenticate a machine, or a user.\nIn both cases, the certificate helps identifying who you are, so it is\nan authorization operation.</p>\n</li>\n</ul>\n"
                    },
                    {
                        "id": "5c2f7d085e250cf30debf7dc",
                        "correct": false,
                        "problemType": "checkAllThatApply",
                        "text": "What authentication mechanisms are available in the community version of\nMongoDB?",
                        "bookmarked": false,
                        "choices": [
                            {
                                "text": "SCRAM",
                                "correct": true,
                                "checked": false
                            },
                            {
                                "text": "X.509",
                                "correct": true,
                                "checked": false
                            },
                            {
                                "text": "LDAP",
                                "correct": false,
                                "checked": false
                            }
                        ],
                        "answerExplanation": "The correct answers are SCRAM and X.509. LDAP, and Kerberos, are only\navailable in the Enterprise version of MongoDB."
                    },
                    {
                        "id": "5c5b62efec971914737ad3d3",
                        "correct": false,
                        "problemType": "multipleChoice",
                        "text": "In the context of a role-based access control (RBAC), which of following apply\nto the principle of least privilege (POLP)?",
                        "bookmarked": false,
                        "choices": [
                            {
                                "text": "Grant roles to users with minimal access required for their tasks",
                                "correct": true,
                                "checked": false
                            },
                            {
                                "text": "Limit root role to only one user",
                                "correct": false,
                                "checked": false
                            },
                            {
                                "text": "Grant read only roles to users by default",
                                "correct": false,
                                "checked": false
                            },
                            {
                                "text": "Allow for all users roles to perform root actions if needed",
                                "correct": false,
                                "checked": false
                            },
                            {
                                "text": "Grant roles to users where they can explore the cluster features",
                                "correct": false,
                                "checked": false
                            }
                        ],
                        "answerExplanation": "<p><strong>Correct Option:</strong></p>\n<ul>\n<li><p class=\"first\">Grant roles to users with minimal access required for their tasks</p>\n<p>Users should be granted privileges limited to the scope of the operations that\nthey need.\nMost <a class=\"reference external\" href=\"https://docs.mongodb.com/manual/reference/built-in-roles/\">built-in roles</a> have been designed with this principle in mind, however,\nyou may have to create your own database custom roles to adequately provide\nusers with the absolute necessary set of privileges they need to perform their\nexpected tasks.</p>\n</li>\n</ul>\n<p><strong>Incorrect Options:</strong></p>\n<ul>\n<li><p class=\"first\">Grant roles to users where they can explore the cluster features</p>\n</li>\n<li><p class=\"first\">Allow for all users roles to perform root actions if needed</p>\n<p>These two options are wrong because they imply the opposite of POLP.</p>\n</li>\n<li><p class=\"first\">Grant read only roles to users by default</p>\n<p>Granting roles to users enforcing POLP does not imply restricting all database\nusers to read only mode. Quite the opposite, only read what they need to read,\nand only write what the user needs to write.</p>\n</li>\n<li><p class=\"first\">Limit root role to only one user</p>\n<p>Having a limited amount of users with root level access is a common sense\napproach, but that should not be a strict rule. If you need to have more than\none user with a given role, either root or other roles, so be it. As long it\nis  absolutely necessary to have such role so the user can perform is expected\ntasks.</p>\n</li>\n</ul>\n"
                    }
                ],
                "score": 0
            },
            {
                "id": "44f32b09c0f8576ea83d4ac4",
                "name": "Application Administration",
                "total": 10,
                "problems": [
                    {
                        "id": "5c5b62d86e352e3cc2c0eb27",
                        "correct": false,
                        "problemType": "multipleChoice",
                        "text": "<p>Which command generates the following audit message?</p>\n<pre class=\"code json literal-block\">\n<span class=\"punctuation\">{</span>\n  <span class=\"name tag\">&quot;atype&quot;</span> <span class=\"punctuation\">:</span> <span class=\"literal string double\">&quot;createUser&quot;</span><span class=\"punctuation\">,</span>\n  <span class=\"name tag\">&quot;ts&quot;</span> <span class=\"punctuation\">:</span> <span class=\"punctuation\">{</span> <span class=\"name tag\">&quot;$date&quot;</span> <span class=\"punctuation\">:</span> <span class=\"literal string double\">&quot;2019-02-01T14:20:22.864-0500&quot;</span> <span class=\"punctuation\">},</span>\n  <span class=\"name tag\">&quot;local&quot;</span> <span class=\"punctuation\">:</span> <span class=\"punctuation\">{</span> <span class=\"name tag\">&quot;ip&quot;</span> <span class=\"punctuation\">:</span> <span class=\"literal string double\">&quot;127.0.0.1&quot;</span><span class=\"punctuation\">,</span> <span class=\"name tag\">&quot;port&quot;</span> <span class=\"punctuation\">:</span> <span class=\"literal number integer\">30000</span> <span class=\"punctuation\">},</span>\n  <span class=\"name tag\">&quot;remote&quot;</span> <span class=\"punctuation\">:</span> <span class=\"punctuation\">{</span> <span class=\"name tag\">&quot;ip&quot;</span> <span class=\"punctuation\">:</span> <span class=\"literal string double\">&quot;127.0.0.1&quot;</span><span class=\"punctuation\">,</span> <span class=\"name tag\">&quot;port&quot;</span> <span class=\"punctuation\">:</span> <span class=\"literal number integer\">64942</span> <span class=\"punctuation\">},</span>\n  <span class=\"name tag\">&quot;users&quot;</span> <span class=\"punctuation\">:</span> <span class=\"punctuation\">[],</span>\n  <span class=\"name tag\">&quot;roles&quot;</span> <span class=\"punctuation\">:</span> <span class=\"punctuation\">[],</span>\n  <span class=\"name tag\">&quot;param&quot;</span> <span class=\"punctuation\">:</span> <span class=\"punctuation\">{</span> <span class=\"name tag\">&quot;user&quot;</span> <span class=\"punctuation\">:</span> <span class=\"literal string double\">&quot;god&quot;</span><span class=\"punctuation\">,</span> <span class=\"name tag\">&quot;db&quot;</span> <span class=\"punctuation\">:</span> <span class=\"literal string double\">&quot;admin&quot;</span><span class=\"punctuation\">,</span> <span class=\"name tag\">&quot;roles&quot;</span> <span class=\"punctuation\">:</span> <span class=\"punctuation\">[</span> <span class=\"punctuation\">{</span> <span class=\"name tag\">&quot;role&quot;</span> <span class=\"punctuation\">:</span> <span class=\"literal string double\">&quot;root&quot;</span><span class=\"punctuation\">,</span> <span class=\"name tag\">&quot;db&quot;</span> <span class=\"punctuation\">:</span> <span class=\"literal string double\">&quot;admin&quot;</span> <span class=\"punctuation\">}</span> <span class=\"punctuation\">]</span> <span class=\"punctuation\">},</span>\n  <span class=\"name tag\">&quot;result&quot;</span> <span class=\"punctuation\">:</span> <span class=\"literal number integer\">0</span>\n<span class=\"punctuation\">}</span>\n</pre>\n",
                        "bookmarked": false,
                        "choices": [
                            {
                                "text": "<tt class=\"docutils literal\"><span class=\"pre\">db.createUser({&quot;user&quot;:</span> &quot;god&quot;, &quot;pwd&quot;: &quot;yes&quot;, &quot;roles&quot;: <span class=\"pre\">[&quot;root&quot;]})</span></tt>",
                                "correct": true,
                                "checked": false
                            },
                            {
                                "text": "<tt class=\"docutils literal\"><span class=\"pre\">db.createUser({&quot;user&quot;:</span> &quot;user1&quot;, &quot;pwd&quot;: &quot;yes&quot;, &quot;roles&quot;: <span class=\"pre\">[&quot;root&quot;]})</span></tt>",
                                "correct": false,
                                "checked": false
                            },
                            {
                                "text": "<tt class=\"docutils literal\"><span class=\"pre\">db.auth(&quot;root&quot;,</span> &quot;yes&quot;)</tt>",
                                "correct": false,
                                "checked": false
                            },
                            {
                                "text": "<tt class=\"docutils literal\"><span class=\"pre\">db.auth(&quot;user1&quot;,</span> &quot;passwordOk&quot;)</tt>",
                                "correct": false,
                                "checked": false
                            },
                            {
                                "text": "<tt class=\"docutils literal\"><span class=\"pre\">db.createUser({&quot;user&quot;:</span> &quot;god&quot;, &quot;pwd&quot;: &quot;yes&quot;, &quot;roles&quot;: [&quot;role&quot;: &quot;readWrite&quot;, &quot;db&quot;: <span class=\"pre\">&quot;admin&quot;]})</span></tt>",
                                "correct": false,
                                "checked": false
                            }
                        ],
                        "answerExplanation": "<p><strong>Correct Option:</strong></p>\n<ul class=\"simple\">\n<li><tt class=\"docutils literal\"><span class=\"pre\">db.createUser({user:</span> 'god', pwd: 'yes', roles: <span class=\"pre\">[&quot;root&quot;]})</span></tt></li>\n</ul>\n<p>The audit message action type states the event was triggered by a successful\n<tt class=\"docutils literal\">createUser</tt> command. The <tt class=\"docutils literal\">param</tt> field determines that the user name is\n<tt class=\"docutils literal\">root</tt> and that the role granted is <tt class=\"docutils literal\">root</tt>. The above option is the only\nthat matches all of these criteria.</p>\n<p>All other options are would generate a different audit message.</p>\n"
                    },
                    {
                        "id": "5c6f04f8bc3a680a215c2c7c",
                        "correct": false,
                        "problemType": "checkAllThatApply",
                        "text": "<p>Consider the following audit filter:</p>\n<pre class=\"code bash literal-block\">\n--auditFilter <span class=\"literal string single\">'{ &quot;atype&quot;: { &quot;$in&quot;: [ &quot;createCollection&quot;, &quot;dropCollection&quot; ] },\n                 &quot;param.ns&quot;: &quot;test.*&quot;}'</span>\n</pre>\n<p>Which of the following operations <strong>must</strong> appear in the audit log?</p>\n",
                        "bookmarked": false,
                        "choices": [
                            {
                                "text": "<pre class=\"code js literal-block\">\n<span class=\"name other\">use</span> <span class=\"name other\">test</span>\n<span class=\"name other\">db</span><span class=\"punctuation\">.</span><span class=\"name other\">dropCollection</span><span class=\"punctuation\">(</span><span class=\"literal string double\">&quot;games&quot;</span><span class=\"punctuation\">)</span>\n</pre>\n",
                                "correct": false,
                                "checked": false
                            },
                            {
                                "text": "<pre class=\"code js literal-block\">\n<span class=\"name other\">use</span> <span class=\"name other\">production</span>\n<span class=\"name other\">db</span><span class=\"punctuation\">.</span><span class=\"name other\">createCollection</span><span class=\"punctuation\">(</span><span class=\"literal string double\">&quot;test&quot;</span><span class=\"punctuation\">)</span>\n</pre>\n",
                                "correct": false,
                                "checked": false
                            },
                            {
                                "text": "<pre class=\"code js literal-block\">\n<span class=\"name other\">use</span> <span class=\"name other\">test</span>\n<span class=\"name other\">db</span><span class=\"punctuation\">.</span><span class=\"name other\">createCollection</span><span class=\"punctuation\">(</span><span class=\"literal string double\">&quot;games&quot;</span><span class=\"punctuation\">)</span>\n</pre>\n",
                                "correct": true,
                                "checked": false
                            }
                        ],
                        "answerExplanation": "<p><strong>Correct Option:</strong></p>\n<pre class=\"code js literal-block\">\n<span class=\"name other\">use</span> <span class=\"name other\">test</span>\n<span class=\"name other\">db</span><span class=\"punctuation\">.</span><span class=\"name other\">createCollection</span><span class=\"punctuation\">(</span><span class=\"literal string double\">&quot;games&quot;</span><span class=\"punctuation\">)</span>\n</pre>\n<p>This instruction will be logged in the audit log because both the audit\nnamespace is <tt class=\"docutils literal\">test.games</tt> and the action type <tt class=\"docutils literal\">createCollection</tt> are defined\nin the <tt class=\"docutils literal\">auditFilter</tt>.</p>\n<p><strong>Incorrect Options:</strong></p>\n<pre class=\"code js literal-block\">\n<span class=\"name other\">use</span> <span class=\"name other\">production</span>\n<span class=\"name other\">db</span><span class=\"punctuation\">.</span><span class=\"name other\">createCollection</span><span class=\"punctuation\">(</span><span class=\"literal string double\">&quot;test&quot;</span><span class=\"punctuation\">)</span>\n</pre>\n<p>This command namespace <tt class=\"docutils literal\">production.test</tt> is not included in the audit filter,\ntherefore the operation would not be logged.</p>\n<pre class=\"code js literal-block\">\n<span class=\"name other\">use</span> <span class=\"name other\">test</span>\n<span class=\"name other\">db</span><span class=\"punctuation\">.</span><span class=\"name other\">dropCollection</span><span class=\"punctuation\">(</span><span class=\"literal string double\">&quot;games&quot;</span><span class=\"punctuation\">)</span>\n</pre>\n<p>In this case both the action <tt class=\"docutils literal\">dropCollection</tt> and the namespace <tt class=\"docutils literal\">test.games</tt>\nare part of the audit filter. However, given the information that we have, we\ncannot guarantee that the collection <strong>games</strong> exists in the <strong>test</strong> database,\ntherefore we cannot be sure that this command will be successful. The audit log\nwill only log successful operations, operations that complete. Given that we are\nlooking for operations that <strong>must</strong> be logged, we cannot tell for sure that\nthis would be a successful operation.</p>\n"
                    },
                    {
                        "id": "5c4125ee8907d2198adc6d1b",
                        "correct": false,
                        "problemType": "multipleChoice",
                        "text": "<p>Let's assume an administrator created a user account with the following\ncommands on a replica set with authorization turned on:</p>\n<pre class=\"code sh literal-block\">\n$ mongo\nuse foundation\ndb.createUser<span class=\"operator\">({</span>user: <span class=\"literal string double\">&quot;daneel.olivaw&quot;</span>, pwd: <span class=\"literal string double\">&quot;etodemerzel&quot;</span>, roles: <span class=\"operator\">[</span><span class=\"literal string double\">&quot;readWrite&quot;</span><span class=\"operator\">]})</span>\n</pre>\n<p>Which of the following methods is <strong>not</strong> valid to authenticate this user?</p>\n",
                        "bookmarked": false,
                        "choices": [
                            {
                                "text": "<pre class=\"code sh literal-block\">\n$ mongo foundation -u daneel.olivaw -p etodemerzel\n</pre>\n",
                                "correct": false,
                                "checked": false
                            },
                            {
                                "text": "<pre class=\"code sh literal-block\">\n$ mongo <span class=\"name builtin\">test</span>\n&gt; use foundation\n&gt; db.auth<span class=\"operator\">(</span><span class=\"literal string double\">&quot;daneel.olivaw&quot;</span>, <span class=\"literal string double\">&quot;etodemerzel&quot;</span><span class=\"operator\">)</span>\n</pre>\n",
                                "correct": false,
                                "checked": false
                            },
                            {
                                "text": "<pre class=\"code sh literal-block\">\n$ mongo\n&gt; use foundation\n&gt; db.auth<span class=\"operator\">(</span><span class=\"literal string double\">&quot;daneel.olivaw&quot;</span>, <span class=\"literal string double\">&quot;etodemerzel&quot;</span><span class=\"operator\">)</span>\n</pre>\n",
                                "correct": false,
                                "checked": false
                            },
                            {
                                "text": "<pre class=\"code sh literal-block\">\n$ mongo <span class=\"name builtin\">test</span> --authenticationDatabase foundation\n&gt; db.auth<span class=\"operator\">(</span><span class=\"literal string double\">&quot;daneel.olivaw&quot;</span>, <span class=\"literal string double\">&quot;etodemerzel&quot;</span><span class=\"operator\">)</span>\n</pre>\n",
                                "correct": true,
                                "checked": false
                            },
                            {
                                "text": "<pre class=\"code sh literal-block\">\n$ mongo <span class=\"name builtin\">test</span> -u daneel.olivaw -p etodemerzel --authenticationDatabase foundation\n</pre>\n",
                                "correct": false,
                                "checked": false
                            }
                        ],
                        "answerExplanation": "<p>The correct answer is:</p>\n<pre class=\"code sh literal-block\">\n$ mongo <span class=\"name builtin\">test</span> --authenticationDatabase foundation\n&gt; db.auth<span class=\"operator\">(</span><span class=\"literal string double\">&quot;daneel.olivaw&quot;</span>, <span class=\"literal string double\">&quot;etodemerzel&quot;</span><span class=\"operator\">)</span>\n</pre>\n<p>This is the only commands that will not authenticate correctly.\nAfter the mongo shell starts, it will land in the 'test' directory.\nThe subsequent <tt class=\"docutils literal\">db.auth()</tt> command will try to authenticate in this\n'test' database, while it should do it in 'foundation' to succeed.\nThe key thing to understand here is that <tt class=\"docutils literal\"><span class=\"pre\">--authenticationDatabase</span></tt>\nonly make sense if you are also providing the credentials at the same time.</p>\n"
                    },
                    {
                        "id": "5c53575bc2ba269f140655c0",
                        "correct": false,
                        "problemType": "multipleChoice",
                        "text": "<p>In a sharded cluster with authentication enabled, a user must authenticate\nbefore accessing a <tt class=\"docutils literal\">mongos</tt> process.</p>\n<p>Where is this user data stored?</p>\n",
                        "bookmarked": false,
                        "choices": [
                            {
                                "text": "the config servers",
                                "correct": true,
                                "checked": false
                            },
                            {
                                "text": "all of the shards",
                                "correct": false,
                                "checked": false
                            },
                            {
                                "text": "one random shard",
                                "correct": false,
                                "checked": false
                            },
                            {
                                "text": "mongos",
                                "correct": false,
                                "checked": false
                            },
                            {
                                "text": "the primary shard",
                                "correct": false,
                                "checked": false
                            }
                        ],
                        "answerExplanation": "<p><strong>Correct Answer:</strong> <em>The config servers</em></p>\n<p>In a sharded cluster, the config servers store all user data used to\nauthenticate to <tt class=\"docutils literal\">mongos</tt>.</p>\n"
                    },
                    {
                        "id": "58247b6d9f3a888f79386563",
                        "correct": false,
                        "problemType": "multipleChoice",
                        "text": "<p>You want to create a user that is allowed to administer all the databases in your\ncluster.</p>\n<p>Which of the following built-in roles should you grant to the user?</p>\n",
                        "bookmarked": false,
                        "choices": [
                            {
                                "text": "<tt class=\"docutils literal\">dbAdmin</tt>",
                                "correct": false,
                                "checked": false
                            },
                            {
                                "text": "<tt class=\"docutils literal\">dbAdminAnyDatabase</tt>",
                                "correct": true,
                                "checked": false
                            },
                            {
                                "text": "<tt class=\"docutils literal\">dbOwner</tt>",
                                "correct": false,
                                "checked": false
                            },
                            {
                                "text": "<tt class=\"docutils literal\">clusterAdmin</tt>",
                                "correct": false,
                                "checked": false
                            },
                            {
                                "text": "<tt class=\"docutils literal\">root</tt>",
                                "correct": false,
                                "checked": false
                            }
                        ],
                        "answerExplanation": "<p><strong>Correct Option:</strong></p>\n<ul class=\"simple\">\n<li>dbAdminAnyDatabase</li>\n</ul>\n<p>Following the principle of least privilege (POLP), we should grant the user the role\nthat grants the minimal set of privileges the user needs. In this case, the user\nwill be required to administer any database in the cluster. The role\n<tt class=\"docutils literal\">dbAdminAnyDatabase</tt> would be the most suited for the task.</p>\n<p><strong>Incorrect Options:</strong></p>\n<ul>\n<li><p class=\"first\"><tt class=\"docutils literal\">root</tt></p>\n<p>This role would not follow POLP and would be granting the user way too many\nprivileges than needed.</p>\n</li>\n<li><p class=\"first\"><tt class=\"docutils literal\">clusterAdmin</tt></p>\n<p>This role does not allow the user to perform database administration tasks.</p>\n</li>\n<li><p class=\"first\"><tt class=\"docutils literal\">dbAdmin</tt></p>\n</li>\n<li><p class=\"first\"><tt class=\"docutils literal\">dbOwner</tt></p>\n<p>Both these options allow for database administration, however these are local\ndatabase roles, and the user is requested to be able to administer any\ndatabase in the cluster.</p>\n</li>\n</ul>\n"
                    },
                    {
                        "id": "58247b6d8e91d4cfce928488",
                        "correct": false,
                        "problemType": "checkAllThatApply",
                        "text": "<p>Consider the following custom role:</p>\n<pre class=\"code js literal-block\">\n<span class=\"name other\">use</span> <span class=\"name other\">admin</span>\n<span class=\"name other\">db</span><span class=\"punctuation\">.</span><span class=\"name other\">createRole</span><span class=\"punctuation\">(</span>\n  <span class=\"punctuation\">{</span>\n   <span class=\"literal string double\">&quot;role&quot;</span><span class=\"operator\">:</span> <span class=\"literal string double\">&quot;intern&quot;</span><span class=\"punctuation\">,</span>\n   <span class=\"literal string double\">&quot;privileges&quot;</span><span class=\"operator\">:</span> <span class=\"punctuation\">[</span>\n     <span class=\"punctuation\">{</span> <span class=\"literal string double\">&quot;resource&quot;</span><span class=\"operator\">:</span> <span class=\"punctuation\">{</span> <span class=\"literal string double\">&quot;db&quot;</span><span class=\"operator\">:</span> <span class=\"literal string double\">&quot;&quot;</span><span class=\"punctuation\">,</span> <span class=\"literal string double\">&quot;collections&quot;</span><span class=\"operator\">:</span> <span class=\"literal string double\">&quot;&quot;</span> <span class=\"punctuation\">},</span> <span class=\"literal string double\">&quot;actions&quot;</span><span class=\"operator\">:</span> <span class=\"punctuation\">[</span> <span class=\"literal string double\">&quot;find&quot;</span><span class=\"punctuation\">,</span> <span class=\"literal string double\">&quot;createIndex&quot;</span> <span class=\"punctuation\">]</span> <span class=\"punctuation\">}</span>\n   <span class=\"punctuation\">],</span>\n   <span class=\"literal string double\">&quot;roles&quot;</span><span class=\"operator\">:</span> <span class=\"punctuation\">[]</span>\n  <span class=\"punctuation\">}</span>\n<span class=\"punctuation\">)</span>\n</pre>\n<p>Which of the following are commands that this user-defined role is authorized to execute?</p>\n",
                        "bookmarked": false,
                        "choices": [
                            {
                                "text": "<tt class=\"docutils literal\"><span class=\"pre\">db.products.insert({&quot;name&quot;:</span> &quot;Brillo Soap&quot; })</tt>",
                                "correct": false,
                                "checked": false
                            },
                            {
                                "text": "<tt class=\"docutils literal\"><span class=\"pre\">db.customers.createIndex({&quot;username&quot;:</span> 1 })</tt>",
                                "correct": true,
                                "checked": false
                            },
                            {
                                "text": "<tt class=\"docutils literal\"><span class=\"pre\">db.products.find({&quot;name&quot;:</span> <span class=\"pre\">{&quot;$exists&quot;:</span> 1} })</tt>",
                                "correct": true,
                                "checked": false
                            }
                        ],
                        "answerExplanation": "<p><strong>Correct Options:</strong></p>\n<ul>\n<li><p class=\"first\"><tt class=\"docutils literal\"><span class=\"pre\">db.products.find({&quot;name&quot;:</span> <span class=\"pre\">{&quot;$exists&quot;:</span> 1} })</tt></p>\n</li>\n<li><p class=\"first\"><tt class=\"docutils literal\"><span class=\"pre\">db.customers.createIndex({&quot;username&quot;:</span> 1 })</tt></p>\n<p>Both these operations will be allowed by the <strong>intern</strong> role given\nthat this role allows for <tt class=\"docutils literal\">find</tt> and <tt class=\"docutils literal\">createIndex</tt> actions in all\ncollections and in all collections.</p>\n</li>\n<li><p class=\"first\"><tt class=\"docutils literal\"><span class=\"pre\">db.products.insert({&quot;name&quot;:</span> &quot;Brillo Soap&quot; })</tt></p>\n<p>The <tt class=\"docutils literal\">insert</tt> action was not granted to the role.</p>\n</li>\n</ul>\n"
                    },
                    {
                        "id": "5c956280c426a4220d47be52",
                        "correct": false,
                        "problemType": "multipleChoice",
                        "text": "Database users created with the built-in role <strong>readWriteAnyDatabase</strong> are\nallowed to:",
                        "bookmarked": false,
                        "choices": [
                            {
                                "text": "add nodes to a replica set",
                                "correct": false,
                                "checked": false
                            },
                            {
                                "text": "change log level in any database",
                                "correct": false,
                                "checked": false
                            },
                            {
                                "text": "update documents in all databases except admin",
                                "correct": false,
                                "checked": false
                            },
                            {
                                "text": "grant permissions to other users in any database",
                                "correct": false,
                                "checked": false
                            },
                            {
                                "text": "create documents in any database",
                                "correct": true,
                                "checked": false
                            }
                        ],
                        "answerExplanation": "<p><strong>Incorrect Options:</strong></p>\n<p><em>add nodes to a replica set</em></p>\n<blockquote>\n<strong>readWriteAnyDatabase</strong> does not grant cluster administration privileges like\nchanging replica set topology.</blockquote>\n<p><em>change log level in any database</em></p>\n<blockquote>\nChanging the log level is system administration privilege not granted by this\nrole.</blockquote>\n<p><em>update documents in all databases except admin</em></p>\n<blockquote>\nThe admin database is not excluded, although we highly discourage update state\nin the admin database.</blockquote>\n<p><em>grant permissions to other users in any database</em></p>\n<blockquote>\nGrant permissions to users is a user management privilege not granted by\n<strong>readWriteAnyDatabase</strong>.</blockquote>\n<p><strong>Correct Option</strong></p>\n<p><em>create documents in any database</em></p>\n<blockquote>\n<strong>readWriteAnyDatabase</strong> allows reads and writes against any database.</blockquote>\n"
                    },
                    {
                        "id": "58247b6dc3b175e088879e40",
                        "correct": false,
                        "problemType": "checkAllThatApply",
                        "text": "Which of the following properties must be specified when creating a user-defined role?",
                        "bookmarked": false,
                        "choices": [
                            {
                                "text": "Role name",
                                "correct": true,
                                "checked": false
                            },
                            {
                                "text": "Set of privileges",
                                "correct": true,
                                "checked": false
                            },
                            {
                                "text": "Inherited roles",
                                "correct": true,
                                "checked": false
                            }
                        ],
                        "answerExplanation": "All options are properties used in the definition of user-defined roles."
                    },
                    {
                        "id": "5c59f7504ff30b56a645fb97",
                        "correct": false,
                        "problemType": "checkAllThatApply",
                        "text": "<p>What security mechanisms will be enabled with the following command?</p>\n<p><tt class=\"docutils literal\">$ mongod <span class=\"pre\">--sslMode</span> requireSSL <span class=\"pre\">--sslPEMKeyFile</span> server.pem <span class=\"pre\">--sslCAFile</span> ca.pem</tt></p>\n",
                        "bookmarked": false,
                        "choices": [
                            {
                                "text": "enable TLS/SSL connection",
                                "correct": true,
                                "checked": false
                            },
                            {
                                "text": "encrypt connection between client and server using the <tt class=\"docutils literal\">server.pem</tt> file",
                                "correct": true,
                                "checked": false
                            },
                            {
                                "text": "verify the client identity when connecting to the server using the <tt class=\"docutils literal\">ca.pem</tt> file",
                                "correct": true,
                                "checked": false
                            }
                        ],
                        "answerExplanation": "<p>All answers are correct.</p>\n<p><tt class=\"docutils literal\"><span class=\"pre\">--ssl</span></tt>       Enables TLS/SSL connection.</p>\n<p><tt class=\"docutils literal\">sslPEMKeyFile</tt>       Specifies the .pem file that contains the mongo shell's\ncertificate and key to present to the mongod or mongos instance.</p>\n<p><tt class=\"docutils literal\"><span class=\"pre\">--sslCAFile</span></tt> Specifies the Certificate Authority (CA) .pem file for\nverification of the certificate presented by the mongod or the mongos instance.</p>\n"
                    },
                    {
                        "id": "5c5b62ead88fc62fc0c6bd6c",
                        "correct": false,
                        "problemType": "checkAllThatApply",
                        "text": "Where does MongoDB use TLS 1.1+ encryption algorithms?",
                        "bookmarked": false,
                        "choices": [
                            {
                                "text": "Encrypted storage engine",
                                "correct": false,
                                "checked": false
                            },
                            {
                                "text": "Transport layer",
                                "correct": true,
                                "checked": false
                            },
                            {
                                "text": "Password salting",
                                "correct": false,
                                "checked": false
                            }
                        ],
                        "answerExplanation": "<ul class=\"simple\">\n<li>Transport layer</li>\n</ul>\n<p>MongoDB uses TLS 1.1+ to encrypt client-server and intra-cluster network\ntransport layer communication.</p>\n"
                    }
                ],
                "score": 0
            },
            {
                "id": "b2d408ffdbe74f98ba57a460",
                "name": "Replication",
                "total": 10,
                "problems": [
                    {
                        "id": "5c378ab491f18bfb4b4c7e88",
                        "correct": false,
                        "problemType": "checkAllThatApply",
                        "text": "In a 3-node replica set, which of the following write concerns is more durable\nthan the default?",
                        "bookmarked": false,
                        "choices": [
                            {
                                "text": "<tt class=\"docutils literal\">w: 0</tt>",
                                "correct": false,
                                "checked": false
                            },
                            {
                                "text": "<tt class=\"docutils literal\">w: 1</tt>",
                                "correct": false,
                                "checked": false
                            },
                            {
                                "text": "<tt class=\"docutils literal\">w: 2</tt>",
                                "correct": true,
                                "checked": false
                            }
                        ],
                        "answerExplanation": "<p><strong>Correct answers:</strong></p>\n<p><tt class=\"docutils literal\">w: 2</tt></p>\n<p>The default write concern is <tt class=\"docutils literal\">w: 1</tt>, and waiting for 2 nodes to apply a\nwrite is <strong>more durable</strong> than only waiting for 1 node to apply it.</p>\n<p><strong>Incorrect answers:</strong></p>\n<p><tt class=\"docutils literal\">w: 1</tt></p>\n<p>This is already the default Write Concern in MongoDB, so it does not represent\na higher durability than the default.</p>\n<p><tt class=\"docutils literal\">w: 0</tt></p>\n<p>This will not wait for any nodes to apply a write before sending an\nacknowledgement, so it is a <em>less</em> durable write than the default value of\n<tt class=\"docutils literal\">w: 1</tt>.</p>\n"
                    },
                    {
                        "id": "5c48adabfb57922c7ab251d0",
                        "correct": false,
                        "problemType": "checkAllThatApply",
                        "text": "Which command would you use to add an arbiter to an existing replica set on host mongo2, running on port 27017?",
                        "bookmarked": false,
                        "choices": [
                            {
                                "text": "<pre class=\"code js literal-block\">\n<span class=\"name other\">rs</span><span class=\"punctuation\">.</span><span class=\"name other\">addArb</span><span class=\"punctuation\">(</span><span class=\"literal string double\">&quot;mongo2:27107&quot;</span><span class=\"punctuation\">)</span>\n</pre>\n",
                                "correct": true,
                                "checked": false
                            },
                            {
                                "text": "<pre class=\"code js literal-block\">\n<span class=\"name other\">rs</span><span class=\"punctuation\">.</span><span class=\"name other\">add</span><span class=\"punctuation\">(</span><span class=\"literal string double\">&quot;mongo2:27017, arb: true&quot;</span><span class=\"punctuation\">)</span>\n</pre>\n",
                                "correct": false,
                                "checked": false
                            },
                            {
                                "text": "<pre class=\"code js literal-block\">\n<span class=\"name other\">rs</span><span class=\"punctuation\">.</span><span class=\"name other\">reconfig</span><span class=\"punctuation\">({</span><span class=\"literal string double\">&quot;host&quot;</span><span class=\"operator\">:</span> <span class=\"literal string double\">&quot;mongo2&quot;</span><span class=\"punctuation\">,</span> <span class=\"literal string double\">&quot;port&quot;</span><span class=\"operator\">:</span> <span class=\"literal number integer\">27017</span><span class=\"punctuation\">,</span> <span class=\"literal string double\">&quot;arbiter&quot;</span><span class=\"operator\">:</span> <span class=\"literal string double\">&quot;true&quot;</span><span class=\"punctuation\">})</span>\n</pre>\n",
                                "correct": false,
                                "checked": false
                            }
                        ],
                        "answerExplanation": "<p><strong>Correct Option</strong></p>\n<pre class=\"code js literal-block\">\n<span class=\"name other\">rs</span><span class=\"punctuation\">.</span><span class=\"name other\">addArb</span><span class=\"punctuation\">(</span><span class=\"literal string double\">&quot;mongo2:27107&quot;</span><span class=\"punctuation\">)</span>\n</pre>\n<p>This command will add the arbiter on mongo2:27107.</p>\n<p><strong>Incorrect Options:</strong></p>\n<pre class=\"code js literal-block\">\n<span class=\"name other\">rs</span><span class=\"punctuation\">.</span><span class=\"name other\">add</span><span class=\"punctuation\">(</span><span class=\"literal string double\">&quot;mongo2:27017, arb: true&quot;</span><span class=\"punctuation\">)</span>\n</pre>\n<p>Is not a valid command.</p>\n<pre class=\"code js literal-block\">\n<span class=\"name other\">rs</span><span class=\"punctuation\">.</span><span class=\"name other\">reconfig</span><span class=\"punctuation\">({</span><span class=\"literal string double\">&quot;host&quot;</span><span class=\"operator\">:</span> <span class=\"literal string double\">&quot;mongo2&quot;</span><span class=\"punctuation\">,</span> <span class=\"literal string double\">&quot;port&quot;</span><span class=\"operator\">:</span> <span class=\"literal number integer\">27017</span><span class=\"punctuation\">,</span> <span class=\"literal string double\">&quot;arbiter&quot;</span><span class=\"operator\">:</span> <span class=\"literal string double\">&quot;true&quot;</span><span class=\"punctuation\">})</span>\n</pre>\n<p>Is not a valid command, you need to pass a full configuration document to rs.reconfig().</p>\n"
                    },
                    {
                        "id": "5c38c374f69dd994eee197cd",
                        "correct": false,
                        "problemType": "checkAllThatApply",
                        "text": "Which are valid read concerns in MongoDB?",
                        "bookmarked": false,
                        "choices": [
                            {
                                "text": "majority",
                                "correct": true,
                                "checked": false
                            },
                            {
                                "text": "linearizable",
                                "correct": true,
                                "checked": false
                            },
                            {
                                "text": "local",
                                "correct": true,
                                "checked": false
                            }
                        ],
                        "answerExplanation": "<p><strong>Correct Options:</strong></p>\n<p>All choices are correct.</p>\n<p><strong>majority</strong> read concern reads data that was written to a majority\nof nodes.</p>\n<p><strong>local</strong> read concern reads data at least written to the primary.\nIt is the default read concern</p>\n<p><strong>linearizable</strong> read concern reads data written to a majority of nodes prior\nto the read request, and unlike <strong>majority</strong> will wait for pending write\noperations to complete that would modify the document(s) requested</p>\n"
                    },
                    {
                        "id": "5c3d005fad56b93182571c10",
                        "correct": false,
                        "problemType": "checkAllThatApply",
                        "text": "You need to set up a replica set. Which command(s) do you need to run to set\nup the replica set and add 2 other nodes?",
                        "bookmarked": false,
                        "choices": [
                            {
                                "text": "<tt class=\"docutils literal\">rs.add(node2); rs.add(node3); rs.initiate()</tt>",
                                "correct": false,
                                "checked": false
                            },
                            {
                                "text": "<tt class=\"docutils literal\"><span class=\"pre\">rs.initiate();</span> rs.add(node2); rs.add(node3);</tt>",
                                "correct": true,
                                "checked": false
                            },
                            {
                                "text": "<tt class=\"docutils literal\"><span class=\"pre\">rs.initiate();</span> rs.add(node2); rs.reconfig()</tt>",
                                "correct": false,
                                "checked": false
                            }
                        ],
                        "answerExplanation": "<p>The correct answer is:</p>\n<ul>\n<li><p class=\"first\"><tt class=\"docutils literal\"><span class=\"pre\">rs.initiate();</span> rs.add(node2); rs.add(node3)</tt></p>\n<p><tt class=\"docutils literal\">rs.initiate()</tt> must be run first in order to initialize the replica set, and\n<tt class=\"docutils literal\">rs.reconfig()</tt> should only be run if you are modifying the replica\nconfiguration file directly.</p>\n</li>\n</ul>\n"
                    },
                    {
                        "id": "5c37d3f4b6e998119958d6fd",
                        "correct": false,
                        "problemType": "checkAllThatApply",
                        "text": "<p>Consider a write operation performed against a replica set with write concern\n<tt class=\"docutils literal\">w: 1</tt>.</p>\n<p>After changing the write concern to <tt class=\"docutils literal\">w: &quot;majority&quot;</tt>, this operation is:</p>\n",
                        "bookmarked": false,
                        "choices": [
                            {
                                "text": "less likely to be rolled back",
                                "correct": true,
                                "checked": false
                            },
                            {
                                "text": "more likely to take longer",
                                "correct": true,
                                "checked": false
                            },
                            {
                                "text": "more likely to block other operations in the application",
                                "correct": true,
                                "checked": false
                            }
                        ],
                        "answerExplanation": "<p>All three of these options are true.</p>\n<p>The write operation is <strong>more likely to take longer</strong> because the server has\nto wait for acknowledgement from a majority of nodes in the replica set. This\ntypically takes longer than waiting for only one acknowledgement.</p>\n<p>It is also <strong>less likely to be rolled back</strong>, because even if the primary node\nshuts down, there is at least one other node that's applied the write\noperation.</p>\n<p>And finally, it is <strong>more likely to block other operations in the application</strong>,\nbecause the write operation will take longer than the same operation issued\nwith write concern <tt class=\"docutils literal\">w: 1</tt>. However, this can be remedied by issuing a\n<tt class=\"docutils literal\">wtimeout</tt> that satisfies the application's need for timely acknowledgement.</p>\n"
                    },
                    {
                        "id": "5c35094163557422af95d3e7",
                        "correct": false,
                        "problemType": "multipleChoice",
                        "text": "You are required to perform a rolling upgrade on your running replica set. You\nhave upgraded the secondaries and are now ready to upgrade the primary. What\ncommand should you run on the primary before restarting it?",
                        "bookmarked": false,
                        "choices": [
                            {
                                "text": "<tt class=\"docutils literal\">rs.reconfig()</tt>",
                                "correct": false,
                                "checked": false
                            },
                            {
                                "text": "<tt class=\"docutils literal\">rs.slaveOk()</tt>",
                                "correct": false,
                                "checked": false
                            },
                            {
                                "text": "<tt class=\"docutils literal\">rs.stepDown()</tt>",
                                "correct": true,
                                "checked": false
                            },
                            {
                                "text": "<tt class=\"docutils literal\">rs.freeze()</tt>",
                                "correct": false,
                                "checked": false
                            },
                            {
                                "text": "<tt class=\"docutils literal\">rs.remove()</tt>",
                                "correct": false,
                                "checked": false
                            }
                        ],
                        "answerExplanation": "The correct answer is <tt class=\"docutils literal\">rs.stepDown()</tt>. This will insruct the primary that it\nshould step down. The primary will check there is an electable secondary and\nwait if necessary for a secondary to catch up. It will then step down if safe\nto do so."
                    },
                    {
                        "id": "5c3668d521a9c50319a3e273",
                        "correct": false,
                        "problemType": "checkAllThatApply",
                        "text": "Which collections in the <tt class=\"docutils literal\">local</tt> database are replicated by secondary nodes\nin a MongoDB replica set?",
                        "bookmarked": false,
                        "choices": [
                            {
                                "text": "<tt class=\"docutils literal\">oplog.rs</tt>",
                                "correct": true,
                                "checked": false
                            },
                            {
                                "text": "<tt class=\"docutils literal\">system.replSet</tt>",
                                "correct": false,
                                "checked": false
                            },
                            {
                                "text": "<tt class=\"docutils literal\">startup_log</tt>",
                                "correct": false,
                                "checked": false
                            }
                        ],
                        "answerExplanation": "<p><strong>Correct Answer</strong></p>\n<p><tt class=\"docutils literal\">oplog.rs</tt></p>\n<blockquote>\nThe oplog collection is replicated by secondary nodes to perform any new\noperations. This is the <strong>only</strong> collection in the <tt class=\"docutils literal\">local</tt> database that\nis replicated by secondary nodes.</blockquote>\n<p><strong>Incorrect Answers</strong></p>\n<p><tt class=\"docutils literal\">system.replSet</tt></p>\n<blockquote>\nThis collection stores information on the replica set, but it is not\nreplicated by secondaries.</blockquote>\n<p><tt class=\"docutils literal\">startup_log</tt></p>\n<blockquote>\nThis collection contains the options used to start the <tt class=\"docutils literal\">mongod</tt> process.\nIt is not replicated by secondaries.</blockquote>\n"
                    },
                    {
                        "id": "5a9b505597182d4140a45ec2",
                        "correct": false,
                        "problemType": "checkAllThatApply",
                        "text": "When connected to a replica set secondary node using the <tt class=\"docutils literal\">mongo</tt> shell, which\nof the following set of commands will return successfully?",
                        "bookmarked": false,
                        "choices": [
                            {
                                "text": "<tt class=\"docutils literal\"><span class=\"pre\">rs.setSlaveOk();</span> <span class=\"pre\">db.adminCommand({listDatabases:</span> 1})</tt>",
                                "correct": true,
                                "checked": false
                            },
                            {
                                "text": "<tt class=\"docutils literal\"><span class=\"pre\">rs.setSlaveOk();</span> <span class=\"pre\">db.newcollection.insert({&quot;name&quot;:</span> <span class=\"pre\">&quot;Nathan&quot;})</span></tt>",
                                "correct": false,
                                "checked": false
                            },
                            {
                                "text": "<tt class=\"docutils literal\">db.isMaster()</tt>",
                                "correct": true,
                                "checked": false
                            }
                        ],
                        "answerExplanation": "<p><strong>Incorrect Option:</strong></p>\n<ul>\n<li><p class=\"first\"><tt class=\"docutils literal\"><span class=\"pre\">rs.setSlaveOk();</span> <span class=\"pre\">db.newcollection.insert({&quot;name&quot;:</span> <span class=\"pre\">&quot;Nathan&quot;})</span></tt></p>\n<p>This command will fail since write operations cannot be performed in secondary\nnodes of a replica set.</p>\n</li>\n</ul>\n<p><strong>Correct Options:</strong></p>\n<ul>\n<li><p class=\"first\"><tt class=\"docutils literal\"><span class=\"pre\">rs.setSlaveOk();</span> <span class=\"pre\">db.adminCommand({listDatabases:</span> 1})</tt></p>\n<p>Reads on secondary nodes need to be explicit. In the <tt class=\"docutils literal\">mongo</tt> shell we enable\nreads on secondary nodes by preceding a read command with <tt class=\"docutils literal\">rs.setSlaveOk()</tt>,\ntherefore this <tt class=\"docutils literal\"><span class=\"pre\">db.adminCommand({listDatabases:</span> 1})</tt> would return\nsuccessfully.</p>\n</li>\n<li><p class=\"first\"><tt class=\"docutils literal\">db.isMaster()</tt></p>\n<p>The <tt class=\"docutils literal\">db.isMaster()</tt> returns a document that describes the role of the\n<tt class=\"docutils literal\">mongod</tt> instance to which we are connected. This command can be run on all\nnodes, regardless of the node current replica set role.</p>\n</li>\n</ul>\n"
                    },
                    {
                        "id": "5c336bdb599c82a4679654bf",
                        "correct": false,
                        "problemType": "checkAllThatApply",
                        "text": "<p>You have the following information for the <tt class=\"docutils literal\">members</tt> field in your\nreplicaset configuration document</p>\n<pre class=\"code sh literal-block\">\n<span class=\"literal string double\">&quot;members&quot;</span> : <span class=\"operator\">[</span>\n  <span class=\"operator\">{</span>\n    <span class=\"literal string double\">&quot;_id&quot;</span> : 0,\n    <span class=\"literal string double\">&quot;host&quot;</span> : <span class=\"literal string double\">&quot;acmecorp:27017&quot;</span>,\n    <span class=\"literal string double\">&quot;arbiterOnly&quot;</span> : false,\n    <span class=\"literal string double\">&quot;buildIndexes&quot;</span> : true,\n    <span class=\"literal string double\">&quot;hidden&quot;</span> : false,\n    <span class=\"literal string double\">&quot;priority&quot;</span> : 1,\n    <span class=\"literal string double\">&quot;tags&quot;</span> : <span class=\"operator\">{</span>\n\n    <span class=\"operator\">}</span>,\n    <span class=\"literal string double\">&quot;slaveDelay&quot;</span> : NumberLong<span class=\"operator\">(</span>0<span class=\"operator\">)</span>,\n    <span class=\"literal string double\">&quot;votes&quot;</span> : 1\n  <span class=\"operator\">}</span>,\n  <span class=\"operator\">{</span>\n    <span class=\"literal string double\">&quot;_id&quot;</span> : 1,\n    <span class=\"literal string double\">&quot;host&quot;</span> : <span class=\"literal string double\">&quot;acmecorp:27018&quot;</span>,\n    <span class=\"literal string double\">&quot;arbiterOnly&quot;</span> : false,\n    <span class=\"literal string double\">&quot;buildIndexes&quot;</span> : true,\n    <span class=\"literal string double\">&quot;hidden&quot;</span> : true,\n    <span class=\"literal string double\">&quot;priority&quot;</span> : 0,\n    <span class=\"literal string double\">&quot;tags&quot;</span> : <span class=\"operator\">{</span>\n\n    <span class=\"operator\">}</span>,\n    <span class=\"literal string double\">&quot;slaveDelay&quot;</span> : NumberLong<span class=\"operator\">(</span>3600<span class=\"operator\">)</span>,\n    <span class=\"literal string double\">&quot;votes&quot;</span> : 0\n  <span class=\"operator\">}</span>,\n  <span class=\"operator\">{</span>\n    <span class=\"literal string double\">&quot;_id&quot;</span> : 2,\n    <span class=\"literal string double\">&quot;host&quot;</span> : <span class=\"literal string double\">&quot;acmecorp:27019&quot;</span>,\n    <span class=\"literal string double\">&quot;arbiterOnly&quot;</span> : false,\n    <span class=\"literal string double\">&quot;buildIndexes&quot;</span> : true,\n    <span class=\"literal string double\">&quot;hidden&quot;</span> : false,\n    <span class=\"literal string double\">&quot;priority&quot;</span> : 1,\n    <span class=\"literal string double\">&quot;tags&quot;</span> : <span class=\"operator\">{</span>\n\n    <span class=\"operator\">}</span>,\n    <span class=\"literal string double\">&quot;slaveDelay&quot;</span> : NumberLong<span class=\"operator\">(</span>0<span class=\"operator\">)</span>,\n    <span class=\"literal string double\">&quot;votes&quot;</span> : 1\n  <span class=\"operator\">}</span>\n<span class=\"operator\">]</span>,\n</pre>\n<p>Select the following true statements.</p>\n",
                        "bookmarked": false,
                        "choices": [
                            {
                                "text": "Member 2 is more likely than member 0 to become primary",
                                "correct": false,
                                "checked": false
                            },
                            {
                                "text": "Member 1 can never become the primary",
                                "correct": true,
                                "checked": false
                            },
                            {
                                "text": "If member 0 or member 2 goes down, no new primary will be elected",
                                "correct": true,
                                "checked": false
                            }
                        ],
                        "answerExplanation": "<p>The correct answers are:</p>\n<ul class=\"simple\">\n<li>If member 0 or member 2 goes down, no new primary will be elected<ul>\n<li>This is because of the hidden node, member 1! Since it cannot vote, there\nwould be no majority to elect a new primary if member 0 or member 2 goes\ndown. An important consideration to keep in mind.</li>\n</ul>\n</li>\n<li>Member 1 can never become the primary<ul>\n<li>Because member 1 has a <cite>slaveDelay</cite>, it can never become the primary.</li>\n</ul>\n</li>\n</ul>\n"
                    },
                    {
                        "id": "5c3659666e70452e426f21ef",
                        "correct": false,
                        "problemType": "checkAllThatApply",
                        "text": "Which of the following commands can be used to retrieve the size of the\noplog in a MongoDB replica set?",
                        "bookmarked": false,
                        "choices": [
                            {
                                "text": "<tt class=\"docutils literal\">db.startup_log.stats()</tt>",
                                "correct": false,
                                "checked": false
                            },
                            {
                                "text": "<tt class=\"docutils literal\">rs.printReplicationInfo()</tt>",
                                "correct": true,
                                "checked": false
                            },
                            {
                                "text": "<tt class=\"docutils literal\">db.oplog.rs.stats()</tt>",
                                "correct": true,
                                "checked": false
                            }
                        ],
                        "answerExplanation": "<p><strong>Correct Answers</strong></p>\n<p><tt class=\"docutils literal\">rs.printReplicationInfo()</tt></p>\n<blockquote>\nThis will return the size of the oplog in both gigabytes and minutes.</blockquote>\n<p><tt class=\"docutils literal\">db.oplog.rs.stats()</tt></p>\n<blockquote>\nThis will return all available stats on the <tt class=\"docutils literal\">oplog.rs</tt> collection.</blockquote>\n<p><strong>Incorrect Answer</strong></p>\n<p><tt class=\"docutils literal\">db.startup_log.stats()</tt></p>\n<blockquote>\nThis will return all available stats on the <tt class=\"docutils literal\">startup_log</tt> collection,\nwhich does not tell us about the oplog.</blockquote>\n"
                    }
                ],
                "score": 0
            },
            {
                "id": "602dbef4bed1b67447eaa31e",
                "name": "Sharding",
                "total": 10,
                "problems": [
                    {
                        "id": "5c40df8995e658fa67acbb25",
                        "correct": false,
                        "problemType": "checkAllThatApply",
                        "text": "Which is true of scatter gather queries?",
                        "bookmarked": false,
                        "choices": [
                            {
                                "text": "the mongos has to go to each shard to check if the shard has the requested documents",
                                "correct": true,
                                "checked": false
                            },
                            {
                                "text": "scatter gather queries can be triggered by using your shard key in your query predicates",
                                "correct": false,
                                "checked": false
                            },
                            {
                                "text": "scatter gather queries are highly performant",
                                "correct": false,
                                "checked": false
                            }
                        ],
                        "answerExplanation": "<p><strong>Incorrect Options:</strong></p>\n<ul>\n<li><p class=\"first\"><em>scatter gather queries can be triggered by using your shard key in your query predicates</em></p>\n<p>Using the shard key in your query predicates prevents scatter gather queries\nby routing the query to the correct shard. This is due to the config server\nbeing aware of the distribution of the values across the cluster.</p>\n</li>\n<li><p class=\"first\"><em>scatter gather queries are highly performant</em></p>\n<p>Scatter gather queries are not performant as the mongos has to go to each\nshard to check if the requested documents are present.</p>\n</li>\n</ul>\n<p><strong>Correct Option</strong></p>\n<ul>\n<li><p class=\"first\"><em>the mongos has to go to each shard to check if the shard has the requested documents</em></p>\n<p>Not querying on your shard key causes scatter gather queries. As a result, the\nmongos has no way of checking which shard the data resides on. This causes the\nmongos needs to route the query to each shard to gather the result set.</p>\n</li>\n</ul>\n"
                    },
                    {
                        "id": "5c3d07ac9183fbf92fd8ba73",
                        "correct": false,
                        "problemType": "checkAllThatApply",
                        "text": "In order to store data in a sharded cluster in MongoDB, you <strong>must</strong> have:",
                        "bookmarked": false,
                        "choices": [
                            {
                                "text": "a mongos process",
                                "correct": true,
                                "checked": false
                            },
                            {
                                "text": "at least one shard",
                                "correct": true,
                                "checked": false
                            },
                            {
                                "text": "config servers",
                                "correct": true,
                                "checked": false
                            }
                        ],
                        "answerExplanation": "<p>All three of these options are true.</p>\n<p>In order to start a sharded cluster in MongoDB, you must have config servers,\nwhich will store chunk metadata and user information, a mongos process to\nroute requests to the correct shards, and at least one shard to store data.</p>\n"
                    },
                    {
                        "id": "5aa31bc996f30f818591a5a1",
                        "correct": false,
                        "problemType": "multipleChoice",
                        "text": "Where do all non-sharded collections get stored in a sharded cluster?",
                        "bookmarked": false,
                        "choices": [
                            {
                                "text": "Primary shard",
                                "correct": true,
                                "checked": false
                            },
                            {
                                "text": "In all primary shard nodes",
                                "correct": false,
                                "checked": false
                            },
                            {
                                "text": "mongos",
                                "correct": false,
                                "checked": false
                            },
                            {
                                "text": "In all secondaries shard nodes",
                                "correct": false,
                                "checked": false
                            },
                            {
                                "text": "Config server",
                                "correct": false,
                                "checked": false
                            }
                        ],
                        "answerExplanation": "<p><strong>Correct Option:</strong></p>\n<ul>\n<li><p class=\"first\">Primary shard</p>\n<p>All <a class=\"reference external\" href=\"https://docs.mongodb.com/manual/sharding/index.html#sharded-and-non-sharded-collections\">non-sharded collections</a> will be stored in the database primary shard.</p>\n</li>\n</ul>\n<p><strong>Incorrect Options:</strong></p>\n<ul>\n<li><p class=\"first\">Config server</p>\n<p>The config servers do not hold any application data. Just shard metadata\ninformation.</p>\n</li>\n<li><p class=\"first\">In all primary shard nodes</p>\n<p>Sharded collections documents will be distributed across all shards.\nNon-sharded are kept in the primary shard</p>\n</li>\n<li><p class=\"first\">In all secondaries shard nodes</p>\n<p>Sharded collections documents will be distributed across all shards.\nNon-sharded are kept in the primary shard</p>\n</li>\n<li><p class=\"first\">mongos</p>\n<p>The mongos does not hold any data.</p>\n</li>\n</ul>\n"
                    },
                    {
                        "id": "5aa34ba6c76aaf0ebdea9a91",
                        "correct": false,
                        "problemType": "multipleChoice",
                        "text": "Before sharding a collection, by running the <tt class=\"docutils literal\">sh.shardCollection</tt> command in\nthe <tt class=\"docutils literal\">mongo</tt> shell, which operation is <strong>required</strong>?",
                        "bookmarked": false,
                        "choices": [
                            {
                                "text": "drop all data from the collection",
                                "correct": false,
                                "checked": false
                            },
                            {
                                "text": "rename the collection",
                                "correct": false,
                                "checked": false
                            },
                            {
                                "text": "create an index on the shard key",
                                "correct": true,
                                "checked": false
                            },
                            {
                                "text": "load data into the collection",
                                "correct": false,
                                "checked": false
                            },
                            {
                                "text": "remove all shard key duplicates",
                                "correct": false,
                                "checked": false
                            }
                        ],
                        "answerExplanation": "<p>Before sharding a collection using <tt class=\"docutils literal\">sh.shardCollection</tt> command, the selected\nshard key needs to be supported by an index, therefore the correct answer is:</p>\n<ul class=\"simple\">\n<li>create an index on the shard key</li>\n</ul>\n<p>All other operations are not necessary, or desired, to enable sharding in a\ncollection.</p>\n"
                    },
                    {
                        "id": "5c49ec64414a09cbf6ab4a6d",
                        "correct": false,
                        "problemType": "multipleChoice",
                        "text": "How can you increase the cardinality of the shard key?",
                        "bookmarked": false,
                        "choices": [
                            {
                                "text": "Create an index on the shard key.",
                                "correct": false,
                                "checked": false
                            },
                            {
                                "text": "Increase the number of shards.",
                                "correct": false,
                                "checked": false
                            },
                            {
                                "text": "Increase the number of chunks.",
                                "correct": false,
                                "checked": false
                            },
                            {
                                "text": "Use a compound shard key.",
                                "correct": true,
                                "checked": false
                            },
                            {
                                "text": "Use multiple shard keys.",
                                "correct": false,
                                "checked": false
                            }
                        ],
                        "answerExplanation": "<p><strong>Correct Answer:</strong></p>\n<p><em>Use a compound shard key.</em></p>\n<blockquote>\nUsing a compound shard key creates more possibilities for the value of the\nshard key, by using each unique combination of all the fields in the key.</blockquote>\n<p><strong>Incorrect Answers:</strong></p>\n<p><em>Use multiple shard keys.</em></p>\n<blockquote>\nYou cannot shard on multiple keys in a collection.</blockquote>\n<p><em>Increase the number of shards.</em></p>\n<blockquote>\nAdding more shards will decrease the load on each shard, but this will not\nincrease the cardinality of the shard key.</blockquote>\n<p><em>Increase the number of chunks.</em></p>\n<blockquote>\nThis will be a <em>result</em> of increasing the cardinality of the shard key, not a\n<em>cause</em>.</blockquote>\n<p><em>Create an index on the shard key.</em></p>\n<blockquote>\nIt is already a requirement that the shard key has an index, therefore this\nwill not increase the cardinality of the shard key.</blockquote>\n"
                    },
                    {
                        "id": "5c3e0774a55c9fbb0de6e118",
                        "correct": false,
                        "problemType": "checkAllThatApply",
                        "text": "What is sharding?",
                        "bookmarked": false,
                        "choices": [
                            {
                                "text": "a method of distributing data across multiple machines",
                                "correct": true,
                                "checked": false
                            },
                            {
                                "text": "a method to ensure data availability",
                                "correct": false,
                                "checked": false
                            },
                            {
                                "text": "a way to vertically scale",
                                "correct": false,
                                "checked": false
                            }
                        ],
                        "answerExplanation": "<p>The correct answer is:</p>\n<ul class=\"simple\">\n<li>a method of distributing data across multiple machines</li>\n<li>a method to ensure data availability</li>\n</ul>\n<p>Is an <strong>incorrect</strong> answer. <em>Replication</em> is used to ensure data availability.</p>\n<ul class=\"simple\">\n<li>a way to vertically scale</li>\n</ul>\n<p>Is an <strong>incorrect</strong> answer.</p>\n<ul class=\"simple\">\n<li>Sharding is a way to horizontally scale when vertical scaling becomes either too\ncostly or you reach a data size where backups and restores will become unmanagable\nfor a single replica set. You can read more in the <a class=\"reference external\" href=\"https://docs.mongodb.com/manual/sharding/\">Sharding section of MongoDB documentation</a>.</li>\n</ul>\n"
                    },
                    {
                        "id": "5c3f57ebd9bfdc23a6c1a211",
                        "correct": false,
                        "problemType": "checkAllThatApply",
                        "text": "<p>You have the following operational requirements and benchmarks within your\norganization:</p>\n<blockquote>\n<ul class=\"simple\">\n<li>Full backup or restore times can never exceed 20 minutes</li>\n<li>Client read and writes can never exceed 95 ms latency</li>\n<li>The current machines are provisioned with 16GB of RAM and 4TB disk space</li>\n<li>Backup and recovery times with 1.5TB took 15 minutes each, respectively</li>\n<li>The next available server size is 32GB RAM and 8TB disk space with a monthly\ncost increase of 10% for double the performance.</li>\n</ul>\n</blockquote>\n<p>The application is expected to grow in users and resource consumption at a rate\nof 7% monthly. Consider the following scenarios that represent different\napplications:</p>\n<blockquote>\n<ul class=\"simple\">\n<li><em>Scenario A:</em> Your replica set nodes are consuming 10% of available RAM and\nyour database is 200GB, and a new law was passed in the EU requiring your\norganization to store certain data about EU customers within the EU. 66% of\nyour users are location within the Americas with an average read and write\nresponse time of 90ms.</li>\n<li><em>Scenario B:</em> Your replica set nodes are consuming 90% of available RAM and\nyour database is 400GB</li>\n<li><em>Scenario C:</em> Your replica set nodes are consuming 60% of a available RAM and\nyour database is 2.8TB</li>\n</ul>\n</blockquote>\n<p>Select the scenario(s) above where sharding should be considered.</p>\n",
                        "bookmarked": false,
                        "choices": [
                            {
                                "text": "A",
                                "correct": true,
                                "checked": false
                            },
                            {
                                "text": "B",
                                "correct": false,
                                "checked": false
                            },
                            {
                                "text": "C",
                                "correct": true,
                                "checked": false
                            }
                        ],
                        "answerExplanation": "<p>The correct answers are scenarios A and C.</p>\n<p><em>Scenario C:</em> While the cost of vertically scaling is acceptable, we're already\nusing 2.8TB of disk space. Considering we benchmarked a backup operation and\nrestore operation at 15 minutes each with 1.5TB of data, we're already beyond\nour SLAs. Sharding should have already been considered much sooner.</p>\n<p><em>Scenario A:</em> This is a real world scenario that zone sharding was designed to\naddress, and depending on the type of information your organization stores you\nmay be subject to regulations requiring you to store data in a specific\ngeographical area. Considering the majority of users are located in the Americas\napproaching SLA limits, sharding is more appropriate here than relocating all\ndata to the EU.</p>\n<p>Let's discuss the incorrect answer.</p>\n<p>In scenario B, we're consuming 10% of available disk (400GB) and 90% of\navailable RAM. This indicates quite an abundance of indexes for more performant\nreads. Based on benchmarks, backup and restore times are within acceptable SLAs\nand the cost to scale vertically is cheaper than the cost to scale horizontally.\nBased on the information provided, sharding is not appropriate in this scenario.</p>\n"
                    },
                    {
                        "id": "5c3fa5a4831ac81344409bd7",
                        "correct": false,
                        "problemType": "checkAllThatApply",
                        "text": "At which point does the balancer decide to start moving chunks from\none shard to another?",
                        "bookmarked": false,
                        "choices": [
                            {
                                "text": "zone sharding is used and some chunks are identified to be on the wrong shard",
                                "correct": true,
                                "checked": false
                            },
                            {
                                "text": "there has been a request to <em>drain</em> a shard due to a <tt class=\"docutils literal\">removeShard</tt> command",
                                "correct": true,
                                "checked": false
                            },
                            {
                                "text": "when some shards have too many chunks compared to others",
                                "correct": true,
                                "checked": false
                            }
                        ],
                        "answerExplanation": "<p><strong>Correct Options:</strong></p>\n<ul class=\"simple\">\n<li>when some shards have too many chunks compared to others</li>\n<li>zone sharding is used and some chunks are identified to be on the wrong shard</li>\n<li>there has been a request to <em>drain</em> a shard due to a <tt class=\"docutils literal\">removeShard</tt> command</li>\n</ul>\n<p>All of these scenarios trigger a chunk migration.</p>\n"
                    },
                    {
                        "id": "5c3f26fcbaf880de6f093683",
                        "correct": false,
                        "problemType": "checkAllThatApply",
                        "text": "The <tt class=\"docutils literal\">config</tt> database in a sharded cluster contains information such as:",
                        "bookmarked": false,
                        "choices": [
                            {
                                "text": "Hints to improve the performance of sharded queries",
                                "correct": false,
                                "checked": false
                            },
                            {
                                "text": "The distribution of chunks and chunk boundaries",
                                "correct": true,
                                "checked": false
                            },
                            {
                                "text": "The primary shard for a database",
                                "correct": true,
                                "checked": false
                            }
                        ],
                        "answerExplanation": "<p>The <tt class=\"docutils literal\">config</tt> database contains a lot of information, including which shard\nis the primary shard for a database and how information on chunk distribution\nand boundaries.</p>\n<p>It does not include performance hints.</p>\n"
                    },
                    {
                        "id": "5c33e30e0a96f53fc48aef25",
                        "correct": false,
                        "problemType": "multipleChoice",
                        "text": "<p>Given the following query:</p>\n<pre class=\"code js literal-block\">\n<span class=\"punctuation\">{</span>\n  <span class=\"name other\">find</span><span class=\"punctuation\">({</span><span class=\"literal string double\">&quot;cast&quot;</span><span class=\"operator\">:</span> <span class=\"literal string double\">&quot;Meryl Streep&quot;</span><span class=\"punctuation\">}).</span><span class=\"name other\">sort</span><span class=\"punctuation\">({</span><span class=\"literal string double\">&quot;year&quot;</span><span class=\"operator\">:</span><span class=\"literal number integer\">1</span><span class=\"punctuation\">}).</span><span class=\"name other\">skip</span><span class=\"punctuation\">(</span><span class=\"literal number integer\">100</span><span class=\"punctuation\">).</span><span class=\"name other\">limit</span><span class=\"punctuation\">(</span><span class=\"literal number integer\">20</span><span class=\"punctuation\">)</span>\n<span class=\"punctuation\">}</span>\n</pre>\n<p>And the following steps for executing such query in a sharded cluster:</p>\n<blockquote>\nroute - mongos send/route the query to the shards\nlimit_by_shards - each shard limits to 100+20 docs on their partial result set\nlimit_by_mongos - mongos limits to 20 docs\nskip_by_shards - each shard skips 100 docs on their partial result set\nskip_by_mongos - mongos skips of 100 docs\nsort_by_shards - each shard sorts their partial result set\nsort_by_mongos - mongos does a merge sort on the received documents</blockquote>\n<p>Which of the following has the right steps, and in the right order?</p>\n",
                        "bookmarked": false,
                        "choices": [
                            {
                                "text": "route, sort_by_shard, limit_by_shard, sort_by_mongos, skip_by_mongos, limit_by_mongos",
                                "correct": true,
                                "checked": false
                            },
                            {
                                "text": "route, limit_by_shard, sort_by_mongos, skip_by_mongos, limit_by_mongos",
                                "correct": false,
                                "checked": false
                            },
                            {
                                "text": "route, skip_by_shard, limit_by_shard, sort_by_shard, skip_by_mongos, limit_by_mongos, sort_by_mongos",
                                "correct": false,
                                "checked": false
                            },
                            {
                                "text": "route, sort_by_shard, skip_by_shard, limit_by_shard, sort_by_mongos, skip_by_mongos, limit_by_mongos",
                                "correct": false,
                                "checked": false
                            },
                            {
                                "text": "route, limit_by_shard, sort_by_mongos, limit_by_mongos, skip_by_mongos",
                                "correct": false,
                                "checked": false
                            }
                        ],
                        "answerExplanation": "<p><strong>Correct Answer:</strong></p>\n<p><em>route, sort_by_shard, limit_by_shard, sort_by_mongos, skip_by_mongos, limit_by_mongos</em></p>\n<p>Out of all the steps, the shards are not going to skip documents, because\nskipping the first X documents only make sense on the final result set.</p>\n<p>Remember the importance of having the shards responsible to sort their set,\nbecause they likely have an index to produce the ordered set.\nThe mongos, a lighter process than the <tt class=\"docutils literal\">mongod</tt>, performs a merge sort,\nwhich is a rather inexpensive operation compare to a complete sort.</p>\n<p>The shards must limit to not only 20 documents, but also returned the\npotentially skipped documents. For this reason, they will limit to\nthe sum of the <tt class=\"docutils literal\">limit()</tt> and <tt class=\"docutils literal\">skip()</tt> values.</p>\n"
                    }
                ],
                "score": 0
            }
        ]
    }
}